{"version":3,"sources":["logo.svg","redux/reducers/reducers.js","components/Selectors/Selectors.js","redux/actions/actions.js","components/ColorWheel/ColorWheel.js","components/Controls/Controls.js","components/ColorBlock/ColorBlock.js","components/Palette/Palette.js","components/ColorPicker/ColorPicker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","COLORS","LIGHTNESS","SATURATION","SELECTOR_COUNT","SELECTOR_ANGLE","SELECTOR_RADIUS","LINKED","DARK_MODE","HASH","QUOTES","RESET","reducers","combineReducers","actionReducer","state","action","type","CURRENT_COLORS","INDEX","COLOR","NEW_COLORS","length","fill","store","createStore","mapDispatchToProps","storeColor","val","index","Selectors","connect","selectorCount","selectorAngle","selectorRadius","lightness","saturation","linked","reset","props","svg","useRef","canvas","colorsContainer","circleRefs","circleCoordinates","currentActiveCircle","firstCircleAngle","setColor","x","y","key","pixel","current","getContext","getImageData","data","pixelColor","toString","toUpperCase","slice","style","stroke","getPointMath","mathVars","x0","getAttribute","y0","radius","Math","sqrt","d0x","d0y","angle","atan2","push","i","x1","y1","x2","y2","d1x","d1y","d2x","d2y","isInCircle","handleMouseUp","addMouseTrackerLinked","event","mouseX","pageX","offsetLeft","mouseY","pageY","offsetTop","radsFromMouse","radsOffset","setAttribute","cos","sin","addMouseTracker","id","e","removeEventListener","handleMouseDown","target","addEventListener","useEffect","radOffset","radIncrement","round","PI","useLayoutEffect","children","className","ref","width","height","viewBox","elements","cx","cy","r","stroke-width","filter","onMouseDown","onMouseUp","createCircles","ColorWheel","darkMode","canvasContext","clearRect","value","beginPath","gradient","createLinearGradient","xLUT","yLUT","addColorStop","strokeStyle","moveTo","lineTo","generateGradient","setLightness","setSaturation","setSelectorCount","resetState","setLinkedState","setSelectorAngle","setSelectorRadius","setDarkMode","Controls","onClick","min","max","step","onChange","toFixed","marginTop","ColorBlock","hover","textColor","color","backgroundColor","paddingTop","setQuotes","setHash","Palette","colors","hash","quotes","renderColorBlocks","map","paletteRef","colorArr","getState","substr","copy","copyAllColors","ColorPicker","colorContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd35a185.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import { combineReducers, createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  COLORS: [\"#FFF\", \"#FFF\", \"#FFF\"],\r\n  LIGHTNESS: 50,\r\n  SATURATION: 100,\r\n  SELECTOR_COUNT: 4,\r\n  SELECTOR_ANGLE: 180,\r\n  SELECTOR_RADIUS: 200,\r\n  LINKED: false,\r\n  DARK_MODE: false,\r\n  HASH: true,\r\n  QUOTES: true,\r\n  RESET: 0 //for comp. rerender if init state doesnt change a prop\r\n};\r\n\r\nexport const actionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_COLOR\":\r\n      let CURRENT_COLORS = [...state.COLORS];\r\n      CURRENT_COLORS[action.INDEX] = action.COLOR;\r\n      return {\r\n        ...state,\r\n        COLORS: CURRENT_COLORS\r\n      };\r\n    case \"SET_LIGHTNESS\":\r\n      return {\r\n        ...state,\r\n        LIGHTNESS: action.LIGHTNESS\r\n      };\r\n    case \"SET_SATURATION\":\r\n      return {\r\n        ...state,\r\n        SATURATION: action.SATURATION\r\n      };\r\n    case \"SET_SELECTOR_COUNT\":\r\n      let NEW_COLORS = [];\r\n      NEW_COLORS.length = action.SELECTOR_COUNT;\r\n      NEW_COLORS.fill(\"#FFF\");\r\n      return {\r\n        ...state,\r\n        COLORS: NEW_COLORS,\r\n        SELECTOR_COUNT: action.SELECTOR_COUNT\r\n      };\r\n    case \"SET_SELECTOR_ANGLE\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_ANGLE: action.SELECTOR_ANGLE\r\n      };\r\n    case \"SET_SELECTOR_RADIUS\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_RADIUS: action.SELECTOR_RADIUS\r\n      };\r\n    case \"SET_LINKED\":\r\n      return {\r\n        ...state,\r\n        LINKED: !state.LINKED\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_HASH\":\r\n      return {\r\n        ...state,\r\n        HASH: !state.HASH\r\n      };\r\n    case \"SET_QUOTES\":\r\n      return {\r\n        ...state,\r\n        QUOTES: !state.QUOTES\r\n      };\r\n    case \"RESET\":\r\n      return {\r\n        ...initialState,\r\n        RESET: 1 - state.RESET\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const reducers = combineReducers({\r\n  actionReducer\r\n});\r\n\r\n// store.js\r\nexport const store = createStore(reducers);\r\n","import React, { useEffect, useLayoutEffect, useRef, createRef } from \"react\";\r\nimport useDidMountEffect from \"../../util/useDidMountEffect\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { storeColor } from \"../../redux/actions/actions\";\r\n\r\nconst Selectors_ = props => {\r\n  const svg = useRef(null);\r\n  let { colorsContainer, canvas } = props;\r\n\r\n  let circleRefs = null;\r\n  let circleCoordinates = [];\r\n  let currentActiveCircle = null;\r\n  let firstCircleAngle = 0;\r\n\r\n  const setColor = (x, y, key) => {\r\n    let pixel = canvas.current.getContext(\"2d\").getImageData(x, y, 1, 1).data;\r\n    let pixelColor =\r\n      \"#\" +\r\n      ((1 << 24) + (pixel[0] << 16) + (pixel[1] << 8) + pixel[2])\r\n        .toString(16)\r\n        .toUpperCase()\r\n        .slice(1);\r\n    circleRefs[key].style.fill = pixelColor;\r\n    if (props.lightness < 50) {\r\n      circleRefs[key].style.stroke = \"#d4d4d4\";\r\n    } else {\r\n      circleRefs[key].style.stroke = \"#4d4d4d\";\r\n    }\r\n\r\n    props.storeColor(pixelColor, key);\r\n  };\r\n\r\n  const createCircles = () => {\r\n    let elements = [];\r\n    let radOffset = firstCircleAngle;\r\n    let radIncrement =\r\n      Math.round(props.selectorAngle / props.selectorCount) * (Math.PI / 180);\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = 250 + props.selectorRadius * Math.cos(radOffset);\r\n      let y = 250 + props.selectorRadius * Math.sin(radOffset);\r\n      elements.push(\r\n        <circle\r\n          cx={x}\r\n          cy={y}\r\n          r=\"15\"\r\n          stroke=\"#4d4d4d\"\r\n          stroke-width=\"0.5\"\r\n          style={{ filter: \"drop-shadow(0 0 4px #4d4d4d)\" }}\r\n          onMouseDown={e => handleMouseDown(e)}\r\n          onMouseUp={e => handleMouseUp(e)}\r\n          key={i}\r\n          id={`${i}`}\r\n        />\r\n      );\r\n      radOffset += radIncrement;\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  const getPointMath = () => {\r\n    //gets the current angles and radii of the points\r\n    //(called once after points are linked)\r\n    let mathVars = [];\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let radius = Math.sqrt((250 - x0) * (250 - x0) + (250 - y0) * (250 - y0));\r\n    let dx = 250;\r\n    let dy = 0;\r\n    let d0x = x0 - 250;\r\n    let d0y = y0 - 250;\r\n    let angle = Math.atan2(d0y, d0x) - Math.atan2(dy, dx);\r\n    mathVars.push({\r\n      angle: angle,\r\n      radius: radius\r\n    });\r\n    firstCircleAngle = angle;\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x1 = circleRefs[i - 1].getAttribute(\"cx\");\r\n      let y1 = circleRefs[i - 1].getAttribute(\"cy\");\r\n      let x2 = circleRefs[i].getAttribute(\"cx\");\r\n      let y2 = circleRefs[i].getAttribute(\"cy\");\r\n\r\n      let radius = Math.sqrt((250 - x2) * (250 - x2) + (250 - y2) * (250 - y2));\r\n\r\n      let d1x = x1 - 250;\r\n      let d1y = y1 - 250;\r\n      let d2x = x2 - 250;\r\n      let d2y = y2 - 250;\r\n\r\n      let angle = Math.atan2(d2y, d2x) - Math.atan2(d1y, d1x);\r\n      mathVars.push({\r\n        angle: angle,\r\n        radius: radius\r\n      });\r\n    }\r\n    return mathVars;\r\n  };\r\n\r\n  const isInCircle = (x, y) => {\r\n    if (Math.sqrt((250 - x) * (250 - x) + (250 - y) * (250 - y)) > 237) {\r\n      handleMouseUp();\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addMouseTrackerLinked = event => {\r\n    let mouseX = event.pageX - canvas.current.offsetLeft;\r\n    let mouseY = event.pageY - canvas.current.offsetTop;\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let d0x = x0 - 250;\r\n    let d0y = y0 - 250;\r\n    let radsFromMouse = Math.atan2(d0y, d0x);\r\n    let radsOffset = 0;\r\n    \r\n    if (isInCircle(mouseX, mouseY)) {\r\n      circleRefs[0].setAttribute(\"cx\", `${mouseX}`);\r\n      circleRefs[0].setAttribute(\"cy\", `${mouseY}`);\r\n\r\n      setColor(x0, y0, 0);\r\n\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        radsOffset += circleCoordinates[i].angle;\r\n\r\n        let x = circleRefs[i].getAttribute(\"cx\");\r\n        let y = circleRefs[i].getAttribute(\"cy\");\r\n\r\n        let angle = radsOffset + radsFromMouse;\r\n        let radius =\r\n          circleCoordinates[i].radius -\r\n          (circleCoordinates[0].radius -\r\n            Math.sqrt(\r\n              (250 - mouseX) * (250 - mouseX) + (250 - mouseY) * (250 - mouseY)\r\n            ));\r\n\r\n        if (radius < 0) radius = 0;\r\n        if (radius > 250) radius = 250;\r\n        circleRefs[i].setAttribute(\"cx\", `${250 + radius * Math.cos(angle)}`);\r\n        circleRefs[i].setAttribute(\"cy\", `${250 + radius * Math.sin(angle)}`);\r\n        setColor(x, y, i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addMouseTracker = event => {\r\n    let mouseX = event.pageX - canvas.current.offsetLeft;\r\n    let mouseY = event.pageY - canvas.current.offsetTop;\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      currentActiveCircle.setAttribute(\"cx\", `${mouseX}`);\r\n      currentActiveCircle.setAttribute(\"cy\", `${mouseY}`);\r\n      setColor(mouseX, mouseY, currentActiveCircle.id);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    currentActiveCircle = null;\r\n    if (!props.linked) {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n  const handleMouseDown = e => {\r\n    currentActiveCircle = e.target;\r\n    if (!props.linked) {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let radOffset = firstCircleAngle;\r\n    //createCircles();\r\n    let radIncrement =\r\n      Math.round(props.selectorAngle / props.selectorCount) * (Math.PI / 180);\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = 250 + props.selectorRadius * Math.cos(radOffset);\r\n      let y = 250 + props.selectorRadius * Math.sin(radOffset);\r\n      circleRefs[i].setAttribute(\"cx\", `${x}`);\r\n      circleRefs[i].setAttribute(\"cy\", `${y}`);\r\n      radOffset += radIncrement;\r\n    }\r\n  }, [\r\n    props.reset,\r\n    props.selectorCount,\r\n    props.selectorRadius\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let radOffset = circleCoordinates[0].angle;\r\n    //createCircles();\r\n    let radIncrement =\r\n      Math.round(props.selectorAngle / props.selectorCount) * (Math.PI / 180);\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = 250 + circleCoordinates[0].radius * Math.cos(radOffset);\r\n      let y = 250 + circleCoordinates[0].radius * Math.sin(radOffset);\r\n      circleRefs[i].setAttribute(\"cx\", `${x}`);\r\n      circleRefs[i].setAttribute(\"cy\", `${y}`);\r\n      radOffset += radIncrement;\r\n    }\r\n  }, [\r\n    props.selectorAngle\r\n  ]);\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = circleRefs[i].getAttribute(\"cx\");\r\n      let y = circleRefs[i].getAttribute(\"cy\");\r\n      setColor(x, y, i);\r\n    }\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    circleRefs = svg.current.children;\r\n    circleCoordinates = getPointMath();\r\n  });\r\n\r\n  return (\r\n    <svg\r\n      className=\"selector\"\r\n      ref={svg}\r\n      width=\"500\"\r\n      height=\"500\"\r\n      viewBox=\"0 0 500 500\"\r\n    >\r\n      {createCircles()}\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    linked: state.actionReducer.LINKED,\r\n    reset: state.actionReducer.RESET\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storeColor\r\n};\r\n\r\nconst Selectors = connect(mapStateToProps, mapDispatchToProps)(Selectors_);\r\n\r\nexport default Selectors;\r\n","//import { SET_COLOR } from \"./action-types\";\r\n\r\nexport const storeColor = (val, index) => (\r\n  { type: 'SET_COLOR', COLOR: val, INDEX: index }\r\n)\r\nexport const setLightness = (val) => (\r\n  { type: 'SET_LIGHTNESS', LIGHTNESS: val }\r\n)\r\nexport const setSaturation = (val) => (\r\n  { type: 'SET_SATURATION', SATURATION: val }\r\n)\r\nexport const setSelectorCount = (val) => (\r\n  { type: 'SET_SELECTOR_COUNT', SELECTOR_COUNT: val }\r\n)\r\nexport const setSelectorAngle = (val) => (\r\n  { type: 'SET_SELECTOR_ANGLE', SELECTOR_ANGLE: val }\r\n)\r\nexport const setSelectorRadius = (val) => (\r\n  { type: 'SET_SELECTOR_RADIUS', SELECTOR_RADIUS: val }\r\n)\r\nexport const setLinkedState = () => (\r\n  { type: 'SET_LINKED' }\r\n)\r\nexport const setDarkMode = () => (\r\n  { type: 'SET_DARK_MODE' }\r\n)\r\nexport const setCopyType = () => (\r\n  { type: 'SET_COPY_TYPE' }\r\n)\r\nexport const setQuotes = () => (\r\n  { type: 'SET_QUOTES' }\r\n)\r\nexport const setHash = () => (\r\n  { type: 'SET_HASH' }\r\n)\r\nexport const resetState = () => (\r\n  { type: 'RESET' }\r\n)\r\n","import React, {useLayoutEffect, useRef } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Selectors from \"../Selectors/Selectors\";\r\nimport * as xLUT from \"./xLUT.json\";\r\nimport * as yLUT from \"./yLUT.json\";\r\n\r\nconst ColorWheel_ = props => {\r\n  const canvas = useRef(null);\r\n\r\n  const generateGradient = () => {\r\n    let canvasContext = canvas.current.getContext(\"2d\");\r\n    canvasContext.clearRect(0, 0, 500, 500);\r\n    for (var i = 0; i < 3600; i += 1) {\r\n      let value = i / 10;\r\n      canvasContext.beginPath();\r\n      let gradient = canvasContext.createLinearGradient(\r\n        250,\r\n        250,\r\n        xLUT.default[value],\r\n        yLUT.default[value]\r\n      );\r\n      \r\n      gradient.addColorStop(\"0\", `${props.lightness > 45 ? \"white\" : \"black\"}`);\r\n      gradient.addColorStop(\"0.95\", `hsl(${value}, ${props.saturation}%, ${props.lightness}%)`);\r\n      gradient.addColorStop(\"0.95\", `${ props.darkMode ? '#262626': '#bdbdbd'}`);\r\n      gradient.addColorStop(\"1\", `${ props.darkMode ? '#333333': '#e3e3e3'}`);\r\n   \r\n      canvasContext.strokeStyle = gradient;\r\n      \r\n      canvasContext.moveTo(250, 250);\r\n      canvasContext.lineTo(xLUT.default[value], yLUT.default[value]);\r\n      canvasContext.stroke();\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    generateGradient();\r\n  });\r\n\r\n  return (\r\n    <div className=\"gradient\">\r\n        <Selectors\r\n          colorsContainer={props.colorsContainer}\r\n          canvas={canvas}\r\n        />\r\n      <canvas width={\"500\"} height={\"500\"} ref={canvas} />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst ColorWheel = connect(mapStateToProps)(ColorWheel_);\r\n\r\nexport default ColorWheel;\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setDarkMode\r\n} from \"../../redux/actions/actions\";\r\nimport \"./Controls.scss\";\r\n\r\nconst Controls_ = props => {\r\n  return (\r\n    <div className={`color-picker-controls ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button set-dark ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setDarkMode();\r\n          }}\r\n        >\r\n          {props.darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n        </button>\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">Lightness: {props.lightness}%</p>\r\n        <input\r\n          type=\"range\"\r\n          className=\"slider\"\r\n          min={10}\r\n          max={90}\r\n          step={5}\r\n          value={props.lightness}\r\n          onChange={val => {\r\n            props.setLightness(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">Saturation: {props.saturation}%</p>\r\n        <input\r\n          type=\"range\"\r\n          className=\"slider\"\r\n          min={10}\r\n          max={100}\r\n          step={5}\r\n          value={props.saturation}\r\n          onChange={val => {\r\n            props.setSaturation(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">\r\n          Number of Points: {props.selectorCount}\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          className=\"slider\"\r\n          min={1}\r\n          max={10}\r\n          step={1}\r\n          value={props.selectorCount}\r\n          onChange={val => {\r\n            props.setSelectorCount(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">\r\n          Point Spacing Angle:{\" \"}\r\n          {(\r\n            Math.round((props.selectorAngle / props.selectorCount) * 10) / 10\r\n          ).toFixed(1)}\r\n          º\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          className=\"slider\"\r\n          min={10}\r\n          max={360}\r\n          step={1}\r\n          value={props.selectorAngle}\r\n          onChange={val => {\r\n            props.setSelectorAngle(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">\r\n          Distance from Origin:{\" \"}\r\n          {(\r\n            Math.round((props.selectorRadius / 236) * 1000) / 10\r\n          ).toFixed(0)}\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          className=\"slider\"\r\n          min={1}\r\n          max={236}\r\n          step={1}\r\n          value={props.selectorRadius}\r\n          onChange={val => {\r\n            props.setSelectorRadius(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\" style={{marginTop: '25px'}}>\r\n        <button\r\n          className={`button ${props.linked ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setLinkedState();\r\n          }}\r\n        >\r\n          {props.linked ? \"Unlink\" : \"Link\"}\r\n        </button>\r\n        <button\r\n          className={`button ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.resetState();\r\n          }}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    linked: state.actionReducer.LINKED,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setDarkMode\r\n};\r\n\r\nconst Controls = connect(mapStateToProps, mapDispatchToProps)(Controls_);\r\n\r\nexport default Controls;\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport \"./ColorBlock.scss\";\r\n\r\nconst ColorBlock_ = (props) => {\r\n  const hover = useRef(null)\r\n  let height = 400 / props.selectorCount\r\n  let textColor = props.lightness < 50 ? \"#bdbdbd\" : \"#404040\";\r\n  let accentColor = props.lightness < 50 ? \"#404040\" :  \"hsla(0,0%,100%,0.8)\";\r\n  return (\r\n    <div\r\n      className=\"color-block\"\r\n      style={{\r\n        height: height,\r\n        color: textColor,\r\n        backgroundColor: props.color\r\n\r\n      }}\r\n    >\r\n      \r\n      <div className=\"edit-prompt\" ref={hover} style={{ height: height}}></div>\r\n      <div className=\"copy-prompt\" style={{height: height, paddingTop: `${(height-20)/2}px`}}>{props.color}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      lightness: state.actionReducer.LIGHTNESS,\r\n      selectorCount: state.actionReducer.SELECTOR_COUNT\r\n    };\r\n  }\r\n  \r\n  const ColorBlock = connect(mapStateToProps)(ColorBlock_);\r\n  \r\n  export default ColorBlock;\r\n  ","import React from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"../../redux/reducers/reducers\";\r\nimport ColorBlock from \"../ColorBlock/ColorBlock\";\r\nimport { setQuotes, setHash } from \"../../redux/actions/actions\";\r\nimport \"./Palette.scss\";\r\nimport \"../../Globals.scss\";\r\n\r\nconst Palette_ = props => {\r\n  const copyAllColors = () => {\r\n    let colorArr = [...store.getState().actionReducer.COLORS];\r\n\r\n    for (let i = 0; i < colorArr.length; i++) {\r\n      if(!props.hash){\r\n        colorArr[i] = colorArr[i].substr(1)\r\n      }\r\n      if(props.quotes){\r\n        colorArr[i] = `'${colorArr[i]}'`\r\n      }\r\n    }\r\n\r\n    copy(colorArr);\r\n  };\r\n\r\n  const renderColorBlocks = props.colors.map((color, i) => (\r\n    <ColorBlock color={color} key={i} />\r\n  ));\r\n\r\n  return (\r\n    <div className={`colors-wrapper ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"colors-container\" ref={props.paletteRef}>\r\n        {renderColorBlocks}\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.hash ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setHash();\r\n          }}\r\n        >\r\n          Hash\r\n        </button>\r\n        <button\r\n          className={`button ${props.quotes ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setQuotes();\r\n          }}\r\n        >\r\n          Quotes\r\n        </button>\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            copyAllColors();\r\n          }}\r\n        >\r\n          Copy all\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    colors: state.actionReducer.COLORS,\r\n    hash: state.actionReducer.HASH,\r\n    quotes: state.actionReducer.QUOTES,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setQuotes,\r\n  setHash\r\n};\r\n\r\nconst Palette = connect(mapStateToProps, mapDispatchToProps)(Palette_);\r\n\r\nexport default Palette;\r\n","import React, { useRef } from \"react\";\r\nimport ColorWheel from \"../ColorWheel/ColorWheel\";\r\nimport Controls from \"../Controls/Controls\";\r\nimport Palette from \"../Palette/Palette\";\r\nimport \"./ColorPicker.scss\";\r\nimport \"../Controls/Controls.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ColorPicker_ = props => {\r\n  const colorContainer = useRef(null);\r\n\r\n  return (\r\n    <div className={`color-picker-container ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"boxes\">\r\n        <Controls />\r\n        <ColorWheel colorsContainer={colorContainer} />\r\n        <Palette paletteRef={colorContainer} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    linked: state.actionReducer.LINKED,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst ColorPicker = connect(mapStateToProps)(ColorPicker_);\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.scss\";\r\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\n\r\nconst App_ = (props) => {\r\n  return (\r\n    <div className={`App ${props.darkMode ? \"dark\" : \"\"}`}>\r\n     \r\n      <ColorPicker />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst App = connect(mapStateToProps)(App_);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store}  from \"./redux/reducers/reducers\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nconst colorReducer = function(state = 0, action) {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    case \"DECREMENT\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}