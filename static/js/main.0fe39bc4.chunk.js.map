{"version":3,"sources":["redux/reducers/reducers.js","redux/actions/actions.js","components/Selectors/Selectors.js","constants/constants.js","components/ColorWheel/ColorWheel.js","components/Controls/Controls.js","components/ColorBlock/ColorBlock.js","components/Palette/Palette.js","components/ColorPicker/ColorPicker.js","App.js","serviceWorker.js","index.js"],"names":["initialState","COLORS","LIGHTNESS","SATURATION","SELECTOR_COUNT","SELECTOR_ANGLE","SELECTOR_RADIUS","SELECTOR_STAGGER","CLUSTER_ANGLE","LINKED","DARK_MODE","HASH","QUOTES","PRESET","RESET","reducers","combineReducers","actionReducer","state","action","type","CURRENT_COLORS","INDEX","COLOR","NEW_COLORS","length","fill","store","createStore","setLinkedState","setDarkMode","resetState","mapDispatchToProps","storeColor","val","index","Selectors","connect","selectorCount","selectorAngle","selectorRadius","selectorStagger","lightness","saturation","linked","reset","preset","clusterAngle","props","svg","useRef","canvas","colorsContainer","canvasPosX","canvasPosY","circleRefs","circleCoordinates","currentActiveCircle","firstCircleAngle","setColor","x","y","key","pixel","current","getContext","getImageData","data","pixelColor","toString","toUpperCase","slice","style","stroke","setHarmony","radOffset","harmony","total","count","i","Math","round","push","PI","getPointMath","mathVars","x0","getAttribute","y0","radius","sqrt","d0x","d0y","angle","atan2","x1","y1","x2","y2","d1x","d1y","d2x","d2y","isInCircle","handleMouseUp","addMouseTrackerLinked","event","mouseX","pageX","mouseY","pageY","radsFromMouse","radsOffset","setAttribute","cos","sin","addMouseTracker","id","e","removeEventListener","handleMouseDown","rect","getBoundingClientRect","left","top","target","addEventListener","useEffect","staggerOffset","useLayoutEffect","children","className","ref","width","colorWheelRadius","height","viewBox","elements","cx","cy","r","stroke-width","filter","onMouseDown","onMouseUp","createCircles","ColorWheel","darkMode","canvasContext","clearRect","value","rad","beginPath","gradient","createLinearGradient","addColorStop","strokeStyle","moveTo","lineTo","generateGradient","onClick","setLightness","setSaturation","setSelectorCount","setSelectorAngle","setSelectorRadius","setSelectorStagger","setClusterAngle","setPreset","Controls","useState","tab","setTab","staggerSlider","selectorCountSlider","display","marginTop","toFixed","min","max","step","onChange","defaultValue","ColorBlock","hover","textColor","color","backgroundColor","paddingTop","setQuotes","setHash","Palette","colors","hash","quotes","renderColorBlocks","map","paletteRef","colorArr","getState","substr","copy","copyAllColors","ColorPicker","colorContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0fe39bc4.chunk.js","sourcesContent":["import { combineReducers, createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  COLORS: [\"#FFF\", \"#FFF\", \"#FFF\"],\r\n  LIGHTNESS: 50,\r\n  SATURATION: 100,\r\n  SELECTOR_COUNT: 4,\r\n  SELECTOR_ANGLE: 180,\r\n  SELECTOR_RADIUS: 118,\r\n  SELECTOR_STAGGER: 0,\r\n  CLUSTER_ANGLE: 30,\r\n  LINKED: false,\r\n  DARK_MODE: false,\r\n  HASH: true,\r\n  QUOTES: true,\r\n  PRESET: 1,\r\n  RESET: 0 //for comp. rerender if init state doesnt change a prop\r\n};\r\n\r\nexport const actionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_COLOR\":\r\n      let CURRENT_COLORS = [...state.COLORS];\r\n      CURRENT_COLORS[action.INDEX] = action.COLOR;\r\n      return {\r\n        ...state,\r\n        COLORS: CURRENT_COLORS\r\n      };\r\n    case \"SET_LIGHTNESS\":\r\n      return {\r\n        ...state,\r\n        LIGHTNESS: action.LIGHTNESS\r\n      };\r\n    case \"SET_SATURATION\":\r\n      return {\r\n        ...state,\r\n        SATURATION: action.SATURATION\r\n      };\r\n    case \"SET_SELECTOR_COUNT\":\r\n      let NEW_COLORS = [];\r\n      NEW_COLORS.length = action.SELECTOR_COUNT;\r\n      NEW_COLORS.fill(\"#FFF\");\r\n      return {\r\n        ...state,\r\n        COLORS: NEW_COLORS,\r\n        SELECTOR_COUNT: action.SELECTOR_COUNT\r\n      };\r\n    case \"SET_SELECTOR_ANGLE\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_ANGLE: action.SELECTOR_ANGLE\r\n      };\r\n    case \"SET_SELECTOR_RADIUS\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_RADIUS: action.SELECTOR_RADIUS\r\n      };\r\n    case \"SET_SELECTOR_STAGGER\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_STAGGER: action.SELECTOR_STAGGER\r\n      };\r\n    case \"SET_LINKED\":\r\n      return {\r\n        ...state,\r\n        LINKED: !state.LINKED\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_HASH\":\r\n      return {\r\n        ...state,\r\n        HASH: !state.HASH\r\n      };\r\n    case \"SET_QUOTES\":\r\n      return {\r\n        ...state,\r\n        QUOTES: !state.QUOTES\r\n      };\r\n    case \"SET_PRESET\":\r\n      if (action.PRESET === 2) {\r\n        return {\r\n          ...initialState,\r\n          SELECTOR_ANGLE: 360,\r\n          DARK_MODE: state.DARK_MODE,\r\n          PRESET: action.PRESET,\r\n          CLUSTER_ANGLE: 20\r\n        };\r\n      } else if (action.PRESET === 3) {\r\n        return {\r\n          ...initialState,\r\n          SELECTOR_ANGLE: 360,\r\n          DARK_MODE: state.DARK_MODE,\r\n          PRESET: action.PRESET,\r\n          CLUSTER_ANGLE: 16\r\n        };\r\n      } else if (action.PRESET === 4) {\r\n        return {\r\n          ...initialState,\r\n          SELECTOR_ANGLE: 360,\r\n          DARK_MODE: state.DARK_MODE,\r\n          PRESET: action.PRESET,\r\n          CLUSTER_ANGLE: 12\r\n        };\r\n      } else if (action.PRESET === 5) {\r\n        return {\r\n          ...initialState,\r\n          SELECTOR_ANGLE: 360,\r\n          DARK_MODE: state.DARK_MODE,\r\n          PRESET: action.PRESET,\r\n          CLUSTER_ANGLE: 15\r\n        };\r\n      } else {\r\n        return {\r\n          ...initialState,\r\n          SELECTOR_COUNT: state.SELECTOR_COUNT,\r\n          SELECTOR_ANGLE: 360,\r\n          PRESET: action.PRESET\r\n        };\r\n      }\r\n    case \"SET_CLUSTER_ANGLE\":\r\n      return {\r\n        ...state,\r\n        CLUSTER_ANGLE: action.CLUSTER_ANGLE\r\n      };\r\n    case \"RESET\":\r\n      return {\r\n        ...initialState,\r\n        SELECTOR_COUNT: state.SELECTOR_COUNT,\r\n        DARK_MODE: state.DARK_MODE,\r\n        RESET: 1 - state.RESET\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const reducers = combineReducers({\r\n  actionReducer\r\n});\r\n\r\n// store.js\r\nexport const store = createStore(reducers);\r\n","//import { SET_COLOR } from \"./action-types\";\r\n\r\nexport const storeColor = (val, index) => (\r\n  { type: 'SET_COLOR', COLOR: val, INDEX: index }\r\n)\r\nexport const setLightness = (val) => (\r\n  { type: 'SET_LIGHTNESS', LIGHTNESS: val }\r\n)\r\nexport const setSaturation = (val) => (\r\n  { type: 'SET_SATURATION', SATURATION: val }\r\n)\r\nexport const setSelectorCount = (val) => (\r\n  { type: 'SET_SELECTOR_COUNT', SELECTOR_COUNT: val }\r\n)\r\nexport const setSelectorAngle = (val) => (\r\n  { type: 'SET_SELECTOR_ANGLE', SELECTOR_ANGLE: val }\r\n)\r\nexport const setSelectorRadius = (val) => (\r\n  { type: 'SET_SELECTOR_RADIUS', SELECTOR_RADIUS: val }\r\n)\r\nexport const setSelectorStagger = (val) => (\r\n  { type: 'SET_SELECTOR_STAGGER', SELECTOR_STAGGER: val }\r\n)\r\nexport const setLinkedState = () => (\r\n  { type: 'SET_LINKED' }\r\n)\r\nexport const setDarkMode = () => (\r\n  { type: 'SET_DARK_MODE' }\r\n)\r\nexport const setCopyType = () => (\r\n  { type: 'SET_COPY_TYPE' }\r\n)\r\nexport const setQuotes = () => (\r\n  { type: 'SET_QUOTES' }\r\n)\r\nexport const setHash = () => (\r\n  { type: 'SET_HASH' }\r\n)\r\nexport const setPreset = (val) => (\r\n  { type: 'SET_PRESET', PRESET: val }\r\n)\r\nexport const setClusterAngle = (val) => (\r\n  { type: 'SET_CLUSTER_ANGLE', CLUSTER_ANGLE: val }\r\n)\r\nexport const resetState = () => (\r\n  { type: 'RESET' }\r\n)\r\n","import React, { useEffect, useLayoutEffect, useRef, createRef } from \"react\";\r\nimport useDidMountEffect from \"../../util/useDidMountEffect\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { storeColor } from \"../../redux/actions/actions\";\r\n\r\nimport {colorWheelRadius} from \"../../constants/constants\";\r\n\r\nconst Selectors_ = props => {\r\n  const svg = useRef(null);\r\n  let { colorsContainer, canvas } = props;\r\n  let canvasPosX = 0;\r\n  let canvasPosY = 0;\r\n  let circleRefs = null;\r\n  let circleCoordinates = [];\r\n  let currentActiveCircle = null;\r\n  let firstCircleAngle = 0;\r\n\r\n  const setColor = (x, y, key) => {\r\n    let pixel = canvas.current.getContext(\"2d\").getImageData(x, y, 1, 1).data;\r\n    let pixelColor =\r\n      \"#\" +\r\n      ((1 << 24) + (pixel[0] << 16) + (pixel[1] << 8) + pixel[2])\r\n        .toString(16)\r\n        .toUpperCase()\r\n        .slice(1);\r\n    circleRefs[key].style.fill = pixelColor;\r\n    if (props.lightness < 50) {\r\n      circleRefs[key].style.stroke = \"#d4d4d4\";\r\n    } else {\r\n      circleRefs[key].style.stroke = \"#4d4d4d\";\r\n    }\r\n\r\n    props.storeColor(pixelColor, key);\r\n  };\r\n\r\n  const setHarmony = () => {\r\n    //sets the angle of the polar offset from +X-axis\r\n    let radOffset;\r\n    let harmony = {total: 0, count: 1};\r\n    if (props.preset != 1 && props.selectorCount != props.preset){\r\n      radOffset = [0,0]\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        if(harmony.count === Math.round(props.selectorCount/props.preset)){\r\n          harmony.total++\r\n          harmony.count = 0;\r\n          radOffset.push(radOffset[i] = (Math.round(props.selectorAngle / props.preset) * (Math.PI / 180)) * harmony.total)\r\n        }\r\n        else {\r\n          radOffset.push(radOffset[i] += props.clusterAngle * (Math.PI / 180))\r\n        }\r\n        harmony.count++;\r\n      }\r\n    }\r\n    else {\r\n      radOffset = [firstCircleAngle]\r\n      for (let i = 0; i < props.selectorCount; i++) {\r\n        radOffset.push(radOffset[i] + Math.round(props.selectorAngle / props.selectorCount) * (Math.PI / 180))\r\n      }\r\n    }\r\n    return radOffset\r\n  }\r\n\r\n  const createCircles = () => {\r\n    let elements = [];\r\n    let radOffset = setHarmony()\r\n\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = colorWheelRadius + props.selectorRadius * Math.cos(radOffset[i]);\r\n      let y = colorWheelRadius + props.selectorRadius * Math.sin(radOffset[i]);\r\n      elements.push(\r\n        <circle\r\n          cx={x}\r\n          cy={y}\r\n          r=\"15\"\r\n          stroke=\"#4d4d4d\"\r\n          stroke-width=\"0.5\"\r\n          style={{ filter: \"drop-shadow(0 0 4px #4d4d4d)\" }}\r\n          onMouseDown={e => handleMouseDown(e)}\r\n          onMouseUp={e => handleMouseUp(e)}\r\n          key={i}\r\n          id={`${i}`}\r\n        />\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  const getPointMath = () => {\r\n    //gets the current angles and radii of the points\r\n    //(called once after points are linked)\r\n    let mathVars = [];\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let radius = Math.sqrt((colorWheelRadius - x0) * (colorWheelRadius - x0) + (colorWheelRadius - y0) * (colorWheelRadius - y0));\r\n    let dx = colorWheelRadius;\r\n    let dy = 0;\r\n    let d0x = x0 - colorWheelRadius;\r\n    let d0y = y0 - colorWheelRadius;\r\n    let angle = Math.atan2(d0y, d0x) - Math.atan2(dy, dx);\r\n    mathVars.push({\r\n      angle: angle,\r\n      radius: radius\r\n    });\r\n    firstCircleAngle = angle;\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x1 = circleRefs[i - 1].getAttribute(\"cx\");\r\n      let y1 = circleRefs[i - 1].getAttribute(\"cy\");\r\n      let x2 = circleRefs[i].getAttribute(\"cx\");\r\n      let y2 = circleRefs[i].getAttribute(\"cy\");\r\n\r\n      let radius = Math.sqrt((colorWheelRadius - x2) * (colorWheelRadius - x2) + (colorWheelRadius - y2) * (colorWheelRadius - y2));\r\n\r\n      let d1x = x1 - colorWheelRadius;\r\n      let d1y = y1 - colorWheelRadius;\r\n      let d2x = x2 - colorWheelRadius;\r\n      let d2y = y2 - colorWheelRadius;\r\n\r\n      let angle = Math.atan2(d2y, d2x) - Math.atan2(d1y, d1x);\r\n      mathVars.push({\r\n        angle: angle,\r\n        radius: radius\r\n      });\r\n    }\r\n    return mathVars;\r\n  };\r\n\r\n  const isInCircle = (x, y) => {\r\n   if (Math.sqrt((colorWheelRadius - x) * (colorWheelRadius - x) + (colorWheelRadius - y) * (colorWheelRadius - y)) > (0.95*colorWheelRadius)) {\r\n      handleMouseUp();\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addMouseTrackerLinked = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let d0x = x0 - colorWheelRadius;\r\n    let d0y = y0 - colorWheelRadius;\r\n    let radsFromMouse = Math.atan2(d0y, d0x);\r\n    let radsOffset = 0;\r\n\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      circleRefs[0].setAttribute(\"cx\", `${mouseX}`);\r\n      circleRefs[0].setAttribute(\"cy\", `${mouseY}`);\r\n\r\n      setColor(x0, y0, 0);\r\n\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        radsOffset += circleCoordinates[i].angle;\r\n\r\n        let x = circleRefs[i].getAttribute(\"cx\");\r\n        let y = circleRefs[i].getAttribute(\"cy\");\r\n\r\n        let angle = radsOffset + radsFromMouse;\r\n        let radius =\r\n          circleCoordinates[i].radius -\r\n          (circleCoordinates[0].radius -\r\n            Math.sqrt(\r\n              (colorWheelRadius - mouseX) * (colorWheelRadius - mouseX) + (colorWheelRadius - mouseY) * (colorWheelRadius - mouseY)\r\n            ));\r\n\r\n        if (radius < 0) radius = 0;\r\n        if (radius > colorWheelRadius) radius = colorWheelRadius;\r\n        circleRefs[i].setAttribute(\"cx\", `${colorWheelRadius + radius * Math.cos(angle)}`);\r\n        circleRefs[i].setAttribute(\"cy\", `${colorWheelRadius + radius * Math.sin(angle)}`);\r\n        setColor(x, y, i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addMouseTracker = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      currentActiveCircle.setAttribute(\"cx\", `${mouseX}`);\r\n      currentActiveCircle.setAttribute(\"cy\", `${mouseY}`);\r\n      setColor(mouseX, mouseY, currentActiveCircle.id);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    currentActiveCircle = null;\r\n    if (!props.linked) {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n  const handleMouseDown = e => {\r\n    let rect = canvas.current.getBoundingClientRect()\r\n    canvasPosX = rect.left;\r\n    canvasPosY = rect.top;\r\n    currentActiveCircle = e.target;\r\n    if (!props.linked) {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let radOffset = setHarmony();\r\n    let staggerOffset = 0;\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = colorWheelRadius + (props.selectorRadius - staggerOffset) * Math.cos(radOffset[i]);\r\n      let y = colorWheelRadius + (props.selectorRadius - staggerOffset) * Math.sin(radOffset[i]);\r\n      circleRefs[i].setAttribute(\"cx\", `${x}`);\r\n      circleRefs[i].setAttribute(\"cy\", `${y}`);\r\n      staggerOffset += props.selectorStagger / props.selectorCount\r\n    }\r\n  }, [props.selectorStagger, props.selectorCount, props.selectorRadius,  props.selectorAngle, props.clusterAngle, props.reset]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = circleRefs[i].getAttribute(\"cx\");\r\n      let y = circleRefs[i].getAttribute(\"cy\");\r\n      setColor(x, y, i);\r\n    }\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    circleRefs = svg.current.children;\r\n    circleCoordinates = getPointMath();\r\n  });\r\n\r\n  return (\r\n    <svg\r\n      className=\"selector\"\r\n      ref={svg}\r\n      width={`${colorWheelRadius*2}`}\r\n      height={`${colorWheelRadius*2}`}\r\n      viewBox={`0 0 ${colorWheelRadius*2} ${colorWheelRadius*2}`}\r\n    >\r\n      {createCircles()}\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    linked: state.actionReducer.LINKED,\r\n    reset: state.actionReducer.RESET,\r\n    preset: state.actionReducer.PRESET,\r\n    clusterAngle: state.actionReducer.CLUSTER_ANGLE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storeColor\r\n};\r\n\r\nconst Selectors = connect(mapStateToProps, mapDispatchToProps)(Selectors_);\r\n\r\nexport default Selectors;\r\n","export const colorWheelRadius = 250;","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetState, setLinkedState } from \"../../redux/actions/actions\";\r\nimport Selectors from \"../Selectors/Selectors\";\r\nimport * as xLUT from \"./xLUT.json\";\r\nimport * as yLUT from \"./yLUT.json\";\r\nimport {colorWheelRadius} from \"../../constants/constants\"\r\nimport \"./ColorWheel.scss\";\r\n\r\nconst ColorWheel_ = props => {\r\n  const canvas = useRef(null);\r\n\r\n  const generateGradient = () => {\r\n    let canvasContext = canvas.current.getContext(\"2d\");\r\n    canvasContext.clearRect(0, 0, colorWheelRadius*2, colorWheelRadius*2);\r\n    for (var i = 0; i < 3600; i += 1) {\r\n      let value = i / 10;\r\n       let rad = ((value - 90) * Math.PI) / 180;\r\n       let x = colorWheelRadius + colorWheelRadius * Math.cos(-rad)\r\n       let y = colorWheelRadius + colorWheelRadius * Math.sin(-rad)\r\n      canvasContext.beginPath();\r\n      let gradient = canvasContext.createLinearGradient(\r\n        colorWheelRadius,\r\n        colorWheelRadius,\r\n        x, y\r\n        /*xLUT.default[value],\r\n        yLUT.default[value]*/\r\n      );\r\n\r\n      gradient.addColorStop(\"0\", `${props.lightness > 45 ? \"white\" : \"black\"}`);\r\n      gradient.addColorStop(\r\n        \"0.95\",\r\n        `hsl(${value}, ${props.saturation}%, ${props.lightness}%)`\r\n      );\r\n      gradient.addColorStop(\r\n        \"0.95\",\r\n        `${props.darkMode ? \"#212121\" : \"#b5b5b5\"}`\r\n      );\r\n      gradient.addColorStop(\"1\", `${props.darkMode ? \"#212121\" : \"#b5b5b5\"}`);\r\n\r\n      canvasContext.strokeStyle = gradient;\r\n\r\n      canvasContext.moveTo(colorWheelRadius, colorWheelRadius);\r\n      canvasContext.lineTo(x, y);\r\n      canvasContext.stroke();\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    generateGradient();\r\n  });\r\n\r\n  return (\r\n    <div className={`color-wheel ui-block ${props.darkMode ? \"dark\" : \"\"}`} style={{height: `${colorWheelRadius*2}`, width: `${colorWheelRadius*2}`}}>\r\n      <button\r\n        className={`button button-left ${props.linked ? \"active\" : \"\"} ${\r\n          props.darkMode ? \"dark\" : \"\"\r\n        }`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.setLinkedState();\r\n        }}\r\n      >\r\n        {props.linked ? \"Unlink\" : \"Link\"}\r\n      </button>\r\n      <div className=\"gradient\" >\r\n        <Selectors colorsContainer={props.colorsContainer} canvas={canvas} />\r\n        <canvas width={`${colorWheelRadius*2}`} height={`${colorWheelRadius*2}`} ref={canvas} />\r\n      </div>\r\n\r\n      <button\r\n        className={`button button-right ${props.darkMode ? \"dark\" : \"\"}`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.resetState();\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    linked: state.actionReducer.LINKED\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  resetState,\r\n  setLinkedState\r\n};\r\n\r\nconst ColorWheel = connect(mapStateToProps, mapDispatchToProps)(ColorWheel_);\r\n\r\nexport default ColorWheel;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode,\r\n  setClusterAngle,\r\n  setPreset\r\n} from \"../../redux/actions/actions\";\r\nimport \"./Controls.scss\";\r\nimport \"./Slider.scss\";\r\n\r\nconst Controls_ = props => {\r\n  const [tab, setTab] = useState(true);\r\n  const staggerSlider = useRef(null);\r\n  const selectorCountSlider = useRef(null);\r\n\r\n  useEffect(() => {\r\n    props.setSelectorStagger(staggerSlider.current.value);\r\n  }, [props.selectorRadius]);\r\n\r\n  useEffect(() => {\r\n    switch(props.preset){\r\n      case 2:\r\n        props.setSelectorCount(6);\r\n        break;\r\n      case 3:\r\n        props.setSelectorCount(9);\r\n        break;\r\n      case 4:\r\n        props.setSelectorCount(12);\r\n        break;\r\n      case 5:\r\n        props.setSelectorCount(10);\r\n        break;\r\n    }\r\n  }, [props.preset]);\r\n\r\n  return (\r\n    <div className={`controls ui-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${tab ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setTab(true);\r\n          }}\r\n        >\r\n          Settings\r\n        </button>\r\n        <button\r\n          className={`button ${tab ? \"\" : \"active\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setTab(false);\r\n          }}\r\n        >\r\n          Presets\r\n        </button>\r\n      </div>\r\n      <div className=\"presets\" style={{ display: tab ? \"none\" : \"\" }}>\r\n        <div>\r\n        <div className=\"presets-grid\">\r\n          <button\r\n            className={`preset dyad ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 2 ? \"active\" : \"\"\r\n            } `}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 2)) props.setPreset(2);\r\n            }}\r\n          />\r\n          <button\r\n            className={`preset triad  ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 3 ? \"active\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 3)) props.setPreset(3);\r\n            }}\r\n          />\r\n          <button\r\n            className={`preset tetrad  ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 4 ? \"active\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 4)) props.setPreset(4);\r\n            }}\r\n          />\r\n          <button\r\n            className={`preset pentad  ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 5 ? \"active\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 5)) props.setPreset(5);\r\n            }}\r\n          />\r\n          \r\n        </div>\r\n        </div>\r\n        <div className=\"control-container slider-container\" style={{marginTop: '80px'}}>\r\n          <p className=\"slider-label\">Cluster Spacing Angle:{\" \"}\r\n            {(\r\n              Math.round((props.clusterAngle) * 10) / 10\r\n            ).toFixed(1)}\r\n            º</p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={1}\r\n            max={((props.selectorAngle / props.preset)/props.selectorCount)*props.preset}\r\n            step={1}\r\n            value={props.clusterAngle}\r\n            onChange={val => {\r\n              props.setClusterAngle(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"settings\" style={{ display: tab ? \"\" : \"none\" }}>\r\n        <div className=\"control-container\">\r\n          <p className=\"slider-label\">Lightness: {props.lightness}%</p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={90}\r\n            step={5}\r\n            value={props.lightness}\r\n            onChange={val => {\r\n              props.setLightness(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"control-container slider-container\">\r\n          <p className=\"slider-label\">Saturation: {props.saturation}%</p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={100}\r\n            step={5}\r\n            value={props.saturation}\r\n            onChange={val => {\r\n              props.setSaturation(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"control-container slider-container\">\r\n          <p className=\"slider-label\">\r\n            Number of Points: {props.selectorCount}\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            ref={selectorCountSlider}\r\n            min={props.preset}\r\n            max={15}\r\n            step={props.preset}\r\n            value={props.selectorCount}\r\n            onChange={val => {\r\n              props.setSelectorCount(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"control-container slider-container\">\r\n          <p className=\"slider-label\">\r\n            Point Spacing Angle:{\" \"}\r\n            {(\r\n              Math.round((props.selectorAngle / props.selectorCount) * 10) / 10\r\n            ).toFixed(1)}\r\n            º\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={360}\r\n            step={1}\r\n            value={props.selectorAngle}\r\n            onChange={val => {\r\n              props.setSelectorAngle(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"control-container slider-container\">\r\n          <p className=\"slider-label\">\r\n            Distance From Origin:{\" \"}\r\n            {(Math.round((props.selectorRadius / 236) * 1000) / 10).toFixed(0)}\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={1}\r\n            max={236}\r\n            step={1}\r\n            value={props.selectorRadius}\r\n            onChange={val => {\r\n              props.setSelectorRadius(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"control-container\">\r\n          <p className=\"slider-label\">\r\n            Distance Stagger:{\" \"}\r\n            {(Math.round(props.selectorStagger * 10) / 10).toFixed(0)}\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            ref={staggerSlider}\r\n            min={-(236 - props.selectorRadius)}\r\n            max={props.selectorRadius}\r\n            step={1}\r\n            defaultValue={props.selectorStagger}\r\n            onChange={val => {\r\n              props.setSelectorStagger(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    linked: state.actionReducer.LINKED,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    preset: state.actionReducer.PRESET,\r\n    clusterAngle: state.actionReducer.CLUSTER_ANGLE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode,\r\n  setClusterAngle,\r\n  setPreset\r\n};\r\n\r\nconst Controls = connect(mapStateToProps, mapDispatchToProps)(Controls_);\r\n\r\nexport default Controls;\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport \"./ColorBlock.scss\";\r\n\r\nconst ColorBlock_ = (props) => {\r\n  const hover = useRef(null)\r\n  let height = 400 / props.selectorCount\r\n  let textColor = props.lightness < 50 ? \"#bdbdbd\" : \"#404040\";\r\n  let accentColor = props.lightness < 50 ? \"#404040\" :  \"hsla(0,0%,100%,0.8)\";\r\n  return (\r\n    <div\r\n      className=\"color-block\"\r\n      style={{\r\n        height: height,\r\n        color: textColor,\r\n        backgroundColor: props.color\r\n\r\n      }}\r\n    >\r\n      \r\n      <div className=\"edit-prompt\" ref={hover} style={{ height: height}}></div>\r\n      <div className=\"copy-prompt\" style={{height: height, paddingTop: `${(height-20)/2}px`}}>{props.color}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      lightness: state.actionReducer.LIGHTNESS,\r\n      selectorCount: state.actionReducer.SELECTOR_COUNT\r\n    };\r\n  }\r\n  \r\n  const ColorBlock = connect(mapStateToProps)(ColorBlock_);\r\n  \r\n  export default ColorBlock;\r\n  ","import React from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"../../redux/reducers/reducers\";\r\nimport ColorBlock from \"../ColorBlock/ColorBlock\";\r\nimport { setQuotes, setHash } from \"../../redux/actions/actions\";\r\nimport \"./Palette.scss\";\r\nimport \"../../Globals.scss\";\r\n\r\nconst Palette_ = props => {\r\n  const copyAllColors = () => {\r\n    let colorArr = [...store.getState().actionReducer.COLORS];\r\n\r\n    for (let i = 0; i < colorArr.length; i++) {\r\n      if(!props.hash){\r\n        colorArr[i] = colorArr[i].substr(1)\r\n      }\r\n      if(props.quotes){\r\n        colorArr[i] = `'${colorArr[i]}'`\r\n      }\r\n    }\r\n\r\n    copy(colorArr);\r\n  };\r\n\r\n  const renderColorBlocks = props.colors.map((color, i) => (\r\n    <ColorBlock color={color} key={i} />\r\n  ));\r\n\r\n  return (\r\n    <div className={`palette ui-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"colors-container\" ref={props.paletteRef}>\r\n        {renderColorBlocks}\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.hash ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setHash();\r\n          }}\r\n        >\r\n          Hash\r\n        </button>\r\n        <button\r\n          className={`button ${props.quotes ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setQuotes();\r\n          }}\r\n        >\r\n          Quotes\r\n        </button>\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            copyAllColors();\r\n          }}\r\n        >\r\n          Copy all\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    colors: state.actionReducer.COLORS,\r\n    hash: state.actionReducer.HASH,\r\n    quotes: state.actionReducer.QUOTES,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setQuotes,\r\n  setHash\r\n};\r\n\r\nconst Palette = connect(mapStateToProps, mapDispatchToProps)(Palette_);\r\n\r\nexport default Palette;\r\n","import React, { useRef } from \"react\";\r\nimport ColorWheel from \"../ColorWheel/ColorWheel\";\r\nimport Controls from \"../Controls/Controls\";\r\nimport Palette from \"../Palette/Palette\";\r\nimport \"./ColorPicker.scss\";\r\nimport \"../Controls/Controls.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDarkMode } from \"../../redux/actions/actions\";\r\n\r\nconst ColorPicker_ = props => {\r\n  const colorContainer = useRef(null);\r\n\r\n  return (\r\n    <div className={`color-picker-container active-tab ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"navbar-container\">\r\n        <div\r\n          className={`tab color-picker-tab active-tab ${props.darkMode ? \"dark\" : \"\"}`}\r\n        >Colorpicker</div>\r\n        <div\r\n          className={`shadow-tab tab color-picker-tab ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n        />\r\n         <div\r\n          className={`tab editor-tab ${props.darkMode ? \"dark\" : \"\"}`}\r\n        >Palette editor</div>\r\n        <div\r\n          className={`shadow-tab tab editor-tab ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n        />\r\n        <button\r\n          className={`button set-dark ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setDarkMode();\r\n          }}\r\n        >\r\n          {props.darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n        </button>\r\n      </div>\r\n      <div\r\n        className={`color-picker-components ${props.darkMode ? \"dark\" : \"\"}`}\r\n      >\r\n        <Controls />\r\n        <ColorWheel colorsContainer={colorContainer} />\r\n        <Palette paletteRef={colorContainer} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    linked: state.actionReducer.LINKED,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setDarkMode\r\n};\r\n\r\nconst ColorPicker = connect(mapStateToProps, mapDispatchToProps)(ColorPicker_);\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./App.scss\";\r\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\n\r\nconst App_ = props => {\r\n  return (\r\n    <div className={`App ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className={`wrapper ${props.darkMode ? \"dark\" : \"\"}`}>\r\n        <div className={`logo-container ${props.darkMode ? \"hidden\" : \"\"}`} />\r\n        <div className={`logo-container ${props.darkMode ? \"dark\" : \"hidden\"}`}/>\r\n        <ColorPicker />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst App = connect(mapStateToProps)(App_);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store}  from \"./redux/reducers/reducers\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nconst colorReducer = function(state = 0, action) {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    case \"DECREMENT\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}