{"version":3,"sources":["util/viewport-height.js","redux/reducers/reducers.js","redux/actions/actions.js","util/color-utility.js","components/ColorPicker/Selectors/Selectors.js","components/ColorPicker/ColorWheel/ColorWheel.js","components/ColorPicker/Controls/Controls.js","components/ColorPicker/Presets/Presets.js","util/copy-colors.js","components/ColorPicker/CurrentColors/ColorBlock.js","components/ColorPicker/CurrentColors/CurrentColors.js","components/PaletteTracker/PaletteBlock.js","components/PaletteTracker/PaletteTracker.js","components/ColorPicker/ColorPicker.js","components/PaletteEditor/CurrentPalette/EditorColorBlock.js","components/PaletteEditor/CurrentPalette/CurrentPalette.js","components/PaletteEditor/EditorSettings/EditorSettings.js","components/PaletteEditor/PaletteEditor.js","App.js","serviceWorker.js","index.js"],"names":["getViewport","VH","Math","max","document","documentElement","clientHeight","window","innerHeight","VW","innerWidth","initialState","VIEWPORT_HEIGHT","COLORS","PREFIX","QUOTES","COLOR_MODE","PALETTES","ACTIVE_PALETTE","index","palette","LIGHTNESS","SATURATION","SELECTOR_COUNT","SELECTOR_ANGLE","SELECTOR_RADIUS","SELECTOR_LINKED_RADIUS","SELECTOR_STAGGER","CLUSTER_ANGLE","LINKED","DARK_MODE","PRESET","RESET","MODE","EDIT_SETTING","EDIT_INCREMENT","reducers","combineReducers","actionReducer","state","action","CURRENT_PALETTES_COPY","ACTIVE_PALETTE_COPY","ACTIVE_PALETTE_INDEX","type","CURRENT_COLORS","INDEX","COLOR","length","push","SELECTED_PALETTE","splice","NEW_COLORS","fill","EDIT_SETTING_COPY","NEW_COLOR","store","createStore","setPrefix","setQuotes","setColorMode","val","setSelectorCount","setLinkedState","setDarkMode","resetState","intToHSL","rgb","H","min","value","chroma","L","S","round","HSLtoInt","hsl","b","R1","G1","B1","C","abs","dH","X","ceil","m","toColorString","ints","mode","result","toString","toUpperCase","slice","mapDispatchToProps","storeColor","setSelectorLinkedRadius","Selectors","connect","selectorCount","selectorAngle","selectorRadius","selectorStagger","lightness","saturation","reset","preset","clusterAngle","CWRadius","props","svg","useRef","initialOffsetAngle","lastCWRadius","canvas","canvasPosX","canvasPosY","circleRefs","circleCoordinates","currentActiveCircle","setColor","x","y","key","pixel","current","getContext","getImageData","data","pixelColor","style","stroke","setHarmony","radOffset","harmony","total","count","i","PI","getLinkedState","getState","getinitialOffsetAngle","x0","getAttribute","y0","dx","d0x","d0y","atan2","getPointMath","mathVars","radius","sqrt","angle","x1","y1","x2","y2","d1x","d1y","d2x","d2y","isInCircle","handleMouseUp","addMouseTrackerLinked","event","mouseX","pageX","mouseY","pageY","radsFromMouse","radsOffset","setAttribute","cos","sin","addMouseTracker","id","e","removeEventListener","handleMouseDown","rect","getBoundingClientRect","left","top","target","addEventListener","useEffect","staggerIncrement","staggerOffset","XYresizeOffset","useLayoutEffect","children","className","ref","width","height","viewBox","elements","cx","cy","r","strokeWidth","onMouseDown","onMouseUp","createCircles","ColorWheel","darkMode","linked","willReadFrequently","scale","canvasContext","beginPath","strokeStyle","moveTo","lineTo","xLUT","yLUT","gradient","createRadialGradient","addColorStop","fillStyle","fillRect","generateGradient","onClick","version","colorsContainer","setLightness","setSaturation","setSelectorAngle","setSelectorRadius","setSelectorStagger","Controls","selectorLinkedRadius","viewport","staggerSlider","radiusSlider","step","onChange","parseInt","toFixed","setClusterAngle","setPreset","Presets","Viewport","marginTop","copyAllColors","colorArr","colorMode","quotes","prefix","forEach","color","getColorString","substr","replace","copy","copyColor","colorInts","ColorBlock","ownProps","colorBlock","textColor","backgroundColor","paddingTop","CurrentColors","paletteRef","colorBlockArray","renderColorBlocks","deletePalette","setCurrentPalette","PaletteBlock","activePalette","renderColors","map","editor","deleteMode","storePalette","PaletteTracker","palettes","useState","setDeleteMode","renderPaletteBlocks","ColorPicker","colorContainer","updatePaletteSingle","EditorColorBlock","editSetting","increment","avgColor","avg","setAvg","getGreaterColor","greaterColor","getLesserColor","lesserColor","updatePaletteAll","CurrentPalette","renderEditorColorBlocks","getGreaterColors","getLesserColors","activePaletteColors","incrementAllUp","incrementAllDown","setEditSetting","setEditIncrement","EditorSettings","editMode","editIncrement","setViewport","setMode","App","appMode","display","Boolean","location","hostname","match","ReactDOM","render","getElementById","clientWidth","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a96a80d.chunk.js","sourcesContent":["export const getViewport = () => {\r\n  let VH = Math.max(\r\n    document.documentElement.clientHeight,\r\n    window.innerHeight || 0\r\n  );\r\n  let VW = Math.max(\r\n    document.documentElement.clientHeight,\r\n    window.innerWidth || 0\r\n  );\r\n  \r\n  return VH > VW ? VW : VH;\r\n};\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { getViewport } from \"../../util/viewport-height\";\r\n\r\nconst initialState = {\r\n  VIEWPORT_HEIGHT: getViewport(),\r\n  COLORS: [\r\n    [255, 255, 255],\r\n    [255, 255, 255],\r\n    [255, 255, 255],\r\n    [255, 255, 255]\r\n  ],\r\n  PREFIX: true,\r\n  QUOTES: true,\r\n  COLOR_MODE: 1,\r\n  PALETTES: [],\r\n  ACTIVE_PALETTE: { index: -1, palette: [] },\r\n  LIGHTNESS: 50,\r\n  SATURATION: 100,\r\n  SELECTOR_COUNT: 4,\r\n  SELECTOR_ANGLE: 180,\r\n  SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n  SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n  SELECTOR_STAGGER: 0,\r\n  CLUSTER_ANGLE: 30,\r\n  LINKED: false,\r\n  DARK_MODE: false,\r\n  PRESET: 1,\r\n  RESET: 0, //for comp. rerender if init state doesnt change a prop\r\n  MODE: 0,\r\n  EDIT_SETTING: [false, false, true],\r\n  EDIT_INCREMENT: 10\r\n};\r\n\r\nexport const actionReducer = (state = initialState, action) => {\r\n  let CURRENT_PALETTES_COPY = [...state.PALETTES];\r\n  let ACTIVE_PALETTE_COPY = [...state.ACTIVE_PALETTE.palette];\r\n  let ACTIVE_PALETTE_INDEX = state.ACTIVE_PALETTE.index;\r\n  switch (action.type) {\r\n    case \"SET_VIEWPORT_HEIGHT\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n        VIEWPORT_HEIGHT: getViewport()\r\n      };\r\n    case \"SET_COLOR\":\r\n      //mutating state by reference\r\n      let CURRENT_COLORS = state.COLORS;\r\n      CURRENT_COLORS[action.INDEX] = action.COLOR;\r\n      return {\r\n        ...state,\r\n        COLORS: CURRENT_COLORS\r\n      };\r\n    case \"SET_PREFIX\":\r\n      return {\r\n        ...state,\r\n        PREFIX: !state.PREFIX\r\n      };\r\n    case \"SET_QUOTES\":\r\n      return {\r\n        ...state,\r\n        QUOTES: !state.QUOTES\r\n      };\r\n    case \"SET_COLOR_MODE\":\r\n      return {\r\n        ...state,\r\n        COLOR_MODE: action.COLOR_MODE\r\n      };\r\n    case \"STORE_PALETTE\":\r\n      if (state.PALETTES.length < 5) {\r\n        CURRENT_PALETTES_COPY.push([...state.COLORS]);\r\n        return {\r\n          ...state,\r\n          PALETTES: CURRENT_PALETTES_COPY\r\n        };\r\n      } else {\r\n        return {\r\n          ...state\r\n        };\r\n      }\r\n    case \"SET_CURRENT_PALETTE\":\r\n      let SELECTED_PALETTE = CURRENT_PALETTES_COPY[action.INDEX];\r\n      return {\r\n        ...state,\r\n        ACTIVE_PALETTE: { index: action.INDEX, palette: SELECTED_PALETTE }\r\n      };\r\n    case \"DELETE_PALETTE\":\r\n      CURRENT_PALETTES_COPY.splice(action.INDEX, 1);\r\n      if (state.ACTIVE_PALETTE.index === action.INDEX) {\r\n        return {\r\n          ...state,\r\n          ACTIVE_PALETTE: initialState.ACTIVE_PALETTE,\r\n          PALETTES: CURRENT_PALETTES_COPY\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          PALETTES: CURRENT_PALETTES_COPY\r\n        };\r\n      }\r\n    case \"SET_LIGHTNESS\":\r\n      return {\r\n        ...state,\r\n        LIGHTNESS: action.LIGHTNESS\r\n      };\r\n    case \"SET_SATURATION\":\r\n      return {\r\n        ...state,\r\n        SATURATION: action.SATURATION\r\n      };\r\n    case \"SET_SELECTOR_COUNT\":\r\n      let NEW_COLORS = [];\r\n      NEW_COLORS.length = action.SELECTOR_COUNT;\r\n      NEW_COLORS.fill([255, 255, 255]);\r\n      return {\r\n        ...state,\r\n        COLORS: NEW_COLORS,\r\n        SELECTOR_COUNT: action.SELECTOR_COUNT\r\n      };\r\n    case \"SET_SELECTOR_ANGLE\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_ANGLE: action.SELECTOR_ANGLE\r\n      };\r\n    case \"SET_SELECTOR_RADIUS\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_RADIUS: action.SELECTOR_RADIUS,\r\n        SELECTOR_LINKED_RADIUS: action.SELECTOR_RADIUS\r\n      };\r\n    case \"SET_SELECTOR_LINKED_RADIUS\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_LINKED_RADIUS: action.SELECTOR_LINKED_RADIUS\r\n      };\r\n    case \"SET_SELECTOR_STAGGER\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_STAGGER: action.SELECTOR_STAGGER\r\n      };\r\n    case \"SET_LINKED\":\r\n      return {\r\n        ...state,\r\n        LINKED: !state.LINKED\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_PRESET\":\r\n      switch (action.PRESET) {\r\n        case 2:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n            SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 20\r\n          };\r\n        case 3:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n            SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 16\r\n          };\r\n        case 4:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n            SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 16\r\n          };\r\n        case 5:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n            SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 15\r\n          };\r\n        default:\r\n          return state;\r\n      }\r\n    case \"SET_CLUSTER_ANGLE\":\r\n      return {\r\n        ...state,\r\n        CLUSTER_ANGLE: action.CLUSTER_ANGLE\r\n      };\r\n    case \"RESET\":\r\n      return {\r\n        ...initialState,\r\n        VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n        SELECTOR_RADIUS: (state.VIEWPORT_HEIGHT * 0.325) / 2,\r\n        SELECTOR_LINKED_RADIUS: (state.VIEWPORT_HEIGHT * 0.325) / 2,\r\n        PALETTES: state.PALETTES,\r\n        ACTIVE_PALETTE: state.ACTIVE_PALETTE,\r\n        DARK_MODE: state.DARK_MODE,\r\n        RESET: 1 - state.RESET\r\n      };\r\n    case \"SET_MODE\":\r\n      if (state.PALETTES.length === 0) {\r\n        CURRENT_PALETTES_COPY.push([...state.COLORS]);\r\n        return {\r\n          ...state,\r\n          ACTIVE_PALETTE: { index: 0, palette: [...state.COLORS] },\r\n          PALETTES: CURRENT_PALETTES_COPY,\r\n          MODE: action.MODE\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        MODE: action.MODE\r\n      };\r\n    case \"SET_EDIT_SETTING\":\r\n      let EDIT_SETTING_COPY = [...state.EDIT_SETTING];\r\n      EDIT_SETTING_COPY[action.INDEX] = !EDIT_SETTING_COPY[action.INDEX];\r\n      return {\r\n        ...state,\r\n        EDIT_SETTING: EDIT_SETTING_COPY\r\n      };\r\n    case \"SET_EDIT_INCREMENT\":\r\n      return {\r\n        ...state,\r\n        EDIT_INCREMENT: action.EDIT_INCREMENT\r\n      };\r\n    case \"UPDATE_PALETTE_SINGLE\":\r\n      ACTIVE_PALETTE_COPY[action.INDEX] = action.NEW_COLOR;\r\n      CURRENT_PALETTES_COPY[ACTIVE_PALETTE_INDEX] = ACTIVE_PALETTE_COPY;\r\n      return {\r\n        ...state,\r\n        ACTIVE_PALETTE: {\r\n          index: ACTIVE_PALETTE_INDEX,\r\n          palette: ACTIVE_PALETTE_COPY\r\n        },\r\n        PALETTES: CURRENT_PALETTES_COPY\r\n      };\r\n\r\n    case \"UPDATE_PALETTE_ALL\":\r\n      ACTIVE_PALETTE_COPY = action.NEW_COLORS;\r\n      CURRENT_PALETTES_COPY[ACTIVE_PALETTE_INDEX] = ACTIVE_PALETTE_COPY;\r\n      return {\r\n        ...state,\r\n        ACTIVE_PALETTE: {\r\n          index: ACTIVE_PALETTE_INDEX,\r\n          palette: ACTIVE_PALETTE_COPY\r\n        },\r\n        PALETTES: CURRENT_PALETTES_COPY\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const reducers = combineReducers({\r\n  actionReducer\r\n});\r\n\r\n// store.js\r\nexport const store = createStore(reducers);\r\n","//import { SET_COLOR } from \"./action-types\";\r\n\r\nexport const setViewport = () => (\r\n  { type: 'SET_VIEWPORT_HEIGHT' }\r\n)\r\nexport const storeColor = (val, index) => (\r\n  { type: 'SET_COLOR', COLOR: val, INDEX: index }\r\n)\r\nexport const setPrefix = () => (\r\n  { type: 'SET_PREFIX'}\r\n)\r\nexport const setQuotes = () => (\r\n  { type: 'SET_QUOTES'}\r\n)\r\nexport const setColorMode = (val) => (\r\n  { type: 'SET_COLOR_MODE', COLOR_MODE: val }\r\n)\r\nexport const setCurrentPalette = (index) => (\r\n  { type: 'SET_CURRENT_PALETTE', INDEX: index}\r\n)\r\nexport const storePalette = () => (\r\n  { type: 'STORE_PALETTE' }\r\n)\r\nexport const deletePalette = (index) => (\r\n  { type: 'DELETE_PALETTE', INDEX: index}\r\n)\r\nexport const setLightness = (val) => (\r\n  { type: 'SET_LIGHTNESS', LIGHTNESS: val }\r\n)\r\nexport const setSaturation = (val) => (\r\n  { type: 'SET_SATURATION', SATURATION: val }\r\n)\r\nexport const setSelectorCount = (val) => (\r\n  { type: 'SET_SELECTOR_COUNT', SELECTOR_COUNT: val }\r\n)\r\nexport const setSelectorAngle = (val) => (\r\n  { type: 'SET_SELECTOR_ANGLE', SELECTOR_ANGLE: val }\r\n)\r\nexport const setSelectorRadius = (val) => (\r\n  { type: 'SET_SELECTOR_RADIUS', SELECTOR_RADIUS: val }\r\n)\r\nexport const setSelectorLinkedRadius = (val) => (\r\n  { type: 'SET_SELECTOR_LINKED_RADIUS', SELECTOR_LINKED_RADIUS: val}\r\n)\r\nexport const setSelectorStagger = (val) => (\r\n  { type: 'SET_SELECTOR_STAGGER', SELECTOR_STAGGER: val }\r\n)\r\nexport const setLinkedState = () => (\r\n  { type: 'SET_LINKED' }\r\n)\r\nexport const setDarkMode = () => (\r\n  { type: 'SET_DARK_MODE' }\r\n)\r\nexport const setCopyType = () => (\r\n  { type: 'SET_COPY_TYPE' }\r\n)\r\nexport const setPreset = (val) => (\r\n  { type: 'SET_PRESET', PRESET: val }\r\n)\r\nexport const setClusterAngle = (val) => (\r\n  { type: 'SET_CLUSTER_ANGLE', CLUSTER_ANGLE: val }\r\n)\r\nexport const resetState = () => (\r\n  { type: 'RESET' }\r\n)\r\nexport const setMode = (val) => (\r\n  { type: 'SET_MODE', MODE: val }\r\n)\r\nexport const setEditSetting = (index) => (\r\n  { type: 'SET_EDIT_SETTING', INDEX: index}\r\n)\r\nexport const setEditIncrement = (val) => (\r\n  { type: 'SET_EDIT_INCREMENT', EDIT_INCREMENT: val}\r\n)\r\nexport const updatePaletteSingle = (val, index) => (\r\n  { type: 'UPDATE_PALETTE_SINGLE', NEW_COLOR: val, INDEX: index }\r\n)\r\nexport const updatePaletteAll = (val) => (\r\n  { type: 'UPDATE_PALETTE_ALL', NEW_COLORS: val }\r\n)","const mod = (a, b) => {\n  return ((a % b) + b) % b;\n};\n\nexport const hexToRgb = color => {\n  let convert = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n  let result = `rgb(${parseInt(convert[1], 16)}, ${parseInt(\n    convert[2],\n    16\n  )}, ${parseInt(convert[3], 16)})`;\n  return result;\n};\n\nexport const rgbToHex = color => {\n  color.split(\",\");\n  let r = parseInt(color[0].substring(4));\n  let g = parseInt(color[1]);\n  let b = parseInt(color[2]);\n  let result =\n    \"#\" +\n    ((1 << 24) + (r << 16) + (g << 8) + b)\n      .toString(16)\n      .toUpperCase()\n      .slice(1);\n  return result;\n};\n\nexport const intToHSL = rgb => {\n  rgb = [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255];\n  let max =\n    rgb[0] > rgb[1] ? (rgb[0] > rgb[2] ? 0 : 2) : rgb[1] > rgb[2] ? 1 : 2;\n  let min =\n    rgb[0] < rgb[1] ? (rgb[0] < rgb[2] ? 0 : 2) : rgb[1] < rgb[2] ? 1 : 2;\n  let value = rgb[max];\n  let chroma = rgb[max] - rgb[min];\n  let L = (rgb[max] + rgb[min]) / 2;\n  let H;\n  let S = L === 0 || L === 1 ? 0 : (value - L) / Math.min(L, 1 - L);\n\n  switch (value) {\n    case rgb[0]:\n      H = 60 * ((rgb[1] - rgb[2]) / chroma);\n      break;\n    case rgb[1]:\n      H = 60 * (2 + (rgb[2] - rgb[0]) / chroma);\n      break;\n    case rgb[2]:\n      H = 60 * (4 + (rgb[0] - rgb[1]) / chroma);\n      break;\n  }\n  H = chroma === 0 ? 0 : H < 1 ? Math.round(H + 360) : Math.round(H);\n  S = Math.round(S * 100);\n  L = Math.round(L * 100);\n\n  return [H, S, L];\n};\n\nexport const HSLtoInt = hsl => {\n  let H = hsl[0],\n    S = hsl[1] / 100,\n    L = hsl[2] / 100;\n  let C = (1 - Math.abs(2 * L - 1)) * S;\n  let dH = H / 60;\n  let X = C * (1 - Math.abs(mod(dH, 2) - 1));\n  let R1, G1, B1;\n  switch (Math.ceil(dH)) {\n    case 1:\n      R1 = C;\n      G1 = X;\n      B1 = 0;\n      break;\n    case 2:\n      R1 = X;\n      G1 = C;\n      B1 = 0;\n      break;\n    case 3:\n      R1 = 0;\n      G1 = C;\n      B1 = X;\n      break;\n    case 4:\n      R1 = 0;\n      G1 = X;\n      B1 = C;\n      break;\n    case 5:\n      R1 = X;\n      G1 = 0;\n      B1 = C;\n      break;\n    case 6:\n      R1 = C;\n      G1 = 0;\n      B1 = X;\n      break;\n    default:\n      R1 = 0;\n      G1 = 0;\n      B1 = 0;\n  }\n  let m = L - C / 2;\n  return [\n    Math.round((R1 + m) * 255),\n    Math.round((G1 + m) * 255),\n    Math.round((B1 + m) * 255)\n  ];\n};\n\nexport const toColorString = (ints, mode) => {\n  let result;\n  if (mode === \"hex\") {\n    result =\n      \"#\" +\n      ((1 << 24) + (ints[0] << 16) + (ints[1] << 8) + ints[2])\n        .toString(16)\n        .toUpperCase()\n        .slice(1);\n  } else if (mode === \"rgb\") {\n    result = `rgb(${ints[0]}, ${ints[1]}, ${ints[2]})`;\n  } else if (mode === \"hsl\") {\n    result = `hsl(${ints[0]}, ${ints[1]}%, ${ints[2]}%)`;\n  }\n  return result;\n};\n\nexport const toColorInt = color => {\n  let result;\n  if (color.charAt(0) === \"#\") {\n    let convert = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n    result = [\n      parseInt(convert[1], 16),\n      parseInt(convert[2], 16),\n      parseInt(convert[3], 16)\n    ];\n  } else if (color.charAt(0) === \"r\") {\n    color.split(\",\");\n    let r = parseInt(color[0].substring(4));\n    let g = parseInt(color[1]);\n    let b = parseInt(color[2]);\n    result = [r, g, b];\n  }\n  return result;\n};\n","import React, { useEffect, useLayoutEffect, useRef, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { storeColor, setSelectorLinkedRadius } from \"../../../redux/actions/actions\";\r\nimport { store } from \"../../../redux/reducers/reducers\";\r\nimport { toColorString } from \"../../../util/color-utility\"\r\n\r\nconst Selectors_ = props => {\r\n  const svg = useRef(null);\r\n  let initialOffsetAngle = useRef(0);\r\n  let lastCWRadius = useRef(0);\r\n  let { canvas } = props;\r\n  let canvasPosX = 0;\r\n  let canvasPosY = 0;\r\n  let circleRefs = null;\r\n  let circleCoordinates = [];\r\n  let currentActiveCircle = null;\r\n  \r\n\r\n  const setColor = (x, y, key) => {\r\n    let pixel = canvas.current.getContext(\"2d\").getImageData(x, y, 1, 1).data;\r\n    let pixelColor = toColorString(pixel, 'rgb')\r\n    circleRefs[key].style.fill = pixelColor;\r\n    if (props.lightness < 50) {\r\n      circleRefs[key].style.stroke = \"#d4d4d4\";\r\n    } else {\r\n      circleRefs[key].style.stroke = \"#4d4d4d\";\r\n    }\r\n    props.storeColor([pixel[0],pixel[1],pixel[2]],key);\r\n  };\r\n\r\n  const setHarmony = () => {\r\n    //sets the angle of the polar offset from +X-axis\r\n    let radOffset;\r\n    let harmony = { total: 0, count: 1 };\r\n    if (props.preset != 1 && props.selectorCount != props.preset) {\r\n      radOffset = [initialOffsetAngle.current, initialOffsetAngle.current];\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        if (harmony.count === Math.round(props.selectorCount / props.preset)) {\r\n          harmony.total++;\r\n          harmony.count = 0;\r\n          radOffset.push(\r\n            (radOffset[i] =\r\n              Math.round((props.selectorAngle) / props.preset) *\r\n              (Math.PI / 180) *\r\n              harmony.total + initialOffsetAngle.current )\r\n          );\r\n        } else {\r\n          radOffset.push(\r\n            (radOffset[i] += props.clusterAngle * (Math.PI / 180))\r\n          );\r\n        }\r\n        harmony.count++;\r\n      }\r\n    } else {\r\n      radOffset = [initialOffsetAngle.current];\r\n      for (let i = 0; i < props.selectorCount; i++) {\r\n        radOffset.push(\r\n          radOffset[i] +\r\n            Math.round((props.selectorAngle) / props.selectorCount) *\r\n              (Math.PI / 180)\r\n        );\r\n      }\r\n    }\r\n    return radOffset;\r\n  };\r\n\r\n  const createCircles = () => {\r\n    let elements = [];\r\n    let radOffset = setHarmony();\r\n    let x = props.CWRadius + props.selectorRadius * Math.cos(initialOffsetAngle.current);\r\n    let y = props.CWRadius + props.selectorRadius * Math.sin(initialOffsetAngle.current);\r\n    elements.push(\r\n      <circle\r\n        cx={x}\r\n        cy={y}\r\n        r={`${props.CWRadius * 0.06}`}\r\n        stroke=\"#a1a1a1\"\r\n        strokeWidth={`${props.CWRadius * 0.003}`}\r\n        onMouseDown={e => handleMouseDown(e)}\r\n        onMouseUp={e => handleMouseUp(e)}\r\n        key={0}\r\n        id={`${0}`}\r\n      />\r\n    );\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x = props.CWRadius + props.selectorRadius * Math.cos(radOffset[i]);\r\n      let y = props.CWRadius + props.selectorRadius * Math.sin(radOffset[i]);\r\n      elements.push(\r\n        <circle\r\n          cx={x}\r\n          cy={y}\r\n          r={`${props.CWRadius * 0.06}`}\r\n          stroke=\"#a1a1a1\"\r\n          strokeWidth={`${props.CWRadius * 0.003}`}\r\n          onMouseDown={e => handleMouseDown(e)}\r\n          onMouseUp={e => handleMouseUp(e)}\r\n          key={i}\r\n          id={`${i}`}\r\n        />\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  const getLinkedState = () => {\r\n    return store.getState().actionReducer.LINKED\r\n  }\r\n\r\n  const getinitialOffsetAngle = () => {\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let dx = props.CWRadius;\r\n    let dy = 0;\r\n    let d0x = x0 - props.CWRadius;\r\n    let d0y = y0 - props.CWRadius;\r\n    return Math.atan2(d0y, d0x) - Math.atan2(dy, dx);\r\n  };\r\n\r\n  const getPointMath = () => {\r\n    //gets the current angles and radii of the points\r\n    //(called once after points are linked)\r\n    let mathVars = [];\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let radius = Math.sqrt(\r\n      (props.CWRadius - x0) * (props.CWRadius - x0) +\r\n        (props.CWRadius - y0) * (props.CWRadius - y0)\r\n    );\r\n    mathVars.push({\r\n      angle: getinitialOffsetAngle(),\r\n      radius: radius\r\n    });\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x1 = circleRefs[i - 1].getAttribute(\"cx\");\r\n      let y1 = circleRefs[i - 1].getAttribute(\"cy\");\r\n      let x2 = circleRefs[i].getAttribute(\"cx\");\r\n      let y2 = circleRefs[i].getAttribute(\"cy\");\r\n\r\n      let radius = Math.sqrt(\r\n        (props.CWRadius - x2) * (props.CWRadius - x2) +\r\n          (props.CWRadius - y2) * (props.CWRadius - y2)\r\n      );\r\n\r\n      let d1x = x1 - props.CWRadius;\r\n      let d1y = y1 - props.CWRadius;\r\n      let d2x = x2 - props.CWRadius;\r\n      let d2y = y2 - props.CWRadius;\r\n\r\n      let angle = Math.atan2(d2y, d2x) - Math.atan2(d1y, d1x);\r\n      mathVars.push({\r\n        angle: angle,\r\n        radius: radius\r\n      });\r\n    }\r\n    return mathVars;\r\n  };\r\n\r\n  const isInCircle = (x, y) => {\r\n    if (\r\n      Math.sqrt(\r\n        (props.CWRadius - x) * (props.CWRadius - x) +\r\n          (props.CWRadius - y) * (props.CWRadius - y)\r\n      ) >\r\n      0.95 * props.CWRadius\r\n    ) {\r\n      handleMouseUp();\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addMouseTrackerLinked = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let d0x = x0 - props.CWRadius;\r\n    let d0y = y0 - props.CWRadius;\r\n    let radsFromMouse = Math.atan2(d0y, d0x);\r\n    let radsOffset = 0;\r\n\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      circleRefs[0].setAttribute(\"cx\", `${mouseX}`);\r\n      circleRefs[0].setAttribute(\"cy\", `${mouseY}`);\r\n\r\n      setColor(x0, y0, 0);\r\n\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        radsOffset += circleCoordinates[i].angle;\r\n\r\n        let x = circleRefs[i].getAttribute(\"cx\");\r\n        let y = circleRefs[i].getAttribute(\"cy\");\r\n\r\n        let angle = radsOffset + radsFromMouse;\r\n        let radius =\r\n          circleCoordinates[i].radius -\r\n          (circleCoordinates[0].radius -\r\n            Math.sqrt(\r\n              (props.CWRadius - mouseX) * (props.CWRadius - mouseX) +\r\n                (props.CWRadius - mouseY) * (props.CWRadius - mouseY)\r\n            ));\r\n\r\n        if (radius < 0) radius = 0;\r\n        if (radius > props.CWRadius) radius = props.CWRadius;\r\n        circleRefs[i].setAttribute(\r\n          \"cx\",\r\n          `${props.CWRadius + radius * Math.cos(angle)}`\r\n        );\r\n        circleRefs[i].setAttribute(\r\n          \"cy\",\r\n          `${props.CWRadius + radius * Math.sin(angle)}`\r\n        );\r\n        setColor(x, y, i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addMouseTracker = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      currentActiveCircle.setAttribute(\"cx\", `${mouseX}`);\r\n      currentActiveCircle.setAttribute(\"cy\", `${mouseY}`);\r\n      setColor(mouseX, mouseY, currentActiveCircle.id);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    currentActiveCircle = null;\r\n    if (!getLinkedState()) {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n    initialOffsetAngle.current = getinitialOffsetAngle();\r\n    props.setSelectorLinkedRadius(circleCoordinates[0].radius)\r\n  };\r\n\r\n  const handleMouseDown = e => {\r\n    let rect = canvas.current.getBoundingClientRect();\r\n    canvasPosX = rect.left;\r\n    canvasPosY = rect.top;\r\n    currentActiveCircle = e.target;\r\n    if (!getLinkedState()) {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let radOffset = setHarmony();\r\n    let staggerIncrement = props.selectorStagger / props.selectorCount;\r\n    let staggerOffset = staggerIncrement;\r\n    let XYresizeOffset = props.CWRadius / lastCWRadius.current;\r\n    let x0 =\r\n      props.CWRadius +\r\n      props.selectorRadius * Math.cos(initialOffsetAngle.current);\r\n    let y0 =\r\n      props.CWRadius +\r\n      props.selectorRadius * Math.sin(initialOffsetAngle.current);\r\n    circleRefs[0].setAttribute(\"cx\", `${x0 * XYresizeOffset}`);\r\n    circleRefs[0].setAttribute(\"cy\", `${y0 * XYresizeOffset}`);\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x =\r\n        props.CWRadius +\r\n        (props.selectorRadius - staggerOffset) * Math.cos(radOffset[i]);\r\n      let y =\r\n        props.CWRadius +\r\n        (props.selectorRadius - staggerOffset) * Math.sin(radOffset[i]);\r\n      circleRefs[i].setAttribute(\"cx\", `${x * XYresizeOffset}`);\r\n      circleRefs[i].setAttribute(\"cy\", `${y * XYresizeOffset}`);\r\n      staggerOffset += staggerIncrement;\r\n    }\r\n  }, [\r\n    props.selectorStagger,\r\n    props.selectorCount,\r\n    props.selectorRadius,\r\n    props.selectorAngle,\r\n    props.clusterAngle,\r\n    props.CWRadius\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = circleRefs[i].getAttribute(\"cx\");\r\n      let y = circleRefs[i].getAttribute(\"cy\");\r\n      setColor(x, y, i);\r\n    }\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    initialOffsetAngle.current = 0\r\n  },[props.preset, props.reset])\r\n\r\n  useLayoutEffect(() => {\r\n    lastCWRadius.current = props.CWRadius;\r\n    circleRefs = svg.current.children;\r\n    circleCoordinates = getPointMath();\r\n  });\r\n\r\n  return (\r\n    <svg\r\n      className=\"selector\"\r\n      ref={svg}\r\n      width={`${props.CWRadius * 2}`}\r\n      height={`${props.CWRadius * 2}`}\r\n      viewBox={`0 0 ${props.CWRadius * 2} ${props.CWRadius * 2}`}\r\n    >\r\n      {createCircles()}\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    reset: state.actionReducer.RESET,\r\n    preset: state.actionReducer.PRESET,\r\n    clusterAngle: state.actionReducer.CLUSTER_ANGLE,\r\n    CWRadius: state.actionReducer.VIEWPORT_HEIGHT * 0.325\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storeColor,\r\n  setSelectorLinkedRadius\r\n};\r\n\r\nconst Selectors = connect(mapStateToProps, mapDispatchToProps)(Selectors_);\r\n\r\nexport default Selectors;\r\n","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetState, setLinkedState } from \"../../../redux/actions/actions\";\r\nimport Selectors from \"../Selectors/Selectors\";\r\nimport * as xLUT from \"./xLUT.json\";\r\nimport * as yLUT from \"./yLUT.json\";\r\nimport \"./ColorWheel.scss\";\r\n\r\nconst ColorWheel_ = props => {\r\n  const canvas = useRef(null);\r\n\r\n  const generateGradient = () => {\r\n    let canvasContext = canvas.current.getContext(\"2d\", {willReadFrequently: true});\r\n    for (let i = 0; i < 3600; i += 1) {\r\n      let value = i / 10;\r\n      canvasContext.beginPath();\r\n      canvasContext.strokeStyle = `hsl(${value}, ${props.saturation}%, ${props.lightness}%)`;\r\n      canvasContext.moveTo(130, 130);\r\n      canvasContext.lineTo(xLUT.default[value], yLUT.default[value]);\r\n      canvasContext.stroke();\r\n    }\r\n    let gradient = canvasContext.createRadialGradient(130, 130, 0, 130, 130, 128);\r\n\r\n    gradient.addColorStop(0, `${props.lightness > 45 ? \"rgba(255,255,255,1)\" : \"rgba(0,0,0,1)\"}`);\r\n    gradient.addColorStop(1, `${props.lightness > 45 ? \"rgba(255,255,255,0)\" : \"rgba(0,0,0,0)\"}`);\r\n    canvasContext.fillStyle = gradient;\r\n    canvasContext.fillRect(0, 0, 260, 260);\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n  let canvasContext = canvas.current.getContext(\"2d\", {willReadFrequently: true});\r\n    canvasContext.scale(props.CWRadius / 130, props.CWRadius / 130);\r\n  }, [props.CWRadius]);\r\n\r\n  useLayoutEffect(() => {\r\n    generateGradient();\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`color-wheel ui-block ${props.darkMode ? \"dark\" : \"\"}`}\r\n      style={{\r\n        height: `${props.CWRadius * 2}`,\r\n        width: `${props.CWRadius * 2}`\r\n      }}\r\n    >\r\n      <button\r\n        className={`button button-left ${props.linked ? \"active\" : \"\"} ${\r\n          props.darkMode ? \"dark\" : \"\"\r\n        }`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.setLinkedState();\r\n        }}\r\n      >\r\n        {props.linked ? \"Unlink\" : \"Link\"}\r\n      </button>\r\n      <div className=\"gradient\">\r\n        <svg\r\n          className=\"edge-wrapper\"\r\n          width={`${props.CWRadius * 2}`}\r\n          height={`${props.CWRadius * 2}`}\r\n          viewBox={`0 0 ${props.CWRadius * 2} ${props.CWRadius * 2}`}\r\n          version=\"1.1\"\r\n        >\r\n          <circle\r\n            cx={`${props.CWRadius}`}\r\n            cy={`${props.CWRadius}`}\r\n            r={`${props.CWRadius}`}\r\n            stroke={props.darkMode ? '#2c2c2c' : '#dbdbdb'}\r\n            strokeWidth=\"3\"\r\n            fill=\"none\"\r\n          />\r\n        </svg>\r\n        <Selectors colorsContainer={props.colorsContainer} canvas={canvas} />\r\n        <canvas\r\n          width={`${props.CWRadius * 2}`}\r\n          height={`${props.CWRadius * 2}`}\r\n          ref={canvas}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        className={`button button-right ${props.darkMode ? \"dark\" : \"\"}`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.resetState();\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    linked: state.actionReducer.LINKED,\r\n    CWRadius: state.actionReducer.VIEWPORT_HEIGHT * 0.325\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  resetState,\r\n  setLinkedState\r\n};\r\n\r\nconst ColorWheel = connect(mapStateToProps, mapDispatchToProps)(ColorWheel_);\r\n\r\nexport default ColorWheel;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode\r\n} from \"../../../redux/actions/actions\";\r\nimport \"./Controls.scss\";\r\nimport \"../../Slider/Slider.scss\";\r\n\r\nconst Controls_ = props => {\r\n  const staggerSlider = useRef(null);\r\n  const radiusSlider = useRef(null);\r\n\r\n  useEffect(() => {\r\n    props.setSelectorStagger(staggerSlider.current.value);\r\n  }, [props.selectorRadius]);\r\n\r\n  useEffect(() => {\r\n    props.setSelectorRadius(radiusSlider.current.value);\r\n  }, [props.selectorAngle]);\r\n\r\n  return (\r\n    <div className={`controls ui-half-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"controls-wrapper\">\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Number of Colors:{\" \"}\r\n            <span className=\"label-value\">{props.selectorCount}</span>\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={props.preset}\r\n            max={15}\r\n            step={props.preset}\r\n            value={props.selectorCount}\r\n            onChange={val => {\r\n              props.setSelectorCount(parseInt(val.target.value));\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Saturation: <span className=\"label-value\">{props.saturation}%</span>\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={100}\r\n            step={1}\r\n            value={props.saturation}\r\n            onChange={val => {\r\n              props.setSaturation(parseInt(val.target.value));\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Lightness: <span className=\"label-value\">{props.lightness}%</span>\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={90}\r\n            step={1}\r\n            value={props.lightness}\r\n            onChange={val => {\r\n              props.setLightness(parseInt(val.target.value));\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Hue Offset:{\" \"}\r\n            <span className=\"label-value\">\r\n              {(\r\n                Math.round((props.selectorAngle / props.selectorCount) * 10) /\r\n                10\r\n              ).toFixed(1)}\r\n              º\r\n            </span>\r\n          </p>\r\n\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={360}\r\n            step={1}\r\n            value={props.selectorAngle}\r\n            onChange={val => {\r\n              props.setSelectorAngle(parseInt(val.target.value));\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Distance:{\" \"}\r\n            <span className=\"label-value\">\r\n              {(\r\n                Math.round(\r\n                  (props.selectorLinkedRadius / (props.viewport * 0.325)) * 1000\r\n                ) / 10\r\n              ).toFixed(0)}\r\n            </span>\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            ref={radiusSlider}\r\n            min={1}\r\n            max={0.325 * props.viewport}\r\n            step={1}\r\n            value={props.selectorLinkedRadius}\r\n            onChange={val => {\r\n              props.setSelectorRadius(parseInt(val.target.value));\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Stagger:{\" \"}\r\n            <span className=\"label-value\">\r\n              {(Math.round(props.selectorStagger * 10) / 10).toFixed(0)}\r\n            </span>\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            ref={staggerSlider}\r\n            min={-(0.315 * props.viewport - props.selectorRadius)}\r\n            max={props.selectorRadius}\r\n            step={1}\r\n            value={props.selectorStagger}\r\n            onChange={val => {\r\n              props.setSelectorStagger(parseInt(val.target.value));\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorLinkedRadius: state.actionReducer.SELECTOR_LINKED_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    preset: state.actionReducer.PRESET,\r\n    viewport: state.actionReducer.VIEWPORT_HEIGHT\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode\r\n};\r\n\r\nconst Controls = connect(mapStateToProps, mapDispatchToProps)(Controls_);\r\n\r\nexport default Controls;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setSelectorCount,\r\n  setDarkMode,\r\n  setClusterAngle,\r\n  setPreset\r\n} from \"../../../redux/actions/actions\";\r\nimport \"./Presets.scss\";\r\nimport \"../../Slider/Slider.scss\";\r\n\r\nconst Presets_ = props => {\r\n\r\n  useEffect(() => {\r\n    if (props.preset != 1) {\r\n      props.setSelectorCount(props.preset * 3);\r\n    }\r\n  }, [props.preset]);\r\n\r\n  return (\r\n    <div className={`presets ui-half-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"presets-wrapper\">\r\n        <div className=\"presets-grid\">\r\n          <button\r\n            className={`preset dyad ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 2 ? \"active\" : \"\"\r\n            } `}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 2)) props.setPreset(2);\r\n            }}\r\n          />\r\n          <button\r\n            className={`preset triad  ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 3 ? \"active\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 3)) props.setPreset(3);\r\n            }}\r\n          />\r\n          <button\r\n            className={`preset tetrad  ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 4 ? \"active\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 4)) props.setPreset(4);\r\n            }}\r\n          />\r\n          <button\r\n            className={`preset pentad  ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 5 ? \"active\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 5)) props.setPreset(5);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"slider-container\"\r\n        style={{ marginTop: `${props.Viewport * 0.1}` }}\r\n      >\r\n        <p className=\"slider-label\">\r\n          Cluster Spacing Angle:{\" \"}\r\n          <span className=\"label-value\">{(Math.round(props.clusterAngle * 10) / 10).toFixed(1)}º</span>\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n          min={1}\r\n          max={\r\n            (props.selectorAngle / props.preset / props.selectorCount) *\r\n            props.preset\r\n          }\r\n          step={1}\r\n          value={props.clusterAngle}\r\n          onChange={val => {\r\n            props.setClusterAngle(parseInt(val.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    preset: state.actionReducer.PRESET,\r\n    clusterAngle: state.actionReducer.CLUSTER_ANGLE,\r\n    Viewport: state.actionReducer.VIEWPORT_HEIGHT\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSelectorCount,\r\n  setDarkMode,\r\n  setClusterAngle,\r\n  setPreset\r\n};\r\n\r\nconst Presets = connect(mapStateToProps, mapDispatchToProps)(Presets_);\r\n\r\nexport default Presets;\r\n","import copy from \"copy-to-clipboard\";\nimport { toColorString, intToHSL } from \"./color-utility\";\n\nexport const copyAllColors = (colorArr, colorMode, quotes, prefix) => {\n  colorArr.forEach((color, i) => {\n    colorArr[i] = getColorString(color, colorMode);\n    if (!prefix) {\n      if (colorMode === 1) {\n        colorArr[i] = colorArr[i].substr(1);\n      } else if (colorMode === 2 || 3) {\n        colorArr[i] = colorArr[i].replace(/[^\\d,]+/g, \"\");\n      }\n    }\n    if (quotes) {\n      colorArr[i] = `'${colorArr[i]}'`;\n    }\n  });\n  copy(colorArr);\n};\n\nexport const copyColor = (colorInts, colorMode, quotes, prefix) => {\n  let color = getColorString(colorInts, colorMode);\n  if (!prefix) {\n    if (colorMode === 1) {\n      color = color.substr(1);\n    } else if (colorMode === 2 || 3) {\n      color = color.replace(/[^\\d,]+/g, \"\");\n    }\n  }\n  if (quotes) {\n    color = `'${color}'`;\n  }\n  copy(color);\n};\n\nexport const getColorString = (colorInts, colorMode) => {\n  if (colorMode === 1) {\n    return toColorString(colorInts, \"hex\");\n  } else if (colorMode === 2) {\n    return toColorString(colorInts, \"rgb\");\n  } else if (colorMode === 3) {\n    return toColorString(intToHSL(colorInts), \"hsl\");\n  }\n};\n","import React, { useRef, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { copyColor, getColorString } from \"../../../util/copy-colors\";\r\n\r\nconst ColorBlock_ = props => {\r\n  const colorBlock = useRef(null);\r\n  let height = (0.55 * props.viewport) / props.selectorCount;\r\n  let textColor = props.lightness < 50 ? \"#bdbdbd\" : \"#404040\";\r\n\r\n  return (\r\n    <div\r\n      ref={colorBlock}\r\n      className=\"color-block\"\r\n      style={{\r\n        height: height,\r\n        color: textColor,\r\n        backgroundColor: getColorString(props.colorInts, props.colorMode)\r\n      }}\r\n      onClick={() => copyColor(props.colorInts, props.colorMode, props.quotes, props.prefix)}\r\n    >\r\n      <div\r\n        className=\"copy-prompt\"\r\n        style={{\r\n          height: height,\r\n          paddingTop: `${(height - 0.025 * props.viewport) / 2}px`\r\n        }}\r\n      >\r\n        <p className=\"color-text hover-cta\">{getColorString(props.colorInts, props.colorMode)}</p>\r\n        <p className=\"copy-text hover-cta\">Click to copy</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    prefix: state.actionReducer.PREFIX,\r\n    quotes: state.actionReducer.QUOTES,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    viewport: state.actionReducer.VIEWPORT_HEIGHT,\r\n    colorInts: state.actionReducer.COLORS[ownProps.index],\r\n    colorMode: state.actionReducer.COLOR_MODE\r\n  };\r\n}\r\n\r\nconst ColorBlock = connect(mapStateToProps)(ColorBlock_);\r\n\r\nexport default ColorBlock;\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"../../../redux/reducers/reducers\";\r\nimport ColorBlock from \"./ColorBlock\";\r\nimport {\r\n  setColorMode,\r\n  setPrefix,\r\n  setQuotes\r\n} from \"../../../redux/actions/actions\";\r\nimport { copyAllColors } from \"../../../util/copy-colors\";\r\nimport \"./CurrentColors.scss\";\r\n\r\nconst CurrentColors_ = props => {\r\n  const renderColorBlocks = () => {\r\n    let colorBlockArray = [];\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      colorBlockArray.push(\r\n        <ColorBlock index={i} key={i} />\r\n      );\r\n    }\r\n    return colorBlockArray;\r\n  };\r\n\r\n  return (\r\n    <div className={`current-colors ui-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"control-container input-container\">\r\n        <button\r\n          className={`button editor-button ${\r\n            props.colorMode === 1 ? \"active\" : \"\"\r\n          } ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            if (props.colorMode != 1) {\r\n              props.setColorMode(1);\r\n            }\r\n          }}\r\n        >\r\n          HEX\r\n        </button>\r\n        <button\r\n          className={`button editor-button ${\r\n            props.colorMode === 2 ? \"active\" : \"\"\r\n          } ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            if (props.colorMode != 2) {\r\n              props.setColorMode(2);\r\n            }\r\n          }}\r\n        >\r\n          RGB\r\n        </button>\r\n        <button\r\n          className={`button editor-button ${\r\n            props.colorMode === 3 ? \"active\" : \"\"\r\n          } ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            if (props.colorMode != 3) {\r\n              props.setColorMode(3);\r\n            }\r\n          }}\r\n        >\r\n          HSL\r\n        </button>\r\n      </div>\r\n      <div className=\"colors-container\" ref={props.paletteRef}>\r\n        {renderColorBlocks()}\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.prefix ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setPrefix();\r\n          }}\r\n        >\r\n          {props.colorMode === 1\r\n            ? \"#...\"\r\n            : props.colorMode === 2\r\n            ? \"rgb(...)\"\r\n            : \"hsl(...)\"}\r\n        </button>\r\n        <button\r\n          className={`button ${props.quotes ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setQuotes();\r\n          }}\r\n        >\r\n          Quotes\r\n        </button>\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            copyAllColors(\r\n              [...store.getState().actionReducer.COLORS],\r\n              props.colorMode,\r\n              props.quotes,\r\n              props.prefix\r\n            );\r\n          }}\r\n        >\r\n          Copy all\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    prefix: state.actionReducer.PREFIX,\r\n    quotes: state.actionReducer.QUOTES,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    colorMode: state.actionReducer.COLOR_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setColorMode,\r\n  setPrefix,\r\n  setQuotes\r\n};\r\n\r\nconst CurrentColors = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CurrentColors_);\r\n\r\nexport default CurrentColors;\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deletePalette, setCurrentPalette } from \"../../redux/actions/actions\";\r\nimport { toColorString } from \"../../util/color-utility\"\r\nimport \"./PaletteTracker.scss\";\r\n\r\nconst PaletteBlock_ = props => {\r\n  let width = (0.1624 * props.Viewport) / props.palette.length;\r\n\r\n  const renderColors = props.palette.map((color, i) => (\r\n    <div\r\n      className=\"block-color\"\r\n      style={{ backgroundColor: toColorString(color, 'hex'), width: `${width}px` }}\r\n      key={i}\r\n    ></div>\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className={`palette-block \r\n      ${props.editor ? \"editor-mode\" : \"\"}\r\n      ${props.darkMode ? \"dark\" : \"\"} \r\n      ${props.activePalette.index === props.index && props.mode === 1 ? \"active-palette\" : \"\"} \r\n      ${props.deleteMode ? \"delete-mode\" : \"\"}`} \r\n      onClick={() => {\r\n        if (props.deleteMode) {\r\n          props.deletePalette(props.index);\r\n        } else if (props.editor) {\r\n          props.setCurrentPalette(props.index);\r\n        }\r\n      }}\r\n    >\r\n      <div className={`icon-overlay`} />\r\n      {renderColors}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    Viewport: state.actionReducer.VIEWPORT_HEIGHT,\r\n    activePalette: state.actionReducer.ACTIVE_PALETTE,\r\n    mode: state.actionReducer.MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  deletePalette,\r\n  setCurrentPalette\r\n};\r\n\r\nconst PaletteBlock = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PaletteBlock_);\r\n\r\nexport default PaletteBlock;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { storePalette } from \"../../redux/actions/actions\";\r\nimport \"./PaletteTracker.scss\";\r\nimport PaletteBlock from \"./PaletteBlock\";\r\n\r\nconst PaletteTracker_ = props => {\r\n  const [deleteMode, setDeleteMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.palettes.length === 0) {\r\n      setDeleteMode(false);\r\n    }\r\n  }, [props.palettes]);\r\n\r\n  const renderPaletteBlocks = props.palettes.map((palette, i) => (\r\n    <PaletteBlock\r\n      palette={palette}\r\n      key={i}\r\n      deleteMode={deleteMode}\r\n      index={i}\r\n      editor={props.editor}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className={`palette-tracker ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <button\r\n        className={`button palettes-button ${props.darkMode ? \"dark\" : \"\"}`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.storePalette();\r\n        }}\r\n      >\r\n        Add\r\n      </button>\r\n      <button\r\n        className={`button palettes-button ${props.darkMode ? \"dark\" : \"\"} ${\r\n          deleteMode ? \"active\" : \"\"\r\n        }`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setDeleteMode(!deleteMode);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n      <div className=\"palette-blocks-wrapper\">{renderPaletteBlocks}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    palettes: state.actionReducer.PALETTES\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storePalette\r\n};\r\n\r\nconst PaletteTracker = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PaletteTracker_);\r\n\r\nexport default PaletteTracker;\r\n","import React, { useRef } from \"react\";\r\nimport ColorWheel from \"./ColorWheel/ColorWheel\";\r\nimport Controls from \"./Controls/Controls\";\r\nimport Presets from \"./Presets/Presets\";\r\nimport CurrentColors from \"./CurrentColors/CurrentColors\";\r\nimport \"./ColorPicker.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport PaletteTracker from \"../PaletteTracker/PaletteTracker\";\r\n\r\nconst ColorPicker_ = props => {\r\n  const colorContainer = useRef(null);\r\n\r\n  return (\r\n    <div className={`color-picker-interface ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"settings-wrapper\">\r\n        <Presets />\r\n        <Controls />\r\n      </div>\r\n      <ColorWheel colorsContainer={colorContainer} />\r\n      <CurrentColors paletteRef={colorContainer} />\r\n      <PaletteTracker editor={false}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst ColorPicker = connect(mapStateToProps, )(ColorPicker_);\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  intToHSL,\r\n  HSLtoInt,\r\n} from \"../../../util/color-utility\";\r\nimport { updatePaletteSingle } from \"../../../redux/actions/actions\";\r\nimport { copyColor, getColorString } from \"../../../util/copy-colors\";\r\nimport { store } from \"../../../redux/reducers/reducers\";\r\n\r\nconst EditorColorBlock_ = props => {\r\n  const avgColor = () => {\r\n    let rgb = [...props.activePalette];\r\n    return 255 - Math.round((rgb[0] + rgb[1] + rgb[2]) / 3);\r\n  };\r\n\r\n  const [avg, setAvg] = useState(avgColor());\r\n\r\n  let width =\r\n    (1.36 * props.viewport) /\r\n    store.getState().actionReducer.ACTIVE_PALETTE.palette.length;\r\n\r\n  const getGreaterColor = () => {\r\n    let colorInts = props.activePalette;\r\n    colorInts = intToHSL(colorInts);\r\n    let greaterColor;\r\n    if (props.editSetting[0] === true) {\r\n      greaterColor = colorInts[0] + props.increment;\r\n      if (greaterColor >= 360) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[0] = greaterColor;\r\n      }\r\n    }\r\n    if (props.editSetting[1] === true) {\r\n      greaterColor = colorInts[1] + props.increment;\r\n      if (greaterColor >= 100) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[1] = greaterColor;\r\n      }\r\n    }\r\n    if (props.editSetting[2] === true) {\r\n      greaterColor = colorInts[2] + props.increment;\r\n      if (greaterColor >= 100) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[2] = greaterColor;\r\n      }\r\n    }\r\n    return HSLtoInt(colorInts);\r\n  };\r\n\r\n  const getLesserColor = () => {\r\n    let colorInts = props.activePalette;\r\n    colorInts = intToHSL(colorInts);\r\n    let lesserColor;\r\n    if (props.editSetting[0] === true) {\r\n      lesserColor = colorInts[0] - props.increment;\r\n      if (lesserColor <= 1) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[0] = lesserColor;\r\n      }\r\n    }\r\n    if (props.editSetting[1] === true) {\r\n      lesserColor = colorInts[1] - props.increment;\r\n      if (lesserColor <= 1) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[1] = lesserColor;\r\n      }\r\n    }\r\n    if (props.editSetting[2] === true) {\r\n      lesserColor = colorInts[2] - props.increment;\r\n      if (lesserColor <= 1) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[2] = lesserColor;\r\n      }\r\n    }\r\n    return HSLtoInt(colorInts);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAvg(avgColor());\r\n  }, [props.color, props.colorMode]);\r\n\r\n  return (\r\n    <div\r\n      className={`editor-color-block\r\n      ${props.editor ? \"editor-mode\" : \"\"}`}\r\n      style={{ width: width }}\r\n    >\r\n      <div\r\n        className=\"greater-color\"\r\n        style={{\r\n          backgroundColor: getColorString(getGreaterColor(), props.colorMode),\r\n          color: `rgba(${avg}, ${avg}, ${avg}, 0.7)`\r\n        }}\r\n        onClick={() => {\r\n          props.updatePaletteSingle(getGreaterColor(), props.index);\r\n        }}\r\n      >\r\n        +\r\n      </div>\r\n      <div\r\n        className=\"current-color\"\r\n        style={{\r\n          backgroundColor: getColorString(props.activePalette, props.colorMode),\r\n        }}\r\n        onClick={() => copyColor(props.activePalette, props.colorMode, props.quotes, props.prefix)}\r\n      >\r\n        <span className=\"copy-prompt\" style={{color: `rgba(${avg}, ${avg}, ${avg}, 0.7)`}} >Copy</span>\r\n        <span className=\"label color-label\" style={{color: `rgba(${avg}, ${avg}, ${avg}, 0.3)`}}>{getColorString(props.activePalette, props.colorMode)}</span>\r\n      </div>\r\n      <div\r\n        className=\"lesser-color\"\r\n        style={{\r\n          backgroundColor: getColorString(getLesserColor(), props.colorMode),\r\n          color: `rgba(${avg}, ${avg}, ${avg}, 0.7)`\r\n        }}\r\n        onClick={() => {\r\n          props.updatePaletteSingle(getLesserColor(), props.index);\r\n        }}\r\n      >\r\n        -\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    prefix: state.actionReducer.PREFIX,\r\n    quotes: state.actionReducer.QUOTES,\r\n    viewport: state.actionReducer.VIEWPORT_HEIGHT,\r\n    activePalette: state.actionReducer.ACTIVE_PALETTE.palette[ownProps.index],\r\n    colorMode: state.actionReducer.COLOR_MODE,\r\n    editSetting: state.actionReducer.EDIT_SETTING,\r\n    increment: state.actionReducer.EDIT_INCREMENT\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updatePaletteSingle\r\n};\r\n\r\nconst EditorColorBlock = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditorColorBlock_);\r\n\r\nexport default EditorColorBlock;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updatePaletteAll } from \"../../../redux/actions/actions\";\r\nimport {\r\n  intToHSL,\r\n  HSLtoInt\r\n} from \"../../../util/color-utility\";\r\nimport EditorColorBlock from \"./EditorColorBlock\";\r\nimport \"./CurrentPalette.scss\";\r\n\r\nconst CurrentPalette_ = props => {\r\n  const renderEditorColorBlocks = props.activePalette.palette.map(\r\n    (color, i) => <EditorColorBlock className=\"block-color\" key={i} index={i} />\r\n  );\r\n\r\n  const getGreaterColors = colorInts => {\r\n    colorInts = intToHSL(colorInts);\r\n    let greaterColor;\r\n    if (props.editSetting[0] === true) {\r\n      greaterColor = colorInts[0] + props.increment;\r\n      if (greaterColor >= 360) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[0] = greaterColor;\r\n      }\r\n    }\r\n    if (props.editSetting[1] === true) {\r\n      greaterColor = colorInts[1] + props.increment;\r\n      if (greaterColor >= 100) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[1] = greaterColor;\r\n      }\r\n    }\r\n    if (props.editSetting[2] === true) {\r\n      greaterColor = colorInts[2] + props.increment;\r\n      if (greaterColor >= 100) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[2] = greaterColor;\r\n      }\r\n    }\r\n    return HSLtoInt(colorInts);\r\n  };\r\n\r\n  const getLesserColors = colorInts => {\r\n    colorInts = intToHSL(colorInts);\r\n    let lesserColor;\r\n    if (props.editSetting[0] === true) {\r\n      lesserColor = colorInts[0] - props.increment;\r\n      if (lesserColor <= 1) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[0] = lesserColor;\r\n      }\r\n    }\r\n    if (props.editSetting[1] === true) {\r\n      lesserColor = colorInts[1] - props.increment;\r\n      if (lesserColor <= 1) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[1] = lesserColor;\r\n      }\r\n    }\r\n    if (props.editSetting[2] === true) {\r\n      lesserColor = colorInts[2] - props.increment;\r\n      if (lesserColor <= 1) {\r\n        return HSLtoInt(colorInts);\r\n      } else {\r\n        colorInts[2] = lesserColor;\r\n      }\r\n    }\r\n    return HSLtoInt(colorInts);\r\n  };\r\n\r\n  const incrementAllUp = () => {\r\n    let activePaletteColors = [...props.activePalette.palette];\r\n    for (let i = 0; i < activePaletteColors.length; i++) {\r\n      activePaletteColors[i] = getGreaterColors(activePaletteColors[i]);\r\n    }\r\n    return activePaletteColors;\r\n  };\r\n\r\n  const incrementAllDown = () => {\r\n    let activePaletteColors = [...props.activePalette.palette];\r\n    for (let i = 0; i < activePaletteColors.length; i++) {\r\n      activePaletteColors[i] = getLesserColors(activePaletteColors[i]);\r\n    }\r\n    return activePaletteColors;\r\n  };\r\n\r\n  return (\r\n    <div className={`current-palette ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div\r\n        className={`editor-color-blocks-wrapper ${\r\n          props.darkMode ? \"dark\" : \"\"\r\n        }`}\r\n      >\r\n        {renderEditorColorBlocks}\r\n        <div\r\n          className={`master-block editor-color-block\r\n          ${props.editor ? \"editor-mode\" : \"\"}\r\n          ${props.darkMode ? \"dark\" : \"\"} \r\n          ${props.activePalette.index === -1 ? \"inactive\" : \"\"}`}\r\n        >\r\n          <div\r\n            className=\"greater-color master\"\r\n            onClick={() => {\r\n              props.updatePaletteAll(incrementAllUp());\r\n            }}\r\n          >\r\n            +\r\n          </div>\r\n          <div className=\"current-color master\">\r\n            <h2 className=\"label\">ALL</h2>\r\n          </div>\r\n          <div\r\n            className=\"lesser-color master\"\r\n            onClick={() => {\r\n              props.updatePaletteAll(incrementAllDown());\r\n            }}\r\n          >\r\n            -\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    viewport: state.actionReducer.VIEWPORT_HEIGHT,\r\n    activePalette: state.actionReducer.ACTIVE_PALETTE,\r\n    colorMode: state.actionReducer.COLOR_MODE,\r\n    editSetting: state.actionReducer.EDIT_SETTING,\r\n    increment: state.actionReducer.EDIT_INCREMENT\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updatePaletteAll\r\n};\r\n\r\nconst CurrentPalette = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CurrentPalette_);\r\n\r\nexport default CurrentPalette;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setColorMode,\r\n  setEditSetting,\r\n  setEditIncrement,\r\n  setPrefix,\r\n  setQuotes\r\n} from \"../../../redux/actions/actions\";\r\nimport { copyAllColors } from \"../../../util/copy-colors\";\r\nimport \"../../Slider/Slider.scss\";\r\nimport \"./EditorSettings.scss\";\r\n\r\nconst EditorSettings_ = props => {\r\n\r\n  return (\r\n    <div className={`editor-settings ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className={`editor-controls increment-settings ${props.darkMode ? \"dark\" : \"\"}`}>\r\n        <div className=\"input-container\">\r\n          <button\r\n            className={`button editor-button longest ${\r\n              props.editMode[0] ? \"active\" : \"\"\r\n            } ${props.darkMode ? \"dark\" : \"\"}`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              props.setEditSetting(0);\r\n            }}\r\n          >\r\n            Hue\r\n          </button>\r\n          <button\r\n            className={`button editor-button longest ${\r\n              props.editMode[1] ? \"active\" : \"\"\r\n            } ${props.darkMode ? \"dark\" : \"\"}`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              props.setEditSetting(1);\r\n            }}\r\n          >\r\n            Saturation\r\n          </button>\r\n          <button\r\n            className={`button editor-button longest ${\r\n              props.editMode[2] ? \"active\" : \"\"\r\n            } ${props.darkMode ? \"dark\" : \"\"}`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              props.setEditSetting(2);\r\n            }}\r\n          >\r\n            Lightness\r\n          </button>\r\n\r\n          <div className=\"slider-container short\">\r\n            <p className=\"slider-label short\"><span className=\"label-value\">+/- {props.editIncrement}</span></p>\r\n            <input\r\n              type=\"range\"\r\n              className={`slider short ${props.darkMode ? \"dark\" : \"\"}`}\r\n              min={1}\r\n              max={25}\r\n              step={1}\r\n              value={props.editIncrement}\r\n              onChange={val => {\r\n                props.setEditIncrement(parseInt(val.target.value));\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`editor-controls color-modes ${props.darkMode ? \"dark\" : \"\"}`}>\r\n        <div className=\"input-container\">\r\n          <button\r\n            className={`button editor-button shorter ${\r\n              props.colorMode === 1 ? \"active\" : \"\"\r\n            } ${props.darkMode ? \"dark\" : \"\"}`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (props.colorMode != 1) {\r\n                props.setColorMode(1);\r\n              }\r\n            }}\r\n          >\r\n            HEX\r\n          </button>\r\n          <button\r\n            className={`button editor-button shorter ${\r\n              props.colorMode === 2 ? \"active\" : \"\"\r\n            } ${props.darkMode ? \"dark\" : \"\"}`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (props.colorMode != 2) {\r\n                props.setColorMode(2);\r\n              }\r\n            }}\r\n          >\r\n            RGB\r\n          </button>\r\n          <button\r\n            className={`button editor-button shorter ${\r\n              props.colorMode === 3 ? \"active\" : \"\"\r\n            } ${props.darkMode ? \"dark\" : \"\"}`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (props.colorMode != 3) {\r\n                props.setColorMode(3);\r\n              }\r\n            }}\r\n          >\r\n            HSL\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={`editor-controls copy-options ${props.darkMode ? \"dark\" : \"\"}`}>\r\n        <div className=\"input-container\">\r\n          <button\r\n            className={`button editor-button longer ${props.prefix ? \"active\" : \"\"} ${\r\n              props.darkMode ? \"dark\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              props.setPrefix();\r\n            }}\r\n          >\r\n            {props.colorMode === 1\r\n              ? \"#...\"\r\n              : props.colorMode === 2\r\n              ? \"rgb(...)\"\r\n              : \"hsl(...)\"}\r\n          </button>\r\n          <button\r\n            className={`button editor-button longer ${props.quotes ? \"active\" : \"\"} ${\r\n              props.darkMode ? \"dark\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              props.setQuotes();\r\n            }}\r\n          >\r\n            Quotes\r\n          </button>\r\n          <button\r\n            className={`button editor-button longer ${\r\n              props.darkMode ? \"dark\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              copyAllColors(\r\n                [...props.activePalette.palette],\r\n                props.colorMode,\r\n                props.quotes,\r\n                props.prefix\r\n              );\r\n            }}\r\n          >\r\n            Copy all\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    prefix: state.actionReducer.PREFIX,\r\n    quotes: state.actionReducer.QUOTES,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    viewport: state.actionReducer.VIEWPORT_HEIGHT,\r\n    activePalette: state.actionReducer.ACTIVE_PALETTE,\r\n    colorMode: state.actionReducer.COLOR_MODE,\r\n    editMode: state.actionReducer.EDIT_SETTING,\r\n    editIncrement: state.actionReducer.EDIT_INCREMENT\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setColorMode,\r\n  setEditSetting,\r\n  setEditIncrement,\r\n  setPrefix,\r\n  setQuotes\r\n};\r\n\r\nconst EditorSettings = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditorSettings_);\r\n\r\nexport default EditorSettings;\r\n","import React, { useRef } from \"react\";\r\nimport \"./PaletteEditor.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport PaletteTracker from \"../PaletteTracker/PaletteTracker\";\r\nimport CurrentPalette from \"./CurrentPalette/CurrentPalette\"\r\nimport EditorSettings from \"./EditorSettings/EditorSettings\"\r\n\r\nconst ColorPicker_ = props => {\r\n  const colorContainer = useRef(null);\r\n\r\n  return (\r\n    <div className={`palette-editor-interface ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"palette-components-wrapper\">\r\n        <EditorSettings />\r\n        <CurrentPalette editor={true} />\r\n      </div>\r\n      <PaletteTracker editor={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst ColorPicker = connect(mapStateToProps)(ColorPicker_);\r\n\r\nexport default ColorPicker;\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setViewport, setDarkMode, setMode } from \"./redux/actions/actions\";\r\nimport \"./App.scss\";\r\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\nimport PaletteEditor from \"./components/PaletteEditor/PaletteEditor\";\r\n\r\nconst App_ = props => {\r\n  useLayoutEffect(() => {\r\n    window.addEventListener(\"resize\", () => props.setViewport());\r\n  });\r\n\r\n  return (\r\n    <div className={`App ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className={`wrapper ${props.darkMode ? \"dark\" : \"\"}`}>\r\n        <div className={`logo-container ${props.darkMode ? \"hidden\" : \"\"}`} />\r\n        <div\r\n          className={`logo-container ${props.darkMode ? \"dark\" : \"hidden\"}`}\r\n        />\r\n        <div\r\n          className={`ui-container active-tab ${props.darkMode ? \"dark\" : \"\"}`}\r\n        >\r\n          <div className=\"navbar-container\">\r\n            <div\r\n              className={`tab color-picker-tab ${\r\n                props.appMode === 0 ? \"active-tab\" : \"\"\r\n              } ${props.darkMode ? \"dark\" : \"\"}`}\r\n              onClick={() => props.setMode(0)}\r\n            >\r\n              Color Picker\r\n            </div>\r\n            <div\r\n              className={`shadow-tab tab color-picker-tab \r\n              ${props.darkMode ? \"dark\" : \"\"\r\n              }`}\r\n            />\r\n            <div\r\n              className={`tab editor-tab ${\r\n                props.appMode === 1 ? \"active-tab\" : \"\"\r\n              } ${props.darkMode ? \"dark\" : \"\"}`}\r\n              onClick={() => props.setMode(1)}\r\n            >\r\n              Palette Editor\r\n            </div>\r\n            <div\r\n              className={`shadow-tab tab editor-tab ${\r\n                props.darkMode ? \"dark\" : \"\"\r\n              }`}\r\n            />\r\n            <div\r\n              className={`tab export-tab ${\r\n                props.appMode === 2 ? \"active-tab\" : \"\"\r\n              } ${props.darkMode ? \"dark\" : \"\"}`}\r\n             // onClick={() => props.setMode(2)}\r\n            >\r\n              File Export (WIP)\r\n            </div>\r\n            <div\r\n              className={`shadow-tab tab export-tab ${\r\n                props.darkMode ? \"dark\" : \"\"\r\n              }`}\r\n            />\r\n            <button\r\n              className={`button set-dark ${props.darkMode ? \"dark\" : \"\"}`}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                props.setDarkMode();\r\n              }}\r\n            >\r\n              {props.darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"feature-wrapper\"\r\n            style={{ display: props.appMode === 0 ? \"\" : \"none\" }}\r\n          >\r\n            <ColorPicker />\r\n          </div>\r\n          <div\r\n            className=\"feature-wrapper\"\r\n            style={{ display: props.appMode === 1 ? \"\" : \"none\" }}\r\n          >\r\n            <PaletteEditor />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    appMode: state.actionReducer.MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setViewport,\r\n  setDarkMode,\r\n  setMode\r\n};\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps)(App_);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store}  from \"./redux/reducers/reducers\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nconst vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\nconst vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}