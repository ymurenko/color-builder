{"version":3,"sources":["util/viewport-height.js","redux/reducers/reducers.js","redux/actions/actions.js","components/Selectors/Selectors.js","components/ColorWheel/ColorWheel.js","components/Controls/Controls.js","components/Presets/Presets.js","components/ColorBlock/ColorBlock.js","components/PickerPalette/PickerPalette.js","components/Palettes/PaletteBlock.js","components/Palettes/Palettes.js","components/ColorPicker/ColorPicker.js","App.js","serviceWorker.js","index.js"],"names":["getViewport","VH","Math","max","document","documentElement","clientHeight","window","innerHeight","VW","innerWidth","initialState","VIEWPORT_HEIGHT","COLORS","PALETTES","LIGHTNESS","SATURATION","SELECTOR_COUNT","SELECTOR_ANGLE","SELECTOR_RADIUS","SELECTOR_STAGGER","CLUSTER_ANGLE","LINKED","DARK_MODE","HASH","QUOTES","PRESET","RESET","reducers","combineReducers","actionReducer","state","action","type","CURRENT_COLORS","INDEX","COLOR","NEW_PALETTES","push","CURRENT_PALETTES","splice","NEW_COLORS","length","fill","store","createStore","setSelectorCount","val","setLinkedState","setDarkMode","resetState","mapDispatchToProps","storeColor","index","Selectors","connect","selectorCount","selectorAngle","selectorRadius","selectorStagger","lightness","saturation","linked","reset","preset","clusterAngle","CWRadius","props","svg","useRef","canvas","canvasPosX","canvasPosY","circleRefs","circleCoordinates","currentActiveCircle","firstCircleAngle","lastCWRadius","setColor","x","y","key","pixel","current","getContext","getImageData","data","pixelColor","toString","toUpperCase","slice","style","stroke","setHarmony","radOffset","harmony","total","count","i","round","PI","getPointMath","mathVars","x0","getAttribute","y0","radius","sqrt","dx","d0x","d0y","angle","atan2","x1","y1","x2","y2","d1x","d1y","d2x","d2y","isInCircle","handleMouseUp","addMouseTrackerLinked","event","mouseX","pageX","mouseY","pageY","radsFromMouse","radsOffset","setAttribute","cos","sin","addMouseTracker","id","e","removeEventListener","handleMouseDown","rect","getBoundingClientRect","left","top","target","addEventListener","useEffect","staggerOffset","XYresizeOffset","useLayoutEffect","children","className","ref","width","height","viewBox","elements","cx","cy","r","strokeWidth","onMouseDown","onMouseUp","createCircles","ColorWheel","darkMode","canvasContext","clearRect","value","rad","beginPath","gradient","createLinearGradient","addColorStop","strokeStyle","moveTo","lineTo","generateGradient","onClick","colorsContainer","setLightness","setSaturation","setSelectorAngle","setSelectorRadius","setSelectorStagger","Controls","Viewport","staggerSlider","selectorCountSlider","min","step","onChange","toFixed","defaultValue","setClusterAngle","setPreset","Presets","marginTop","ColorBlock","hash","quotes","colorBlock","textColor","color","backgroundColor","substr","copy","copyColor","paddingTop","setQuotes","setHash","PickerPalette","colors","renderColorBlocks","map","paletteRef","colorArr","getState","copyAllColors","deletePalette","PaletteBlock","palette","renderColors","deleteMode","storePalette","Palettes","palettes","useState","setDeleteMode","renderPaletteBlocks","ColorPicker","colorContainer","setViewport","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","vw","clientWidth","vh","console","log","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6fa5e298.chunk.js","sourcesContent":["export const getViewport = () => {\r\n  let VH = Math.max(\r\n    document.documentElement.clientHeight,\r\n    window.innerHeight || 0\r\n  );\r\n  let VW = Math.max(\r\n    document.documentElement.clientHeight,\r\n    window.innerWidth || 0\r\n  );\r\n  \r\n  return VH > VW ? VW : VH;\r\n};\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { getViewport } from \"../../util/viewport-height\";\r\n\r\nconst initialState = {\r\n  VIEWPORT_HEIGHT: getViewport(),\r\n  COLORS: [\"#FFF\", \"#FFF\", \"#FFF\"],\r\n  PALETTES: [],\r\n  LIGHTNESS: 50,\r\n  SATURATION: 100,\r\n  SELECTOR_COUNT: 4,\r\n  SELECTOR_ANGLE: 180,\r\n  SELECTOR_RADIUS: 118,\r\n  SELECTOR_STAGGER: 0,\r\n  CLUSTER_ANGLE: 30,\r\n  LINKED: false,\r\n  DARK_MODE: false,\r\n  HASH: true,\r\n  QUOTES: true,\r\n  PRESET: 1,\r\n  RESET: 0 //for comp. rerender if init state doesnt change a prop\r\n};\r\n\r\nexport const actionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_VIEWPORT_HEIGHT\":\r\n      return {\r\n        ...state,\r\n        VIEWPORT_HEIGHT: getViewport()\r\n      };\r\n    case \"SET_COLOR\":\r\n      let CURRENT_COLORS = [...state.COLORS];\r\n      CURRENT_COLORS[action.INDEX] = action.COLOR;\r\n      return {\r\n        ...state,\r\n        COLORS: CURRENT_COLORS\r\n      };\r\n    case \"STORE_PALETTE\":\r\n      let NEW_PALETTES = [...state.PALETTES];\r\n      NEW_PALETTES.push([...state.COLORS])\r\n      return {\r\n        ...state,\r\n        PALETTES: NEW_PALETTES\r\n      }\r\n    case \"DELETE_PALETTE\":\r\n      let CURRENT_PALETTES = [...state.PALETTES];\r\n      CURRENT_PALETTES.splice(action.INDEX, 1);\r\n      return {\r\n        ...state,\r\n        PALETTES: CURRENT_PALETTES\r\n      }\r\n    case \"SET_LIGHTNESS\":\r\n      return {\r\n        ...state,\r\n        LIGHTNESS: action.LIGHTNESS\r\n      };\r\n    case \"SET_SATURATION\":\r\n      return {\r\n        ...state,\r\n        SATURATION: action.SATURATION\r\n      };\r\n    case \"SET_SELECTOR_COUNT\":\r\n      let NEW_COLORS = [];\r\n      NEW_COLORS.length = action.SELECTOR_COUNT;\r\n      NEW_COLORS.fill(\"#FFF\");\r\n      return {\r\n        ...state,\r\n        COLORS: NEW_COLORS,\r\n        SELECTOR_COUNT: action.SELECTOR_COUNT\r\n      };\r\n    case \"SET_SELECTOR_ANGLE\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_ANGLE: action.SELECTOR_ANGLE\r\n      };\r\n    case \"SET_SELECTOR_RADIUS\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_RADIUS: action.SELECTOR_RADIUS\r\n      };\r\n    case \"SET_SELECTOR_STAGGER\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_STAGGER: action.SELECTOR_STAGGER\r\n      };\r\n    case \"SET_LINKED\":\r\n      return {\r\n        ...state,\r\n        LINKED: !state.LINKED\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_HASH\":\r\n      return {\r\n        ...state,\r\n        HASH: !state.HASH\r\n      };\r\n    case \"SET_QUOTES\":\r\n      return {\r\n        ...state,\r\n        QUOTES: !state.QUOTES\r\n      };\r\n    case \"SET_PRESET\":\r\n      switch (action.PRESET) {\r\n        case 2:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 20\r\n          };\r\n        case 3:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 16\r\n          };\r\n        case 4:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 16\r\n          };\r\n        case 5:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 15\r\n          };\r\n        default:\r\n          return state\r\n      }\r\n    case \"SET_CLUSTER_ANGLE\":\r\n      return {\r\n        ...state,\r\n        CLUSTER_ANGLE: action.CLUSTER_ANGLE\r\n      };\r\n    case \"RESET\":\r\n      return {\r\n        ...initialState,\r\n        VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n        PALETTES: state.PALETTES,\r\n        SELECTOR_COUNT: state.SELECTOR_COUNT,\r\n        DARK_MODE: state.DARK_MODE,\r\n        RESET: 1 - state.RESET\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const reducers = combineReducers({\r\n  actionReducer\r\n});\r\n\r\n// store.js\r\nexport const store = createStore(reducers);\r\n","//import { SET_COLOR } from \"./action-types\";\r\n\r\nexport const setViewport = () => (\r\n  { type: 'SET_VIEWPORT_HEIGHT' }\r\n)\r\nexport const storeColor = (val, index) => (\r\n  { type: 'SET_COLOR', COLOR: val, INDEX: index }\r\n)\r\nexport const storePalette = () => (\r\n  { type: 'STORE_PALETTE' }\r\n)\r\nexport const deletePalette = (index) => (\r\n  { type: 'DELETE_PALETTE', INDEX: index}\r\n)\r\nexport const setLightness = (val) => (\r\n  { type: 'SET_LIGHTNESS', LIGHTNESS: val }\r\n)\r\nexport const setSaturation = (val) => (\r\n  { type: 'SET_SATURATION', SATURATION: val }\r\n)\r\nexport const setSelectorCount = (val) => (\r\n  { type: 'SET_SELECTOR_COUNT', SELECTOR_COUNT: val }\r\n)\r\nexport const setSelectorAngle = (val) => (\r\n  { type: 'SET_SELECTOR_ANGLE', SELECTOR_ANGLE: val }\r\n)\r\nexport const setSelectorRadius = (val) => (\r\n  { type: 'SET_SELECTOR_RADIUS', SELECTOR_RADIUS: val }\r\n)\r\nexport const setSelectorStagger = (val) => (\r\n  { type: 'SET_SELECTOR_STAGGER', SELECTOR_STAGGER: val }\r\n)\r\nexport const setLinkedState = () => (\r\n  { type: 'SET_LINKED' }\r\n)\r\nexport const setDarkMode = () => (\r\n  { type: 'SET_DARK_MODE' }\r\n)\r\nexport const setCopyType = () => (\r\n  { type: 'SET_COPY_TYPE' }\r\n)\r\nexport const setQuotes = () => (\r\n  { type: 'SET_QUOTES' }\r\n)\r\nexport const setHash = () => (\r\n  { type: 'SET_HASH' }\r\n)\r\nexport const setPreset = (val) => (\r\n  { type: 'SET_PRESET', PRESET: val }\r\n)\r\nexport const setClusterAngle = (val) => (\r\n  { type: 'SET_CLUSTER_ANGLE', CLUSTER_ANGLE: val }\r\n)\r\nexport const resetState = () => (\r\n  { type: 'RESET' }\r\n)\r\n","import React, { useEffect, useLayoutEffect, useRef, createRef } from \"react\";\r\nimport useDidMountEffect from \"../../util/useDidMountEffect\";\r\nimport { connect } from \"react-redux\";\r\nimport { storeColor } from \"../../redux/actions/actions\";\r\n\r\nconst Selectors_ = props => {\r\n  const svg = useRef(null);\r\n  let { canvas } = props;\r\n  let canvasPosX = 0;\r\n  let canvasPosY = 0;\r\n  let circleRefs = null;\r\n  let circleCoordinates = [];\r\n  let currentActiveCircle = null;\r\n  let firstCircleAngle = 0;\r\n  let lastCWRadius = 0;\r\n\r\n  const setColor = (x, y, key) => {\r\n    let pixel = canvas.current.getContext(\"2d\").getImageData(x, y, 1, 1).data;\r\n    let pixelColor =\r\n      \"#\" +\r\n      ((1 << 24) + (pixel[0] << 16) + (pixel[1] << 8) + pixel[2])\r\n        .toString(16)\r\n        .toUpperCase()\r\n        .slice(1);\r\n    circleRefs[key].style.fill = pixelColor;\r\n    if (props.lightness < 50) {\r\n      circleRefs[key].style.stroke = \"#d4d4d4\";\r\n    } else {\r\n      circleRefs[key].style.stroke = \"#4d4d4d\";\r\n    }\r\n\r\n    props.storeColor(pixelColor, key);\r\n  };\r\n\r\n  const setHarmony = () => {\r\n    //sets the angle of the polar offset from +X-axis\r\n    let radOffset;\r\n    let harmony = {total: 0, count: 1};\r\n    if (props.preset != 1 && props.selectorCount != props.preset){\r\n      radOffset = [0,0]\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        if(harmony.count === Math.round(props.selectorCount/props.preset)){\r\n          harmony.total++\r\n          harmony.count = 0;\r\n          radOffset.push(radOffset[i] = (Math.round(props.selectorAngle / props.preset) * (Math.PI / 180)) * harmony.total)\r\n        }\r\n        else {\r\n          radOffset.push(radOffset[i] += props.clusterAngle * (Math.PI / 180))\r\n        }\r\n        harmony.count++;\r\n      }\r\n    }\r\n    else {\r\n      radOffset = [firstCircleAngle]\r\n      for (let i = 0; i < props.selectorCount; i++) {\r\n        radOffset.push(radOffset[i] + Math.round(props.selectorAngle / props.selectorCount) * (Math.PI / 180))\r\n      }\r\n    }\r\n    return radOffset\r\n  }\r\n\r\n  const createCircles = () => {\r\n    let elements = [];\r\n    let radOffset = setHarmony()\r\n\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = props.CWRadius + props.selectorRadius * Math.cos(radOffset[i]);\r\n      let y = props.CWRadius + props.selectorRadius * Math.sin(radOffset[i]);\r\n      elements.push(\r\n        <circle\r\n          cx={x}\r\n          cy={y}\r\n          r={`${props.CWRadius*0.06}`}\r\n          stroke=\"#a1a1a1\"\r\n          strokeWidth={`${props.CWRadius*0.003}`}\r\n          onMouseDown={e => handleMouseDown(e)}\r\n          onMouseUp={e => handleMouseUp(e)}\r\n          key={i}\r\n          id={`${i}`}\r\n        />\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  const getPointMath = () => {\r\n    //gets the current angles and radii of the points\r\n    //(called once after points are linked)\r\n    let mathVars = [];\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let radius = Math.sqrt((props.CWRadius - x0) * (props.CWRadius - x0) + (props.CWRadius - y0) * (props.CWRadius - y0));\r\n    let dx = props.CWRadius;\r\n    let dy = 0;\r\n    let d0x = x0 - props.CWRadius;\r\n    let d0y = y0 - props.CWRadius;\r\n    let angle = Math.atan2(d0y, d0x) - Math.atan2(dy, dx);\r\n    mathVars.push({\r\n      angle: angle,\r\n      radius: radius\r\n    });\r\n    firstCircleAngle = angle;\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x1 = circleRefs[i - 1].getAttribute(\"cx\");\r\n      let y1 = circleRefs[i - 1].getAttribute(\"cy\");\r\n      let x2 = circleRefs[i].getAttribute(\"cx\");\r\n      let y2 = circleRefs[i].getAttribute(\"cy\");\r\n\r\n      let radius = Math.sqrt((props.CWRadius - x2) * (props.CWRadius - x2) + (props.CWRadius - y2) * (props.CWRadius - y2));\r\n\r\n      let d1x = x1 - props.CWRadius;\r\n      let d1y = y1 - props.CWRadius;\r\n      let d2x = x2 - props.CWRadius;\r\n      let d2y = y2 - props.CWRadius;\r\n\r\n      let angle = Math.atan2(d2y, d2x) - Math.atan2(d1y, d1x);\r\n      mathVars.push({\r\n        angle: angle,\r\n        radius: radius\r\n      });\r\n    }\r\n    return mathVars;\r\n  };\r\n\r\n  const isInCircle = (x, y) => {\r\n   if (Math.sqrt((props.CWRadius - x) * (props.CWRadius - x) + (props.CWRadius - y) * (props.CWRadius - y)) > (0.95*props.CWRadius)) {\r\n      handleMouseUp();\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addMouseTrackerLinked = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let d0x = x0 - props.CWRadius;\r\n    let d0y = y0 - props.CWRadius;\r\n    let radsFromMouse = Math.atan2(d0y, d0x);\r\n    let radsOffset = 0;\r\n\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      circleRefs[0].setAttribute(\"cx\", `${mouseX}`);\r\n      circleRefs[0].setAttribute(\"cy\", `${mouseY}`);\r\n\r\n      setColor(x0, y0, 0);\r\n\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        radsOffset += circleCoordinates[i].angle;\r\n\r\n        let x = circleRefs[i].getAttribute(\"cx\");\r\n        let y = circleRefs[i].getAttribute(\"cy\");\r\n\r\n        let angle = radsOffset + radsFromMouse;\r\n        let radius =\r\n          circleCoordinates[i].radius -\r\n          (circleCoordinates[0].radius -\r\n            Math.sqrt(\r\n              (props.CWRadius - mouseX) * (props.CWRadius - mouseX) + (props.CWRadius - mouseY) * (props.CWRadius - mouseY)\r\n            ));\r\n\r\n        if (radius < 0) radius = 0;\r\n        if (radius > props.CWRadius) radius = props.CWRadius;\r\n        circleRefs[i].setAttribute(\"cx\", `${props.CWRadius + radius * Math.cos(angle)}`);\r\n        circleRefs[i].setAttribute(\"cy\", `${props.CWRadius + radius * Math.sin(angle)}`);\r\n        setColor(x, y, i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addMouseTracker = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      currentActiveCircle.setAttribute(\"cx\", `${mouseX}`);\r\n      currentActiveCircle.setAttribute(\"cy\", `${mouseY}`);\r\n      setColor(mouseX, mouseY, currentActiveCircle.id);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    currentActiveCircle = null;\r\n    if (!props.linked) {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n  const handleMouseDown = e => {\r\n    let rect = canvas.current.getBoundingClientRect()\r\n    canvasPosX = rect.left;\r\n    canvasPosY = rect.top;\r\n    currentActiveCircle = e.target;\r\n    if (!props.linked) {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let radOffset = setHarmony();\r\n    let staggerOffset = 0;\r\n    let XYresizeOffset = props.CWRadius / lastCWRadius;\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = props.CWRadius + (props.selectorRadius - staggerOffset) * Math.cos(radOffset[i]);\r\n      let y = props.CWRadius + (props.selectorRadius - staggerOffset) * Math.sin(radOffset[i]);\r\n      circleRefs[i].setAttribute(\"cx\", `${x*XYresizeOffset}`);\r\n      circleRefs[i].setAttribute(\"cy\", `${y*XYresizeOffset}`);\r\n      staggerOffset += props.selectorStagger / props.selectorCount\r\n    }\r\n  }, [props.selectorStagger, props.selectorCount, props.selectorRadius,  props.selectorAngle, props.clusterAngle, props.reset, props.CWRadius]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = circleRefs[i].getAttribute(\"cx\");\r\n      let y = circleRefs[i].getAttribute(\"cy\");\r\n      setColor(x, y, i);\r\n    }\r\n  });\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    lastCWRadius = props.CWRadius\r\n    circleRefs = svg.current.children;\r\n    circleCoordinates = getPointMath();\r\n  });\r\n\r\n  return (\r\n    <svg\r\n      className=\"selector\"\r\n      ref={svg}\r\n      width={`${props.CWRadius*2}`}\r\n      height={`${props.CWRadius*2}`}\r\n      viewBox={`0 0 ${props.CWRadius*2} ${props.CWRadius*2}`}\r\n    >\r\n      {createCircles()}\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    linked: state.actionReducer.LINKED,\r\n    reset: state.actionReducer.RESET,\r\n    preset: state.actionReducer.PRESET,\r\n    clusterAngle: state.actionReducer.CLUSTER_ANGLE,\r\n    CWRadius: state.actionReducer.VIEWPORT_HEIGHT * 0.325\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storeColor\r\n};\r\n\r\nconst Selectors = connect(mapStateToProps, mapDispatchToProps)(Selectors_);\r\n\r\nexport default Selectors;\r\n","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetState, setLinkedState } from \"../../redux/actions/actions\";\r\nimport Selectors from \"../Selectors/Selectors\";\r\nimport * as xLUT from \"./xLUT.json\";\r\nimport * as yLUT from \"./yLUT.json\";\r\nimport \"./ColorWheel.scss\";\r\n\r\nconst ColorWheel_ = props => {\r\n  const canvas = useRef(null);\r\n\r\n  const generateGradient = () => {\r\n    let canvasContext = canvas.current.getContext(\"2d\");\r\n    canvasContext.clearRect(0, 0, props.CWRadius*2, props.CWRadius*2);\r\n    for (var i = 0; i < 3600; i += 1) {\r\n      let value = i / 10;\r\n       let rad = ((value - 90) * Math.PI) / 180;\r\n       let x = props.CWRadius + props.CWRadius * Math.cos(-rad)\r\n       let y = props.CWRadius + props.CWRadius * Math.sin(-rad)\r\n      canvasContext.beginPath();\r\n      let gradient = canvasContext.createLinearGradient(\r\n        props.CWRadius,\r\n        props.CWRadius,\r\n        x, y\r\n        /*xLUT.default[value],\r\n        yLUT.default[value]*/\r\n      );\r\n\r\n      gradient.addColorStop(\"0\", `${props.lightness > 45 ? \"white\" : \"black\"}`);\r\n      gradient.addColorStop(\r\n        \"0.95\",\r\n        `hsl(${value}, ${props.saturation}%, ${props.lightness}%)`\r\n      );\r\n      gradient.addColorStop(\r\n        \"0.95\",\r\n        `${props.darkMode ? \"#212121\" : \"#b5b5b5\"}`\r\n      );\r\n      gradient.addColorStop(\"1\", `${props.darkMode ? \"#212121\" : \"#b5b5b5\"}`);\r\n\r\n      canvasContext.strokeStyle = gradient;\r\n\r\n      canvasContext.moveTo(props.CWRadius, props.CWRadius);\r\n      canvasContext.lineTo(x, y);\r\n      canvasContext.stroke();\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    generateGradient();\r\n  });\r\n\r\n  return (\r\n    <div className={`color-wheel ui-block ${props.darkMode ? \"dark\" : \"\"}`} style={{height: `${props.CWRadius*2}`, width: `${props.CWRadius*2}`}}>\r\n      <button\r\n        className={`button button-left ${props.linked ? \"active\" : \"\"} ${\r\n          props.darkMode ? \"dark\" : \"\"\r\n        }`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.setLinkedState();\r\n        }}\r\n      >\r\n        {props.linked ? \"Unlink\" : \"Link\"}\r\n      </button>\r\n      <div className=\"gradient\" >\r\n        <Selectors colorsContainer={props.colorsContainer} canvas={canvas} />\r\n        <canvas width={`${props.CWRadius*2}`} height={`${props.CWRadius*2}`} ref={canvas} />\r\n      </div>\r\n\r\n      <button\r\n        className={`button button-right ${props.darkMode ? \"dark\" : \"\"}`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.resetState();\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    linked: state.actionReducer.LINKED,\r\n    CWRadius: state.actionReducer.VIEWPORT_HEIGHT * 0.325\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  resetState,\r\n  setLinkedState\r\n};\r\n\r\nconst ColorWheel = connect(mapStateToProps, mapDispatchToProps)(ColorWheel_);\r\n\r\nexport default ColorWheel;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode\r\n} from \"../../redux/actions/actions\";\r\nimport \"./Controls.scss\";\r\nimport \"../Slider/Slider.scss\";\r\n\r\nconst Controls_ = props => {\r\n  const staggerSlider = useRef(null);\r\n  const selectorCountSlider = useRef(null);\r\n\r\n  useEffect(() => {\r\n    props.setSelectorStagger(staggerSlider.current.value);\r\n  }, [props.selectorRadius]);\r\n\r\n  return (\r\n    <div className={`controls ui-half-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"controls-wrapper\">\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">Lightness: {props.lightness}%</p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={90}\r\n            step={5}\r\n            value={props.lightness}\r\n            onChange={val => {\r\n              props.setLightness(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">Saturation: {props.saturation}%</p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={100}\r\n            step={5}\r\n            value={props.saturation}\r\n            onChange={val => {\r\n              props.setSaturation(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Number of Points: {props.selectorCount}\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            ref={selectorCountSlider}\r\n            min={props.preset}\r\n            max={15}\r\n            step={props.preset}\r\n            value={props.selectorCount}\r\n            onChange={val => {\r\n              props.setSelectorCount(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Point Spacing Angle:{\" \"}\r\n            {(\r\n              Math.round((props.selectorAngle / props.selectorCount) * 10) / 10\r\n            ).toFixed(1)}\r\n            º\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={360}\r\n            step={1}\r\n            value={props.selectorAngle}\r\n            onChange={val => {\r\n              props.setSelectorAngle(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Distance From Origin:{\" \"}\r\n            {(Math.round((props.selectorRadius / 236) * 1000) / 10).toFixed(0)}\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={1}\r\n            max={0.295 * props.Viewport}\r\n            step={1}\r\n            value={props.selectorRadius}\r\n            onChange={val => {\r\n              props.setSelectorRadius(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Distance Stagger:{\" \"}\r\n            {(Math.round(props.selectorStagger * 10) / 10).toFixed(0)}\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            ref={staggerSlider}\r\n            min={-(0.295 * props.Viewport - props.selectorRadius)}\r\n            max={props.selectorRadius}\r\n            step={1}\r\n            defaultValue={props.selectorStagger}\r\n            onChange={val => {\r\n              props.setSelectorStagger(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    linked: state.actionReducer.LINKED,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    preset: state.actionReducer.PRESET,\r\n    Viewport: state.actionReducer.VIEWPORT_HEIGHT\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode\r\n};\r\n\r\nconst Controls = connect(mapStateToProps, mapDispatchToProps)(Controls_);\r\n\r\nexport default Controls;\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setSelectorCount,\n  setDarkMode,\n  setClusterAngle,\n  setPreset\n} from \"../../redux/actions/actions\";\nimport \"./Presets.scss\";\nimport \"../Slider/Slider.scss\";\n\nconst Presets_ = props => {\n\n  useEffect(() => {\n    if (props.preset != 1) {\n      props.setSelectorCount(props.preset * 3);\n    }\n  }, [props.preset]);\n\n  return (\n    <div className={`presets ui-half-block ${props.darkMode ? \"dark\" : \"\"}`}>\n      <div className=\"presets-wrapper\">\n        <div className=\"presets-grid\">\n          <button\n            className={`preset dyad ${props.darkMode ? \"dark\" : \"\"} ${\n              props.preset === 2 ? \"active\" : \"\"\n            } `}\n            type=\"button\"\n            onClick={() => {\n              if (!(props.preset === 2)) props.setPreset(2);\n            }}\n          />\n          <button\n            className={`preset triad  ${props.darkMode ? \"dark\" : \"\"} ${\n              props.preset === 3 ? \"active\" : \"\"\n            }`}\n            type=\"button\"\n            onClick={() => {\n              if (!(props.preset === 3)) props.setPreset(3);\n            }}\n          />\n          <button\n            className={`preset tetrad  ${props.darkMode ? \"dark\" : \"\"} ${\n              props.preset === 4 ? \"active\" : \"\"\n            }`}\n            type=\"button\"\n            onClick={() => {\n              if (!(props.preset === 4)) props.setPreset(4);\n            }}\n          />\n          <button\n            className={`preset pentad  ${props.darkMode ? \"dark\" : \"\"} ${\n              props.preset === 5 ? \"active\" : \"\"\n            }`}\n            type=\"button\"\n            onClick={() => {\n              if (!(props.preset === 5)) props.setPreset(5);\n            }}\n          />\n        </div>\n      </div>\n      <div\n        className=\"slider-container\"\n        style={{ marginTop: `${props.Viewport * 0.1}` }}\n      >\n        <p className=\"slider-label\">\n          Cluster Spacing Angle:{\" \"}\n          {(Math.round(props.clusterAngle * 10) / 10).toFixed(1)}º\n        </p>\n        <input\n          type=\"range\"\n          className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\n          min={1}\n          max={\n            (props.selectorAngle / props.preset / props.selectorCount) *\n            props.preset\n          }\n          step={1}\n          value={props.clusterAngle}\n          onChange={val => {\n            props.setClusterAngle(val.target.value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\n    darkMode: state.actionReducer.DARK_MODE,\n    preset: state.actionReducer.PRESET,\n    clusterAngle: state.actionReducer.CLUSTER_ANGLE,\n    Viewport: state.actionReducer.VIEWPORT_HEIGHT\n  };\n}\n\nconst mapDispatchToProps = {\n  setSelectorCount,\n  setDarkMode,\n  setClusterAngle,\n  setPreset\n};\n\nconst Presets = connect(mapStateToProps, mapDispatchToProps)(Presets_);\n\nexport default Presets;\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport \"./ColorBlock.scss\";\r\n\r\nconst ColorBlock_ = props => {\r\n  const colorBlock = useRef(null);\r\n  let height = (0.575*props.Viewport) / props.selectorCount;\r\n  let textColor = props.lightness < 50 ? \"#bdbdbd\" : \"#404040\";\r\n\r\n  const copyColor = event => {\r\n    let color = props.color;\r\n    if (!props.hash) {\r\n      color = color.substr(1);\r\n    }\r\n    if (props.quotes) {\r\n      color = `'${color}'`;\r\n    }\r\n    copy(color);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={colorBlock}\r\n      className=\"color-block\"\r\n      style={{\r\n        height: height,\r\n        color: textColor,\r\n        backgroundColor: props.color\r\n      }}\r\n      onClick={event => copyColor(event)}\r\n    >\r\n      <div\r\n        className=\"copy-prompt\"\r\n        style={{ height: height, paddingTop: `${(height - (0.025*props.Viewport)) / 2}px` }}\r\n      >\r\n        <p className=\"color-text hover-cta\">{props.color}</p>\r\n        <p className=\"copy-text hover-cta\">Click to copy</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    hash: state.actionReducer.HASH,\r\n    quotes: state.actionReducer.QUOTES,\r\n    Viewport: state.actionReducer.VIEWPORT_HEIGHT\r\n  };\r\n}\r\n\r\nconst ColorBlock = connect(mapStateToProps)(ColorBlock_);\r\n\r\nexport default ColorBlock;\r\n","import React from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"../../redux/reducers/reducers\";\r\nimport ColorBlock from \"../ColorBlock/ColorBlock\";\r\nimport { setQuotes, setHash } from \"../../redux/actions/actions\";\r\nimport \"./PickerPalette.scss\";\r\n\r\nconst PickerPalette_ = props => {\r\n  const copyAllColors = () => {\r\n    let colorArr = [...store.getState().actionReducer.COLORS];\r\n\r\n    for (let i = 0; i < colorArr.length; i++) {\r\n      if(!props.hash){\r\n        colorArr[i] = colorArr[i].substr(1)\r\n      }\r\n      if(props.quotes){\r\n        colorArr[i] = `'${colorArr[i]}'`\r\n      }\r\n    }\r\n\r\n    copy(colorArr);\r\n  };\r\n\r\n  const renderColorBlocks = props.colors.map((color, i) => (\r\n    <ColorBlock color={color} key={i} />\r\n  ));\r\n\r\n  return (\r\n    <div className={`picker-palette ui-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"colors-container\" ref={props.paletteRef}>\r\n        {renderColorBlocks}\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.hash ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setHash();\r\n          }}\r\n        >\r\n          Hash\r\n        </button>\r\n        <button\r\n          className={`button ${props.quotes ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setQuotes();\r\n          }}\r\n        >\r\n          Quotes\r\n        </button>\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            copyAllColors();\r\n          }}\r\n        >\r\n          Copy all\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    colors: state.actionReducer.COLORS,\r\n    hash: state.actionReducer.HASH,\r\n    quotes: state.actionReducer.QUOTES,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setQuotes,\r\n  setHash\r\n};\r\n\r\nconst PickerPalette = connect(mapStateToProps, mapDispatchToProps)(PickerPalette_);\r\n\r\nexport default PickerPalette;\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deletePalette } from \"../../redux/actions/actions\";\r\nimport \"./Palettes.scss\";\r\n\r\nconst PaletteBlock_ = props => {\r\n  let width = (0.1623*props.Viewport) / props.palette.length;\r\n\r\n  const renderColors = props.palette.map((color, i) => (\r\n    <div\r\n      className=\"block-color\"\r\n      style={{ backgroundColor: color, width: `${width}px` }}\r\n      key={i}\r\n    ></div>\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className={`palette-block ${props.darkMode ? \"dark\" : \"\"} ${\r\n        props.deleteMode ? \"delete-mode\" : \"\"\r\n      }`}\r\n      onClick={() => {\r\n        if (props.deleteMode) {\r\n          props.deletePalette(props.index);\r\n        }\r\n      }}\r\n    >\r\n      <div className={`icon-overlay`} />\r\n      {renderColors}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    Viewport: state.actionReducer.VIEWPORT_HEIGHT\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deletePalette,\r\n  };\r\n  \r\n\r\nconst PaletteBlock = connect(mapStateToProps, mapDispatchToProps)(PaletteBlock_);\r\n\r\nexport default PaletteBlock;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { storePalette } from \"../../redux/actions/actions\";\r\nimport \"./Palettes.scss\";\r\nimport PaletteBlock from \"./PaletteBlock\";\r\n\r\nconst Palettes_ = props => {\r\n  const [deleteMode, setDeleteMode] = useState(false);\r\n \r\n  const renderPaletteBlocks = props.palettes.map((palette, i) => (\r\n    <PaletteBlock\r\n      palette={palette}\r\n      key={i}\r\n      deleteMode={deleteMode}\r\n      index={i}\r\n    />\r\n  ));\r\n  \r\n  return (\r\n    <div className={`palette ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <button\r\n        className={`button palettes-button ${props.darkMode ? \"dark\" : \"\"}`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.storePalette();\r\n        }}\r\n      >\r\n        Add\r\n      </button>\r\n      <button\r\n        className={`button palettes-button ${props.darkMode ? \"dark\" : \"\"} ${\r\n            deleteMode ? \"active\" : \"\"\r\n          }`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setDeleteMode(!deleteMode);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n      <div className=\"palette-blocks-wrapper\">{renderPaletteBlocks}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    palettes: state.actionReducer.PALETTES\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storePalette,\r\n};\r\n\r\nconst Palettes = connect(mapStateToProps, mapDispatchToProps)(Palettes_);\r\n\r\nexport default Palettes;\r\n","import React, { useRef } from \"react\";\r\nimport ColorWheel from \"../ColorWheel/ColorWheel\";\r\nimport Controls from \"../Controls/Controls\";\r\nimport Presets from \"../Presets/Presets\";\r\nimport PickerPalette from \"../PickerPalette/PickerPalette\";\r\nimport \"./ColorPicker.scss\";\r\nimport \"../Controls/Controls.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDarkMode } from \"../../redux/actions/actions\";\r\nimport Palettes from \"../Palettes/Palettes\";\r\n\r\nconst ColorPicker_ = props => {\r\n  const colorContainer = useRef(null);\r\n\r\n  return (\r\n    <div\r\n      className={`color-picker-container active-tab ${\r\n        props.darkMode ? \"dark\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"navbar-container\">\r\n        <div\r\n          className={`tab color-picker-tab active-tab ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n        >\r\n          Colorpicker\r\n        </div>\r\n        <div\r\n          className={`shadow-tab tab color-picker-tab ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n        />\r\n        <div className={`tab editor-tab ${props.darkMode ? \"dark\" : \"\"}`}>\r\n          Palette editor\r\n        </div>\r\n        <div\r\n          className={`shadow-tab tab editor-tab ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n        />\r\n        <button\r\n          className={`button set-dark ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setDarkMode();\r\n          }}\r\n        >\r\n          {props.darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n        </button>\r\n      </div>\r\n      <div\r\n        className={`color-picker-components ${props.darkMode ? \"dark\" : \"\"}`}\r\n      >\r\n        <div className=\"settings-wrapper\">\r\n          <Presets />\r\n          <Controls />\r\n        </div>\r\n        <ColorWheel colorsContainer={colorContainer} />\r\n        <PickerPalette paletteRef={colorContainer} />\r\n        <Palettes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    linked: state.actionReducer.LINKED,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setDarkMode\r\n};\r\n\r\nconst ColorPicker = connect(mapStateToProps, mapDispatchToProps)(ColorPicker_);\r\n\r\nexport default ColorPicker;\r\n","import React, {useLayoutEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setViewport } from \"./redux/actions/actions\";\r\nimport \"./App.scss\";\r\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\n\r\nconst App_ = props => {\r\n  useLayoutEffect(() => {\r\n    window.addEventListener('resize', () => props.setViewport())\r\n  })\r\n\r\n  return (\r\n    <div className={`App ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className={`wrapper ${props.darkMode ? \"dark\" : \"\"}`}>\r\n        <div className={`logo-container ${props.darkMode ? \"hidden\" : \"\"}`} />\r\n        <div className={`logo-container ${props.darkMode ? \"dark\" : \"hidden\"}`}/>\r\n        <ColorPicker />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setViewport\r\n};\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps)(App_);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store}  from \"./redux/reducers/reducers\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nconst vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\nconst vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\nconsole.log(vw, vh)\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}