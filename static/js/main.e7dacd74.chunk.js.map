{"version":3,"sources":["logo.svg","redux/reducers/reducers.js","components/ColorPicker/Selectors.js","redux/actions/actions.js","components/ColorPicker/ColorWheel.js","components/ColorPicker/ColorPicker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","COLORS","LIGHTNESS","SATURATION","SELECTOR_COUNT","LINKED","DARK_MODE","RESET","reducers","combineReducers","actionReducer","state","action","type","CURRENT_COLORS","INDEX","COLOR","NEW_COLORS","length","fill","store","createStore","mapDispatchToProps","storeColor","val","index","Selectors","connect","selectorCount","lightness","saturation","linked","reset","props","svg","useRef","colorsContainer","canvas","circleRefs","circleCoordinates","currentActiveCircle","setColor","x","y","key","colorBlockRefs","current","children","pixel","getContext","getImageData","data","pixelColor","toString","toUpperCase","slice","style","stroke","backgroundColor","color","height","value","isInCircle","Math","sqrt","handleMouseUp","addMouseTrackerLinked","event","mouseX","pageX","offsetLeft","mouseY","pageY","offsetTop","x0","getAttribute","y0","radsOffset","setAttribute","i","angle","d0x","d0y","atan2","radius","cos","sin","addMouseTracker","id","e","removeEventListener","handleMouseDown","target","addEventListener","useEffect","radOffset","radIncrement","round","PI","useLayoutEffect","mathVars","push","x1","y1","x2","y2","d1x","d1y","d2x","d2y","getPointMath","className","ref","width","viewBox","elements","circleRef","createRef","cx","cy","r","stroke-width","filter","onMouseDown","onMouseUp","createCircles","ColorWheel","darkMode","canvasContext","clearRect","gradient","createLinearGradient","xLUT","yLUT","addColorStop","strokeStyle","beginPath","moveTo","lineTo","generateGradient","storeLightness","storeSaturation","storeSelectorCount","resetState","setLinkedState","ColorPicker","colors","colorContainer","displayCopyPrompt","once","copy","min","max","step","onChange","onClick","colorArray","onMouseEnter","createColorBlocks","setDarkMode","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7dacd74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import { combineReducers, createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  COLORS: ['#FFF','#FFF','#FFF'],\r\n  LIGHTNESS: 50,\r\n  SATURATION: 100,\r\n  SELECTOR_COUNT: 3,\r\n  LINKED: false,\r\n  DARK_MODE: false,\r\n  RESET: 0 //for comp. rerender if init state doesnt change a prop\r\n};\r\n\r\nexport const actionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_COLOR\":\r\n      let CURRENT_COLORS =  state.COLORS;\r\n      CURRENT_COLORS[action.INDEX] = action.COLOR\r\n      return {\r\n        ...state,\r\n        COLORS: CURRENT_COLORS\r\n      };\r\n    case \"SET_LIGHTNESS\":\r\n      return {\r\n        ...state,\r\n        LIGHTNESS: action.LIGHTNESS\r\n      };\r\n    case \"SET_SATURATION\":\r\n      return {\r\n        ...state,\r\n        SATURATION: action.SATURATION\r\n      };\r\n    case \"SET_SELECTOR_COUNT\":\r\n      let NEW_COLORS = [];\r\n      NEW_COLORS.length = action.SELECTOR_COUNT;\r\n      NEW_COLORS.fill('#FFF')\r\n      return {\r\n        ...state,\r\n        COLORS: NEW_COLORS,\r\n        SELECTOR_COUNT: action.SELECTOR_COUNT\r\n      };\r\n    case \"SET_LINKED\":\r\n      return {\r\n        ...state,\r\n        LINKED: !state.LINKED\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"RESET\":\r\n      return {\r\n        ...initialState,\r\n        RESET: 1 - state.RESET\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const reducers = combineReducers({\r\n  actionReducer\r\n});\r\n\r\n// store.js\r\nexport const store = createStore(reducers);\r\n","import React, { useEffect, useLayoutEffect, useRef, createRef } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { storeColor } from \"../../redux/actions/actions\";\r\n\r\nconst Selectors_ = props => {\r\n  const svg = useRef(null);\r\n  let { colorsContainer, canvas } = props;\r\n\r\n  \r\n  let circleRefs = null;\r\n  let circleCoordinates = [];\r\n  let currentActiveCircle = null;\r\n\r\n  const setColor = (x, y, key) => {\r\n    let colorBlockRefs = colorsContainer.current.children;\r\n    let pixel = canvas.current.getContext(\"2d\").getImageData(x, y, 1, 1).data;\r\n    let pixelColor =\r\n      \"#\" +\r\n      ((1 << 24) + (pixel[0] << 16) + (pixel[1] << 8) + pixel[2])\r\n        .toString(16)\r\n        .toUpperCase()\r\n        .slice(1);\r\n    circleRefs[key].style.fill = pixelColor;\r\n    if (props.lightness < 50) {\r\n      circleRefs[key].style.stroke = \"#d4d4d4\";\r\n    } else {\r\n      circleRefs[key].style.stroke = \"#4d4d4d\";\r\n    }\r\n    props.storeColor(pixelColor, key)\r\n    colorBlockRefs[key].style.backgroundColor = pixelColor;\r\n    colorBlockRefs[key].style.color =\r\n      props.lightness < 50 ? \"#d4d4d4\" : \"#404040\";\r\n    colorBlockRefs[key].style.height =\r\n      20 + 100 / props.selectorCount;\r\n    colorBlockRefs[key].value = pixelColor;\r\n  };\r\n\r\n  const createCircles = () => {\r\n    let elements = [];\r\n    let radOffset = 0;\r\n    let radIncrement = Math.round(360 / props.selectorCount) * (Math.PI / 180);\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = 250 + 200 * Math.cos(radOffset);\r\n      let y = 250 + 200 * Math.sin(radOffset);\r\n      let circleRef = createRef(null);\r\n      elements.push(\r\n        <circle\r\n          cx={x}\r\n          cy={y}\r\n          r=\"15\"\r\n          stroke=\"#4d4d4d\"\r\n          stroke-width=\"0.5\"\r\n          style={{ filter: \"drop-shadow(0 0 4px #4d4d4d)\" }}\r\n          onMouseDown={e => handleMouseDown(e)}\r\n          onMouseUp={e => handleMouseUp(e)}\r\n          key={i}\r\n          ref={circleRef}\r\n          id={`${i}`}\r\n        />\r\n      );\r\n      radOffset += radIncrement;\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  const getPointMath = () => {\r\n    //gets the current angles and radii of the points\r\n    //(called once after points are linked)\r\n    let mathVars = [];\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let radius = Math.sqrt((250 - x0) * (250 - x0) + (250 - y0) * (250 - y0));\r\n    mathVars.push({\r\n      angle: 0,\r\n      radius: radius\r\n    });\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x1 = circleRefs[i - 1].getAttribute(\"cx\");\r\n      let y1 = circleRefs[i - 1].getAttribute(\"cy\");\r\n      let x2 = circleRefs[i].getAttribute(\"cx\");\r\n      let y2 = circleRefs[i].getAttribute(\"cy\");\r\n\r\n      let radius = Math.sqrt((250 - x2) * (250 - x2) + (250 - y2) * (250 - y2));\r\n\r\n      let d1x = x1 - 250;\r\n      let d1y = y1 - 250;\r\n      let d2x = x2 - 250;\r\n      let d2y = y2 - 250;\r\n\r\n      let angle = Math.atan2(d2y, d2x) - Math.atan2(d1y, d1x);\r\n      mathVars.push({\r\n        angle: angle,\r\n        radius: radius\r\n      });\r\n    }\r\n    return mathVars;\r\n  };\r\n\r\n  const isInCircle = (x, y) => {\r\n    if (Math.sqrt((250 - x) * (250 - x) + (250 - y) * (250 - y)) > 237) {\r\n      handleMouseUp();\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addMouseTrackerLinked = event => {\r\n    let mouseX = event.pageX - canvas.current.offsetLeft;\r\n    let mouseY = event.pageY - canvas.current.offsetTop;\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let radsOffset = 0;\r\n\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      circleRefs[0].setAttribute(\"cx\", `${mouseX}`);\r\n      circleRefs[0].setAttribute(\"cy\", `${mouseY}`);\r\n\r\n      setColor(x0, y0, 0);\r\n\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        radsOffset += circleCoordinates[i].angle;\r\n\r\n        let x = circleRefs[i].getAttribute(\"cx\");\r\n        let y = circleRefs[i].getAttribute(\"cy\");\r\n        let d0x = x0 - 250;\r\n        let d0y = y0 - 250;\r\n        let radsFromMouse = Math.atan2(d0y, d0x);\r\n        let angle = radsOffset + radsFromMouse;\r\n        let radius =\r\n          circleCoordinates[i].radius -\r\n          (circleCoordinates[0].radius -\r\n            Math.sqrt(\r\n              (250 - mouseX) * (250 - mouseX) + (250 - mouseY) * (250 - mouseY)\r\n            ));\r\n\r\n        if (radius < 0) radius = 0;\r\n        if (radius > 250) radius = 250;\r\n        circleRefs[i].setAttribute(\"cx\", `${250 + radius * Math.cos(angle)}`);\r\n        circleRefs[i].setAttribute(\"cy\", `${250 + radius * Math.sin(angle)}`);\r\n        setColor(x, y, i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addMouseTracker = event => {\r\n    let mouseX = event.pageX - canvas.current.offsetLeft;\r\n    let mouseY = event.pageY - canvas.current.offsetTop;\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      currentActiveCircle.setAttribute(\"cx\", `${mouseX}`);\r\n      currentActiveCircle.setAttribute(\"cy\", `${mouseY}`);\r\n      setColor(mouseX, mouseY, currentActiveCircle.id);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    currentActiveCircle = null;\r\n    if (!props.linked) {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = e => {\r\n    currentActiveCircle = e.target;\r\n    if (!props.linked) {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let radOffset = 0;\r\n    //createCircles();\r\n    let radIncrement = Math.round(360 / props.selectorCount) * (Math.PI / 180);\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = 250 + 200 * Math.cos(radOffset);\r\n      let y = 250 + 200 * Math.sin(radOffset);\r\n      circleRefs[i].setAttribute(\"cx\", `${x}`);\r\n      circleRefs[i].setAttribute(\"cy\", `${y}`);\r\n      radOffset += radIncrement;\r\n    }\r\n  }, [props.reset, props.selectorCount]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = circleRefs[i].getAttribute(\"cx\");\r\n      let y = circleRefs[i].getAttribute(\"cy\");\r\n      setColor(x, y, i);\r\n    }\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    circleRefs = svg.current.children;\r\n    circleCoordinates = getPointMath();\r\n  });\r\n\r\n  return (\r\n    <svg\r\n      className=\"selector\"\r\n      ref={svg}\r\n      width=\"500\"\r\n      height=\"500\"\r\n      viewBox=\"0 0 500 500\"\r\n    >\r\n      {createCircles()}\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    linked: state.actionReducer.LINKED,\r\n    reset: state.actionReducer.RESET\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storeColor\r\n};\r\n\r\nconst Selectors = connect(mapStateToProps, mapDispatchToProps)(Selectors_);\r\n\r\nexport default Selectors;\r\n","//import { SET_COLOR } from \"./action-types\";\r\n\r\nexport const storeColor = (val, index) => (\r\n  { type: 'SET_COLOR', COLOR: val, INDEX: index }\r\n)\r\nexport const storeLightness = (val) => (\r\n  { type: 'SET_LIGHTNESS', LIGHTNESS: val }\r\n)\r\nexport const storeSaturation = (val) => (\r\n  { type: 'SET_SATURATION', SATURATION: val }\r\n)\r\nexport const storeSelectorCount = (val) => (\r\n  { type: 'SET_SELECTOR_COUNT', SELECTOR_COUNT: val }\r\n)\r\nexport const setLinkedState = () => (\r\n  { type: 'SET_LINKED' }\r\n)\r\nexport const setDarkMode = () => (\r\n  { type: 'SET_DARK_MODE' }\r\n)\r\nexport const resetState = () => (\r\n  { type: 'RESET' }\r\n)\r\n","import React, {useLayoutEffect, useRef, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Selectors from \"./Selectors\";\r\nimport * as xLUT from \"./xLUT.json\";\r\nimport * as yLUT from \"./yLUT.json\";\r\n\r\nconst ColorWheel_ = props => {\r\n  const canvas = useRef(null);\r\n\r\n  const generateGradient = () => {\r\n    let canvasContext = canvas.current.getContext(\"2d\");\r\n    canvasContext.clearRect(0, 0, 500, 500);\r\n    for (var i = 0; i < 3600; i += 1) {\r\n      let value = i / 10;\r\n      let gradient = canvasContext.createLinearGradient(\r\n        250,\r\n        250,\r\n        xLUT.default[value],\r\n        yLUT.default[value]\r\n      );\r\n\r\n      gradient.addColorStop(\"0\", `${props.lightness > 45 ? \"white\" : \"black\"}`);\r\n      gradient.addColorStop(\"0.95\", `hsl(${value}, ${props.saturation}%, ${props.lightness}%)`);\r\n      gradient.addColorStop(\"0.95\", `${ props.darkMode ? '#262626': '#bdbdbd'}`);\r\n      gradient.addColorStop(\"1\", `${ props.darkMode ? '#333333': '#e3e3e3'}`);\r\n   \r\n      canvasContext.strokeStyle = gradient;\r\n      canvasContext.beginPath();\r\n      canvasContext.moveTo(250, 250);\r\n      canvasContext.lineTo(xLUT.default[value], yLUT.default[value]);\r\n      canvasContext.stroke();\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    generateGradient();\r\n  });\r\n\r\n  return (\r\n    <div className=\"gradient\">\r\n        <Selectors\r\n          colorsContainer={props.colorsContainer}\r\n          canvas={canvas}\r\n        />\r\n      <canvas width={\"500\"} height={\"500\"} ref={canvas} />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst ColorWheel = connect(mapStateToProps)(ColorWheel_);\r\n\r\nexport default ColorWheel;\r\n\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport ColorWheel from \"./ColorWheel\";\r\nimport \"./ColorPicker.scss\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  storeLightness,\r\n  storeSaturation,\r\n  storeSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n} from \"../../redux/actions/actions\";\r\n\r\nconst ColorPicker_ = props => {\r\n  const colorContainer = useRef(null);\r\n\r\n  const copyAllColors = () => {\r\n    copy(props.colors);\r\n  };\r\n\r\n  const displayCopyPrompt = event => {\r\n    let color = event.target.value;\r\n    event.target.value = \"Click to copy\";\r\n    event.target.addEventListener(\r\n      \"mouseleave\",\r\n      event => {\r\n        event.target.value = color;\r\n      },\r\n      { once: true }\r\n    );\r\n    event.target.addEventListener(\r\n      \"click\",\r\n      () => {\r\n        copy(color);\r\n      },\r\n      { once: true }\r\n    );\r\n  };\r\n\r\n  const createColorBlocks = () => {\r\n    let colorArray = [];\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      colorArray.push(\r\n        <input\r\n          type=\"button\"\r\n          className=\"color-block\"\r\n          style={{\r\n            height: 20 + 100 / props.selectorCount,\r\n            color: props.lightness < 50 ? \"#bdbdbd\" : \"#404040\"\r\n          }}\r\n          key={i}\r\n          onMouseEnter={e => displayCopyPrompt(e)}\r\n        />\r\n      );\r\n    }\r\n    return colorArray;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`color-picker-container ${props.darkMode ? \"dark\" : \"\"}`}\r\n    >\r\n      <ColorWheel\r\n        colorsContainer={colorContainer}\r\n      />\r\n      <div className=\"boxes\">\r\n        <div className={`color-picker-controls ${props.darkMode ? \"dark\" : \"\"}`}>\r\n          <div className=\"control-container\">\r\n            <p className=\"control-label\">Lightness: {props.lightness}%</p>\r\n            <input\r\n              type=\"range\"\r\n              className=\"set-light\"\r\n              min={10}\r\n              max={90}\r\n              step={5}\r\n              value={props.lightness}\r\n              onChange={val => {\r\n                props.storeLightness(val.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"control-container\">\r\n            <p className=\"control-label\">Saturation: {props.saturation}%</p>\r\n            <input\r\n              type=\"range\"\r\n              className=\"set-light\"\r\n              min={10}\r\n              max={100}\r\n              step={5}\r\n              value={props.saturation}\r\n              onChange={val => {\r\n                props.storeSaturation(val.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"control-container\">\r\n            <p className=\"control-label\">\r\n              Number of selectors: {props.selectorCount}\r\n            </p>\r\n            <input\r\n              type=\"range\"\r\n              className=\"set-light\"\r\n              min={1}\r\n              max={15}\r\n              step={1}\r\n              value={props.selectorCount}\r\n              onChange={val => {\r\n                props.storeSelectorCount(val.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"control-container \">\r\n            <button\r\n              className={`button ${\r\n                props.linked ? \"linked-true\" : \"linked-false\"\r\n              } ${props.darkMode ? \"dark\" : \"\"}`}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                props.setLinkedState();\r\n              }}\r\n            >\r\n              {props.linked ? \"Unlink\" : \"Link\"}\r\n            </button>\r\n            <button\r\n              className={`button ${props.darkMode ? \"dark\" : \"\"}`}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                props.resetState();\r\n              }}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className={`colors-wrapper ${props.darkMode ? \"dark\" : \"\"}`}>\r\n          <div className=\"colors-container\" ref={colorContainer}>\r\n            {createColorBlocks()}\r\n          </div>\r\n          <div className=\"control-container\">\r\n            <button\r\n              className={`button ${props.darkMode ? \"dark\" : \"\"}`}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                copyAllColors();\r\n              }}\r\n            >\r\n              Copy all\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    linked: state.actionReducer.LINKED,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    colors: state.actionReducer.COLORS\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storeLightness,\r\n  storeSaturation,\r\n  storeSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n};\r\n\r\nconst ColorPicker = connect(mapStateToProps, mapDispatchToProps)(ColorPicker_);\r\n\r\nexport default ColorPicker;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDarkMode } from \"./redux/actions/actions\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\n\r\nconst App_ = (props) => {\r\n  return (\r\n    <div className={`App ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <button\r\n        className={`button set-dark ${props.darkMode ? \"dark\" : \"\"}`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.setDarkMode()\r\n        }}\r\n      >\r\n        {props.darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n      </button>\r\n      <ColorPicker />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setDarkMode\r\n};\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps)(App_);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store}  from \"./redux/reducers/reducers\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nconst colorReducer = function(state = 0, action) {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    case \"DECREMENT\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}