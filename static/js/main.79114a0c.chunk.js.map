{"version":3,"sources":["logotype.png","logotype-dark.png","redux/reducers/reducers.js","redux/actions/actions.js","components/Selectors/Selectors.js","components/ColorWheel/ColorWheel.js","components/Controls/Controls.js","components/ColorBlock/ColorBlock.js","components/Palette/Palette.js","components/ColorPicker/ColorPicker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","COLORS","LIGHTNESS","SATURATION","SELECTOR_COUNT","SELECTOR_ANGLE","SELECTOR_RADIUS","SELECTOR_STAGGER","LINKED","DARK_MODE","HASH","QUOTES","RESET","reducers","combineReducers","actionReducer","state","action","type","CURRENT_COLORS","INDEX","COLOR","NEW_COLORS","length","fill","darkTemp","store","createStore","setLinkedState","resetState","mapDispatchToProps","storeColor","val","index","Selectors","connect","selectorCount","selectorAngle","selectorRadius","selectorStagger","lightness","saturation","linked","reset","props","svg","useRef","canvas","colorsContainer","canvasPosX","canvasPosY","circleRefs","circleCoordinates","currentActiveCircle","firstCircleAngle","setColor","x","y","key","pixel","current","getContext","getImageData","data","pixelColor","toString","toUpperCase","slice","style","stroke","getPointMath","mathVars","x0","getAttribute","y0","radius","Math","sqrt","d0x","d0y","angle","atan2","push","i","x1","y1","x2","y2","d1x","d1y","d2x","d2y","addMouseTrackerLinked","event","mouseX","pageX","mouseY","pageY","radsFromMouse","radsOffset","setAttribute","cos","sin","addMouseTracker","id","handleMouseUp","e","removeEventListener","handleMouseDown","target","addEventListener","useEffect","radOffset","staggerOffset","radIncrement","round","PI","rect","getBoundingClientRect","left","top","useLayoutEffect","children","className","ref","width","height","viewBox","elements","cx","cy","r","stroke-width","filter","onMouseDown","onMouseUp","createCircles","ColorWheel","darkMode","canvasContext","clearRect","value","beginPath","gradient","createLinearGradient","xLUT","yLUT","addColorStop","strokeStyle","moveTo","lineTo","generateGradient","onClick","setLightness","setSaturation","setSelectorCount","setSelectorAngle","setSelectorRadius","setSelectorStagger","setDarkMode","Controls","staggerSlider","min","max","step","onChange","toFixed","defaultValue","console","log","ColorBlock","hover","textColor","color","backgroundColor","paddingTop","setQuotes","setHash","Palette","colors","hash","quotes","renderColorBlocks","map","paletteRef","colorArr","getState","substr","copy","copyAllColors","ColorPicker","colorContainer","App","src","logo","logoDark","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.79114a0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logotype.210a0c67.png\";","module.exports = __webpack_public_path__ + \"static/media/logotype-dark.bbcc524e.png\";","import { combineReducers, createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  COLORS: [\"#FFF\", \"#FFF\", \"#FFF\"],\r\n  LIGHTNESS: 50,\r\n  SATURATION: 100,\r\n  SELECTOR_COUNT: 4,\r\n  SELECTOR_ANGLE: 180,\r\n  SELECTOR_RADIUS: 118,\r\n  SELECTOR_STAGGER: 0,\r\n  LINKED: false,\r\n  DARK_MODE: true,\r\n  HASH: true,\r\n  QUOTES: true,\r\n  RESET: 0 //for comp. rerender if init state doesnt change a prop\r\n};\r\n\r\nexport const actionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_COLOR\":\r\n      let CURRENT_COLORS = [...state.COLORS];\r\n      CURRENT_COLORS[action.INDEX] = action.COLOR;\r\n      return {\r\n        ...state,\r\n        COLORS: CURRENT_COLORS\r\n      };\r\n    case \"SET_LIGHTNESS\":\r\n      return {\r\n        ...state,\r\n        LIGHTNESS: action.LIGHTNESS\r\n      };\r\n    case \"SET_SATURATION\":\r\n      return {\r\n        ...state,\r\n        SATURATION: action.SATURATION\r\n      };\r\n    case \"SET_SELECTOR_COUNT\":\r\n      let NEW_COLORS = [];\r\n      NEW_COLORS.length = action.SELECTOR_COUNT;\r\n      NEW_COLORS.fill(\"#FFF\");\r\n      return {\r\n        ...state,\r\n        COLORS: NEW_COLORS,\r\n        SELECTOR_COUNT: action.SELECTOR_COUNT\r\n      };\r\n    case \"SET_SELECTOR_ANGLE\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_ANGLE: action.SELECTOR_ANGLE\r\n      };\r\n    case \"SET_SELECTOR_RADIUS\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_RADIUS: action.SELECTOR_RADIUS\r\n      };\r\n      case \"SET_SELECTOR_STAGGER\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_STAGGER: action.SELECTOR_STAGGER\r\n      };\r\n    case \"SET_LINKED\":\r\n      return {\r\n        ...state,\r\n        LINKED: !state.LINKED\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_HASH\":\r\n      return {\r\n        ...state,\r\n        HASH: !state.HASH\r\n      };\r\n    case \"SET_QUOTES\":\r\n      return {\r\n        ...state,\r\n        QUOTES: !state.QUOTES\r\n      };\r\n    case \"RESET\":\r\n      let darkTemp = state.DARK_MODE\r\n      return {\r\n        ...initialState,\r\n        DARK_MODE: darkTemp,\r\n        RESET: 1 - state.RESET\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const reducers = combineReducers({\r\n  actionReducer\r\n});\r\n\r\n// store.js\r\nexport const store = createStore(reducers);\r\n","//import { SET_COLOR } from \"./action-types\";\r\n\r\nexport const storeColor = (val, index) => (\r\n  { type: 'SET_COLOR', COLOR: val, INDEX: index }\r\n)\r\nexport const setLightness = (val) => (\r\n  { type: 'SET_LIGHTNESS', LIGHTNESS: val }\r\n)\r\nexport const setSaturation = (val) => (\r\n  { type: 'SET_SATURATION', SATURATION: val }\r\n)\r\nexport const setSelectorCount = (val) => (\r\n  { type: 'SET_SELECTOR_COUNT', SELECTOR_COUNT: val }\r\n)\r\nexport const setSelectorAngle = (val) => (\r\n  { type: 'SET_SELECTOR_ANGLE', SELECTOR_ANGLE: val }\r\n)\r\nexport const setSelectorRadius = (val) => (\r\n  { type: 'SET_SELECTOR_RADIUS', SELECTOR_RADIUS: val }\r\n)\r\nexport const setSelectorStagger = (val) => (\r\n  { type: 'SET_SELECTOR_STAGGER', SELECTOR_STAGGER: val }\r\n)\r\nexport const setLinkedState = () => (\r\n  { type: 'SET_LINKED' }\r\n)\r\nexport const setDarkMode = () => (\r\n  { type: 'SET_DARK_MODE' }\r\n)\r\nexport const setCopyType = () => (\r\n  { type: 'SET_COPY_TYPE' }\r\n)\r\nexport const setQuotes = () => (\r\n  { type: 'SET_QUOTES' }\r\n)\r\nexport const setHash = () => (\r\n  { type: 'SET_HASH' }\r\n)\r\nexport const resetState = () => (\r\n  { type: 'RESET' }\r\n)\r\n","import React, { useEffect, useLayoutEffect, useRef, createRef } from \"react\";\r\nimport useDidMountEffect from \"../../util/useDidMountEffect\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { storeColor } from \"../../redux/actions/actions\";\r\n\r\nconst Selectors_ = props => {\r\n  const svg = useRef(null);\r\n  let { colorsContainer, canvas } = props;\r\n  let canvasPosX = 0;\r\n  let canvasPosY = 0;\r\n  let circleRefs = null;\r\n  let circleCoordinates = [];\r\n  let currentActiveCircle = null;\r\n  let firstCircleAngle = 0;\r\n\r\n  const setColor = (x, y, key) => {\r\n    let pixel = canvas.current.getContext(\"2d\").getImageData(x, y, 1, 1).data;\r\n    let pixelColor =\r\n      \"#\" +\r\n      ((1 << 24) + (pixel[0] << 16) + (pixel[1] << 8) + pixel[2])\r\n        .toString(16)\r\n        .toUpperCase()\r\n        .slice(1);\r\n    circleRefs[key].style.fill = pixelColor;\r\n    if (props.lightness < 50) {\r\n      circleRefs[key].style.stroke = \"#d4d4d4\";\r\n    } else {\r\n      circleRefs[key].style.stroke = \"#4d4d4d\";\r\n    }\r\n\r\n    props.storeColor(pixelColor, key);\r\n  };\r\n\r\n  const createCircles = () => {\r\n    let elements = [];\r\n    let radOffset = firstCircleAngle;\r\n    let radIncrement =\r\n      Math.round(props.selectorAngle / props.selectorCount) * (Math.PI / 180);\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = 250 + props.selectorRadius * Math.cos(radOffset);\r\n      let y = 250 + props.selectorRadius * Math.sin(radOffset);\r\n      elements.push(\r\n        <circle\r\n          cx={x}\r\n          cy={y}\r\n          r=\"15\"\r\n          stroke=\"#4d4d4d\"\r\n          stroke-width=\"0.5\"\r\n          style={{ filter: \"drop-shadow(0 0 4px #4d4d4d)\" }}\r\n          onMouseDown={e => handleMouseDown(e)}\r\n          onMouseUp={e => handleMouseUp(e)}\r\n          key={i}\r\n          id={`${i}`}\r\n        />\r\n      );\r\n      radOffset += radIncrement;\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  const getPointMath = () => {\r\n    //gets the current angles and radii of the points\r\n    //(called once after points are linked)\r\n    let mathVars = [];\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let radius = Math.sqrt((250 - x0) * (250 - x0) + (250 - y0) * (250 - y0));\r\n    let dx = 250;\r\n    let dy = 0;\r\n    let d0x = x0 - 250;\r\n    let d0y = y0 - 250;\r\n    let angle = Math.atan2(d0y, d0x) - Math.atan2(dy, dx);\r\n    mathVars.push({\r\n      angle: angle,\r\n      radius: radius\r\n    });\r\n    firstCircleAngle = angle;\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x1 = circleRefs[i - 1].getAttribute(\"cx\");\r\n      let y1 = circleRefs[i - 1].getAttribute(\"cy\");\r\n      let x2 = circleRefs[i].getAttribute(\"cx\");\r\n      let y2 = circleRefs[i].getAttribute(\"cy\");\r\n\r\n      let radius = Math.sqrt((250 - x2) * (250 - x2) + (250 - y2) * (250 - y2));\r\n\r\n      let d1x = x1 - 250;\r\n      let d1y = y1 - 250;\r\n      let d2x = x2 - 250;\r\n      let d2y = y2 - 250;\r\n\r\n      let angle = Math.atan2(d2y, d2x) - Math.atan2(d1y, d1x);\r\n      mathVars.push({\r\n        angle: angle,\r\n        radius: radius\r\n      });\r\n    }\r\n    return mathVars;\r\n  };\r\n\r\n  const isInCircle = (x, y) => {\r\n  /* if (Math.sqrt((250 - x) * (250 - x) + (250 - y) * (250 - y)) > 237) {\r\n      handleMouseUp();\r\n      return false;\r\n    } else*/ {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addMouseTrackerLinked = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let d0x = x0 - 250;\r\n    let d0y = y0 - 250;\r\n    let radsFromMouse = Math.atan2(d0y, d0x);\r\n    let radsOffset = 0;\r\n\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      circleRefs[0].setAttribute(\"cx\", `${mouseX}`);\r\n      circleRefs[0].setAttribute(\"cy\", `${mouseY}`);\r\n\r\n      setColor(x0, y0, 0);\r\n\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        radsOffset += circleCoordinates[i].angle;\r\n\r\n        let x = circleRefs[i].getAttribute(\"cx\");\r\n        let y = circleRefs[i].getAttribute(\"cy\");\r\n\r\n        let angle = radsOffset + radsFromMouse;\r\n        let radius =\r\n          circleCoordinates[i].radius -\r\n          (circleCoordinates[0].radius -\r\n            Math.sqrt(\r\n              (250 - mouseX) * (250 - mouseX) + (250 - mouseY) * (250 - mouseY)\r\n            ));\r\n\r\n        if (radius < 0) radius = 0;\r\n        if (radius > 250) radius = 250;\r\n        circleRefs[i].setAttribute(\"cx\", `${250 + radius * Math.cos(angle)}`);\r\n        circleRefs[i].setAttribute(\"cy\", `${250 + radius * Math.sin(angle)}`);\r\n        setColor(x, y, i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addMouseTracker = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      currentActiveCircle.setAttribute(\"cx\", `${mouseX}`);\r\n      currentActiveCircle.setAttribute(\"cy\", `${mouseY}`);\r\n      setColor(mouseX, mouseY, currentActiveCircle.id);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    currentActiveCircle = null;\r\n    if (!props.linked) {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n  const handleMouseDown = e => {\r\n    currentActiveCircle = e.target;\r\n    if (!props.linked) {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let radOffset = firstCircleAngle;\r\n    let staggerOffset = 0;\r\n    let radIncrement =\r\n      Math.round(props.selectorAngle / props.selectorCount) * (Math.PI / 180);\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = 250 + (props.selectorRadius - staggerOffset) * Math.cos(radOffset);\r\n      let y = 250 + (props.selectorRadius - staggerOffset) * Math.sin(radOffset);\r\n      circleRefs[i].setAttribute(\"cx\", `${x}`);\r\n      circleRefs[i].setAttribute(\"cy\", `${y}`);\r\n      radOffset += radIncrement;\r\n      staggerOffset += props.selectorStagger / props.selectorCount\r\n    }\r\n  }, [props.selectorStagger, props.reset, props.selectorCount, props.selectorRadius,  props.selectorAngle]);\r\n\r\n  useEffect(() => {\r\n    let rect = canvas.current.getBoundingClientRect()\r\n    canvasPosX = rect.left;\r\n    canvasPosY = rect.top;\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = circleRefs[i].getAttribute(\"cx\");\r\n      let y = circleRefs[i].getAttribute(\"cy\");\r\n      setColor(x, y, i);\r\n    }\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    circleRefs = svg.current.children;\r\n    circleCoordinates = getPointMath();\r\n  });\r\n\r\n  return (\r\n    <svg\r\n      className=\"selector\"\r\n      ref={svg}\r\n      width=\"500\"\r\n      height=\"500\"\r\n      viewBox=\"0 0 500 500\"\r\n    >\r\n      {createCircles()}\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    linked: state.actionReducer.LINKED,\r\n    reset: state.actionReducer.RESET\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storeColor\r\n};\r\n\r\nconst Selectors = connect(mapStateToProps, mapDispatchToProps)(Selectors_);\r\n\r\nexport default Selectors;\r\n","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetState, setLinkedState } from \"../../redux/actions/actions\";\r\nimport Selectors from \"../Selectors/Selectors\";\r\nimport * as xLUT from \"./xLUT.json\";\r\nimport * as yLUT from \"./yLUT.json\";\r\n\r\nimport \"./ColorWheel.scss\";\r\n\r\nconst ColorWheel_ = props => {\r\n  const canvas = useRef(null);\r\n\r\n  const generateGradient = () => {\r\n    let canvasContext = canvas.current.getContext(\"2d\");\r\n    canvasContext.clearRect(0, 0, 500, 500);\r\n    for (var i = 0; i < 3600; i += 1) {\r\n      let value = i / 10;\r\n      canvasContext.beginPath();\r\n      let gradient = canvasContext.createLinearGradient(\r\n        250,\r\n        250,\r\n        xLUT.default[value],\r\n        yLUT.default[value]\r\n      );\r\n\r\n      gradient.addColorStop(\"0\", `${props.lightness > 45 ? \"white\" : \"black\"}`);\r\n      gradient.addColorStop(\r\n        \"0.95\",\r\n        `hsl(${value}, ${props.saturation}%, ${props.lightness}%)`\r\n      );\r\n      gradient.addColorStop(\r\n        \"0.95\",\r\n        `${props.darkMode ? \"#212121\" : \"#b5b5b5\"}`\r\n      );\r\n      gradient.addColorStop(\"1\", `${props.darkMode ? \"#212121\" : \"#b5b5b5\"}`);\r\n\r\n      canvasContext.strokeStyle = gradient;\r\n\r\n      canvasContext.moveTo(250, 250);\r\n      canvasContext.lineTo(xLUT.default[value], yLUT.default[value]);\r\n      canvasContext.stroke();\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    generateGradient();\r\n  });\r\n\r\n  return (\r\n    <div className={`container-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <button\r\n        className={`button button-left ${props.linked ? \"active\" : \"\"} ${\r\n          props.darkMode ? \"dark\" : \"\"\r\n        }`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.setLinkedState();\r\n        }}\r\n      >\r\n        {props.linked ? \"Unlink\" : \"Link\"}\r\n      </button>\r\n      <div className=\"gradient\" >\r\n        <Selectors colorsContainer={props.colorsContainer} canvas={canvas} />\r\n        <canvas width={\"500\"} height={\"500\"} ref={canvas} />\r\n      </div>\r\n\r\n      <button\r\n        className={`button button-right ${props.darkMode ? \"dark\" : \"\"}`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.resetState();\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    linked: state.actionReducer.LINKED\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  resetState,\r\n  setLinkedState\r\n};\r\n\r\nconst ColorWheel = connect(mapStateToProps, mapDispatchToProps)(ColorWheel_);\r\n\r\nexport default ColorWheel;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode\r\n} from \"../../redux/actions/actions\";\r\nimport \"./Controls.scss\";\r\n\r\nconst Controls_ = props => {\r\n  const staggerSlider = useRef(null)\r\n\r\n  useEffect(() => {\r\n    props.setSelectorStagger(staggerSlider.current.value)\r\n  }, [props.selectorRadius]);\r\n\r\n  return (\r\n    <div className={`controls ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button set-dark ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setDarkMode();\r\n          }}\r\n        >\r\n          {props.darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n        </button>\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">Lightness: {props.lightness}%</p>\r\n        <input\r\n          type=\"range\"\r\n          className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n          min={10}\r\n          max={90}\r\n          step={5}\r\n          value={props.lightness}\r\n          onChange={val => {\r\n            props.setLightness(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">Saturation: {props.saturation}%</p>\r\n        <input\r\n          type=\"range\"\r\n          className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n          min={10}\r\n          max={100}\r\n          step={5}\r\n          value={props.saturation}\r\n          onChange={val => {\r\n            props.setSaturation(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">Number of Points: {props.selectorCount}</p>\r\n        <input\r\n          type=\"range\"\r\n          className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n          min={1}\r\n          max={10}\r\n          step={1}\r\n          value={props.selectorCount}\r\n          onChange={val => {\r\n            props.setSelectorCount(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">\r\n          Point Spacing Angle:{\" \"}\r\n          {(\r\n            Math.round((props.selectorAngle / props.selectorCount) * 10) / 10\r\n          ).toFixed(1)}\r\n          º\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n          min={10}\r\n          max={360}\r\n          step={1}\r\n          value={props.selectorAngle}\r\n          onChange={val => {\r\n            props.setSelectorAngle(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">\r\n          Distance from Origin:{\" \"}\r\n          {(Math.round((props.selectorRadius / 236) * 1000) / 10).toFixed(0)}\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n          min={1}\r\n          max={236}\r\n          step={1}\r\n          value={props.selectorRadius}\r\n          onChange={val => {\r\n            props.setSelectorRadius(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <p className=\"control-label\">\r\n          Distance Stagger:{\" \"}\r\n          {(Math.round(props.selectorStagger * 10) / 10).toFixed(0)}\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n          ref={staggerSlider}\r\n          min={-(236 - props.selectorRadius)}\r\n          max={props.selectorRadius}\r\n          step={1}\r\n          defaultValue={props.selectorStagger}\r\n          onChange={val => {\r\n            console.log(\"sdfds\");\r\n            props.setSelectorStagger(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    linked: state.actionReducer.LINKED,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode\r\n};\r\n\r\nconst Controls = connect(mapStateToProps, mapDispatchToProps)(Controls_);\r\n\r\nexport default Controls;\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport \"./ColorBlock.scss\";\r\n\r\nconst ColorBlock_ = (props) => {\r\n  const hover = useRef(null)\r\n  let height = 400 / props.selectorCount\r\n  let textColor = props.lightness < 50 ? \"#bdbdbd\" : \"#404040\";\r\n  let accentColor = props.lightness < 50 ? \"#404040\" :  \"hsla(0,0%,100%,0.8)\";\r\n  return (\r\n    <div\r\n      className=\"color-block\"\r\n      style={{\r\n        height: height,\r\n        color: textColor,\r\n        backgroundColor: props.color\r\n\r\n      }}\r\n    >\r\n      \r\n      <div className=\"edit-prompt\" ref={hover} style={{ height: height}}></div>\r\n      <div className=\"copy-prompt\" style={{height: height, paddingTop: `${(height-20)/2}px`}}>{props.color}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      lightness: state.actionReducer.LIGHTNESS,\r\n      selectorCount: state.actionReducer.SELECTOR_COUNT\r\n    };\r\n  }\r\n  \r\n  const ColorBlock = connect(mapStateToProps)(ColorBlock_);\r\n  \r\n  export default ColorBlock;\r\n  ","import React from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"../../redux/reducers/reducers\";\r\nimport ColorBlock from \"../ColorBlock/ColorBlock\";\r\nimport { setQuotes, setHash } from \"../../redux/actions/actions\";\r\nimport \"./Palette.scss\";\r\nimport \"../../Globals.scss\";\r\n\r\nconst Palette_ = props => {\r\n  const copyAllColors = () => {\r\n    let colorArr = [...store.getState().actionReducer.COLORS];\r\n\r\n    for (let i = 0; i < colorArr.length; i++) {\r\n      if(!props.hash){\r\n        colorArr[i] = colorArr[i].substr(1)\r\n      }\r\n      if(props.quotes){\r\n        colorArr[i] = `'${colorArr[i]}'`\r\n      }\r\n    }\r\n\r\n    copy(colorArr);\r\n  };\r\n\r\n  const renderColorBlocks = props.colors.map((color, i) => (\r\n    <ColorBlock color={color} key={i} />\r\n  ));\r\n\r\n  return (\r\n    <div className={`colors-wrapper ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"colors-container\" ref={props.paletteRef}>\r\n        {renderColorBlocks}\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.hash ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setHash();\r\n          }}\r\n        >\r\n          Hash\r\n        </button>\r\n        <button\r\n          className={`button ${props.quotes ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setQuotes();\r\n          }}\r\n        >\r\n          Quotes\r\n        </button>\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            copyAllColors();\r\n          }}\r\n        >\r\n          Copy all\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    colors: state.actionReducer.COLORS,\r\n    hash: state.actionReducer.HASH,\r\n    quotes: state.actionReducer.QUOTES,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setQuotes,\r\n  setHash\r\n};\r\n\r\nconst Palette = connect(mapStateToProps, mapDispatchToProps)(Palette_);\r\n\r\nexport default Palette;\r\n","import React, { useRef } from \"react\";\r\nimport ColorWheel from \"../ColorWheel/ColorWheel\";\r\nimport Controls from \"../Controls/Controls\";\r\nimport Palette from \"../Palette/Palette\";\r\nimport \"./ColorPicker.scss\";\r\nimport \"../Controls/Controls.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ColorPicker_ = props => {\r\n  const colorContainer = useRef(null);\r\n\r\n  return (\r\n    <div className={`color-picker-container ${props.darkMode ? \"dark\" : \"\"}`}>\r\n        <Controls />\r\n        <ColorWheel colorsContainer={colorContainer} />\r\n        <Palette paletteRef={colorContainer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    linked: state.actionReducer.LINKED,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst ColorPicker = connect(mapStateToProps)(ColorPicker_);\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport logo from \"./logotype.png\";\r\nimport logoDark from \"./logotype-dark.png\";\r\nimport \"./App.scss\";\r\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\n\r\nconst App_ = props => {\r\n  return (\r\n    <div className={`App ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className={`wrapper ${props.darkMode ? \"dark\" : \"\"}`}>\r\n        <div className={`logo-container ${props.darkMode ? \"hidden\" : \"\"}`}>\r\n          <img src={logo} />\r\n        </div>\r\n        <div className={`logo-container ${props.darkMode ? \"dark\" : \"hidden\"}`}>\r\n          <img src={logoDark} />\r\n        </div>\r\n        <ColorPicker />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst App = connect(mapStateToProps)(App_);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store}  from \"./redux/reducers/reducers\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nconst colorReducer = function(state = 0, action) {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    case \"DECREMENT\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}