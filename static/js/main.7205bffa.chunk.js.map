{"version":3,"sources":["util/viewport-height.js","redux/reducers/reducers.js","redux/actions/actions.js","components/ColorPicker/Selectors/Selectors.js","util/color-utility.js","components/ColorPicker/ColorWheel/ColorWheel.js","components/ColorPicker/Controls/Controls.js","components/ColorPicker/Presets/Presets.js","components/ColorPicker/CurrentColors/ColorBlock.js","components/ColorPicker/CurrentColors/CurrentColors.js","components/PaletteTracker/PaletteBlock.js","components/PaletteTracker/PaletteTracker.js","components/ColorPicker/ColorPicker.js","components/PaletteEditor/PaletteEditor.js","App.js","serviceWorker.js","index.js"],"names":["getViewport","VH","Math","max","document","documentElement","clientHeight","window","innerHeight","VW","innerWidth","initialState","VIEWPORT_HEIGHT","COLORS","PALETTES","ACTIVE_PALETTE","index","palette","LIGHTNESS","SATURATION","SELECTOR_COUNT","SELECTOR_ANGLE","SELECTOR_RADIUS","SELECTOR_LINKED_RADIUS","SELECTOR_STAGGER","CLUSTER_ANGLE","LINKED","DARK_MODE","HASH","QUOTES","PRESET","RESET","MODE","reducers","combineReducers","actionReducer","state","action","CURRENT_PALETTES","type","CURRENT_COLORS","INDEX","COLOR","push","SELECTED_PALETTE","splice","NEW_COLORS","length","fill","store","createStore","setSelectorCount","val","setLinkedState","setDarkMode","resetState","mapDispatchToProps","storeColor","setSelectorLinkedRadius","Selectors","connect","selectorCount","selectorAngle","selectorRadius","selectorStagger","lightness","saturation","reset","preset","clusterAngle","CWRadius","props","svg","useRef","initialOffsetAngle","lastCWRadius","canvas","canvasPosX","canvasPosY","circleRefs","circleCoordinates","currentActiveCircle","setColor","x","y","key","pixelColor","rgb","mode","result","toString","toUpperCase","slice","colorIntegersToString","current","getContext","getImageData","data","style","stroke","setHarmony","radOffset","harmony","total","count","i","round","PI","getLinkedState","getState","getinitialOffsetAngle","x0","getAttribute","y0","dx","d0x","d0y","atan2","getPointMath","mathVars","radius","sqrt","angle","x1","y1","x2","y2","d1x","d1y","d2x","d2y","isInCircle","handleMouseUp","addMouseTrackerLinked","event","mouseX","pageX","mouseY","pageY","radsFromMouse","radsOffset","setAttribute","cos","sin","addMouseTracker","id","e","removeEventListener","handleMouseDown","rect","getBoundingClientRect","left","top","target","addEventListener","useEffect","staggerIncrement","staggerOffset","XYresizeOffset","useLayoutEffect","children","className","ref","width","height","viewBox","elements","cx","cy","r","strokeWidth","onMouseDown","onMouseUp","createCircles","ColorWheel","darkMode","linked","scale","canvasContext","clearRect","value","rad","beginPath","gradient","createLinearGradient","addColorStop","strokeStyle","moveTo","lineTo","generateGradient","onClick","colorsContainer","setLightness","setSaturation","setSelectorAngle","setSelectorRadius","setSelectorStagger","Controls","selectorLinkedRadius","viewport","staggerSlider","radiusSlider","min","step","onChange","toFixed","setClusterAngle","setPreset","Presets","Viewport","marginTop","ColorBlock","hash","quotes","colorBlock","textColor","copyColor","hue","chroma","console","log","colorIntegersToHSL","color","charAt","convert","exec","parseInt","split","substring","stringToColorIntegers","substr","copy","backgroundColor","paddingTop","setQuotes","setHash","CurrentColors","colors","renderColorBlocks","map","paletteRef","colorArr","copyAllColors","deletePalette","setCurrentPalette","PaletteBlock","activePalette","renderColors","editor","deleteMode","storePalette","PaletteTracker","palettes","useState","setDeleteMode","renderPaletteBlocks","ColorPicker","colorContainer","setViewport","setMode","App","appMode","selectedMode","Boolean","location","hostname","match","ReactDOM","render","getElementById","clientWidth","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sfAAaA,EAAc,WACzB,IAAIC,EAAKC,KAAKC,IACZC,SAASC,gBAAgBC,aACzBC,OAAOC,aAAe,GAEpBC,EAAKP,KAAKC,IACZC,SAASC,gBAAgBC,aACzBC,OAAOG,YAAc,GAGvB,OAAOT,EAAKQ,EAAKA,EAAKR,GCPlBU,EAAe,CACnBC,gBAAiBZ,IACjBa,OAAQ,CAAC,OAAQ,OAAQ,QACzBC,SAAU,GACVC,eAAgB,CAACC,OAAQ,EAAGC,QAAS,IACrCC,UAAW,GACXC,WAAY,IACZC,eAAgB,EAChBC,eAAgB,IAChBC,gBAAkC,KAAhBtB,IAAyB,EAC3CuB,uBAAyC,KAAhBvB,IAAyB,EAClDwB,iBAAkB,EAClBC,cAAe,GACfC,QAAQ,EACRC,WAAW,EACXC,MAAM,EACNC,QAAQ,EACRC,OAAQ,EACRC,MAAO,EACPC,KAAM,GA0LKC,EAAWC,YAAgB,CACtCC,cAxL2B,WAAmC,IAAlCC,EAAiC,uDAAzBzB,EAAc0B,EAAW,uCACzDC,EAAgB,YAAOF,EAAMtB,UACjC,OAAQuB,EAAOE,MACb,IAAK,sBACH,OAAO,eACFH,EADL,CAEEd,gBAAkC,KAAhBtB,IAAyB,EAC3CY,gBAAiBZ,MAErB,IAAK,YACH,IAAIwC,EAAc,YAAOJ,EAAMvB,QAE/B,OADA2B,EAAeH,EAAOI,OAASJ,EAAOK,MAC/B,eACFN,EADL,CAEEvB,OAAQ2B,IAEZ,IAAK,gBAEH,OADAF,EAAiBK,KAAjB,YAA0BP,EAAMvB,SACzB,eACFuB,EADL,CAEEtB,SAAUwB,IAEd,IAAK,sBACH,IAAIM,EAAmBN,EAAiBD,EAAOI,OAC/C,OAAO,eACFL,EADL,CAEErB,eAAgB,CAACC,MAAOqB,EAAOI,MAAOxB,QAAS2B,KAEnD,IAAK,iBAEH,OADAN,EAAiBO,OAAOR,EAAOI,MAAO,GAC/B,eACFL,EADL,CAEEtB,SAAUwB,IAEd,IAAK,gBACH,OAAO,eACFF,EADL,CAEElB,UAAWmB,EAAOnB,YAEtB,IAAK,iBACH,OAAO,eACFkB,EADL,CAEEjB,WAAYkB,EAAOlB,aAEvB,IAAK,qBACH,IAAI2B,EAAa,GAGjB,OAFAA,EAAWC,OAASV,EAAOjB,eAC3B0B,EAAWE,KAAK,QACT,eACFZ,EADL,CAEEvB,OAAQiC,EACR1B,eAAgBiB,EAAOjB,iBAE3B,IAAK,qBACH,OAAO,eACFgB,EADL,CAEEf,eAAgBgB,EAAOhB,iBAE3B,IAAK,sBACH,OAAO,eACFe,EADL,CAEEd,gBAAiBe,EAAOf,gBACxBC,uBAAwBc,EAAOf,kBAEnC,IAAK,6BACH,OAAO,eACFc,EADL,CAEEb,uBAAwBc,EAAOd,yBAEnC,IAAK,uBACH,OAAO,eACFa,EADL,CAEEZ,iBAAkBa,EAAOb,mBAE7B,IAAK,aACH,OAAO,eACFY,EADL,CAEEV,QAASU,EAAMV,SAEnB,IAAK,gBAKL,IAAK,gBACH,OAAO,eACFU,EADL,CAEET,WAAYS,EAAMT,YAEtB,IAAK,WACH,OAAO,eACFS,EADL,CAEER,MAAOQ,EAAMR,OAEjB,IAAK,aACH,OAAO,eACFQ,EADL,CAEEP,QAASO,EAAMP,SAEnB,IAAK,aACH,OAAQQ,EAAOP,QACb,KAAK,EACH,OAAO,eACFnB,EADL,CAEEC,gBAAiBwB,EAAMxB,gBACvBU,gBAAkC,KAAhBtB,IAAyB,EAC3CuB,uBAAyC,KAAhBvB,IAAyB,EAClDc,SAAUsB,EAAMtB,SAChBO,eAAgB,IAChBM,UAAWS,EAAMT,UACjBG,OAAQO,EAAOP,OACfJ,QAAQ,EACRD,cAAe,KAEnB,KAAK,EAaL,KAAK,EACH,OAAO,eACFd,EADL,CAEEC,gBAAiBwB,EAAMxB,gBACvBU,gBAAkC,KAAhBtB,IAAyB,EAC3CuB,uBAAyC,KAAhBvB,IAAyB,EAClDc,SAAUsB,EAAMtB,SAChBO,eAAgB,IAChBM,UAAWS,EAAMT,UACjBG,OAAQO,EAAOP,OACfJ,QAAQ,EACRD,cAAe,KAEnB,KAAK,EACH,OAAO,eACFd,EADL,CAEEC,gBAAiBwB,EAAMxB,gBACvBU,gBAAkC,KAAhBtB,IAAyB,EAC3CuB,uBAAyC,KAAhBvB,IAAyB,EAClDc,SAAUsB,EAAMtB,SAChBO,eAAgB,IAChBM,UAAWS,EAAMT,UACjBG,OAAQO,EAAOP,OACfJ,QAAQ,EACRD,cAAe,KAEnB,QACE,OAAOW,EAEb,IAAK,oBACH,OAAO,eACFA,EADL,CAEEX,cAAeY,EAAOZ,gBAE1B,IAAK,QACH,OAAO,eACFd,EADL,CAEEC,gBAAiBwB,EAAMxB,gBACvBU,gBAA0C,KAAxBc,EAAMxB,gBAA2B,EACnDW,uBAAiD,KAAxBa,EAAMxB,gBAA2B,EAC1DE,SAAUsB,EAAMtB,SAChBC,eAAgBqB,EAAMrB,eACtBY,UAAWS,EAAMT,UACjBI,MAAO,EAAIK,EAAML,QAErB,IAAK,WACH,OAAO,eACFK,EADL,CAEErB,eAAgBJ,EAAaI,eAC7BiB,KAAMK,EAAOL,OAEjB,QACE,OAAOI,MASAa,EAAQC,YAAYjB,GC9LpBkB,G,MAAmB,SAACC,GAAD,MAC9B,CAAEb,KAAM,qBAAsBnB,eAAgBgC,KAcnCC,EAAiB,iBAC5B,CAAEd,KAAM,eAEGe,EAAc,iBACzB,CAAEf,KAAM,kBAiBGgB,EAAa,iBACxB,CAAEhB,KAAM,U,MCgRV,IAAMiB,EAAqB,CACzBC,WDxUwB,SAACL,EAAKpC,GAAN,MACxB,CAAEuB,KAAM,YAAaG,MAAOU,EAAKX,MAAOzB,ICwUxC0C,wBD9SqC,SAACN,GAAD,MACrC,CAAEb,KAAM,6BAA8BhB,uBAAwB6B,KCkTjDO,EAFGC,aApBlB,SAAyBxB,GACvB,MAAO,CACLyB,cAAezB,EAAMD,cAAcf,eACnC0C,cAAe1B,EAAMD,cAAcd,eACnC0C,eAAgB3B,EAAMD,cAAcb,gBACpC0C,gBAAiB5B,EAAMD,cAAcX,iBACrCyC,UAAW7B,EAAMD,cAAcjB,UAC/BgD,WAAY9B,EAAMD,cAAchB,WAChCgD,MAAO/B,EAAMD,cAAcJ,MAC3BqC,OAAQhC,EAAMD,cAAcL,OAC5BuC,aAAcjC,EAAMD,cAAcV,cAClC6C,SAAgD,KAAtClC,EAAMD,cAAcvB,mBASS4C,EAAzBI,EA3UC,SAAAW,GACjB,IAAMC,EAAMC,iBAAO,MACfC,EAAqBD,iBAAO,GAC5BE,EAAeF,iBAAO,GACpBG,EAAWL,EAAXK,OACFC,EAAa,EACbC,EAAa,EACbC,EAAa,KACbC,EAAoB,GACpBC,EAAsB,KAGpBC,EAAW,SAACC,EAAGC,EAAGC,GACtB,IACIC,EC6B6B,SAACC,EAAKC,GACvC,IAAIC,EAWJ,MAVa,QAATD,EACAC,EAAa,MACX,GAAK,KAAOF,EAAI,IAAM,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAC/CG,SAAS,IACTC,cACAC,MAAM,GAEK,QAATJ,IACLC,EAAM,cAAUF,EAAI,GAAd,YAAoBA,EAAI,GAAxB,YAA8BA,EAAI,GAAlC,MAEHE,EDzCUI,CADLjB,EAAOkB,QAAQC,WAAW,MAAMC,aAAab,EAAGC,EAAG,EAAG,GAAGa,KACvB,OAC9ClB,EAAWM,GAAKa,MAAMlD,KAAOsC,EACzBf,EAAMN,UAAY,GACpBc,EAAWM,GAAKa,MAAMC,OAAS,UAE/BpB,EAAWM,GAAKa,MAAMC,OAAS,UAEjC5B,EAAMd,WAAW6B,EAAYD,IAGzBe,EAAa,WAEjB,IAAIC,EACAC,EAAU,CAAEC,MAAO,EAAGC,MAAO,GACjC,GAAoB,GAAhBjC,EAAMH,QAAeG,EAAMV,eAAiBU,EAAMH,OAAQ,CAC5DiC,EAAY,CAAC3B,EAAmBoB,QAASpB,EAAmBoB,SAC5D,IAAK,IAAIW,EAAI,EAAGA,EAAIlC,EAAMV,cAAe4C,IACnCH,EAAQE,QAAUtG,KAAKwG,MAAMnC,EAAMV,cAAgBU,EAAMH,SAC3DkC,EAAQC,QACRD,EAAQE,MAAQ,EAChBH,EAAU1D,KACP0D,EAAUI,GACTvG,KAAKwG,MAAOnC,EAAMT,cAAiBS,EAAMH,SACxClE,KAAKyG,GAAK,KACXL,EAAQC,MAAQ7B,EAAmBoB,UAGvCO,EAAU1D,KACP0D,EAAUI,IAAMlC,EAAMF,cAAgBnE,KAAKyG,GAAK,MAGrDL,EAAQE,YAEL,CACLH,EAAY,CAAC3B,EAAmBoB,SAChC,IAAK,IAAIW,EAAI,EAAGA,EAAIlC,EAAMV,cAAe4C,IACvCJ,EAAU1D,KACR0D,EAAUI,GACRvG,KAAKwG,MAAOnC,EAAMT,cAAiBS,EAAMV,gBACtC3D,KAAKyG,GAAK,MAIrB,OAAON,GAyCHO,EAAiB,WACrB,OAAO3D,EAAM4D,WAAW1E,cAAcT,QAGlCoF,EAAwB,WAC5B,IAAIC,EAAKhC,EAAW,GAAGiC,aAAa,MAChCC,EAAKlC,EAAW,GAAGiC,aAAa,MAChCE,EAAK3C,EAAMD,SAEX6C,EAAMJ,EAAKxC,EAAMD,SACjB8C,EAAMH,EAAK1C,EAAMD,SACrB,OAAOpE,KAAKmH,MAAMD,EAAKD,GAAOjH,KAAKmH,MAH1B,EAGoCH,IAGzCI,EAAe,WAGnB,IAAIC,EAAW,GACXR,EAAKhC,EAAW,GAAGiC,aAAa,MAChCC,EAAKlC,EAAW,GAAGiC,aAAa,MAChCQ,EAAStH,KAAKuH,MACflD,EAAMD,SAAWyC,IAAOxC,EAAMD,SAAWyC,IACvCxC,EAAMD,SAAW2C,IAAO1C,EAAMD,SAAW2C,IAE9CM,EAAS5E,KAAK,CACZ+E,MAAOZ,IACPU,OAAQA,IAEV,IAAK,IAAIf,EAAI,EAAGA,EAAIlC,EAAMV,cAAe4C,IAAK,CAC5C,IAAIkB,EAAK5C,EAAW0B,EAAI,GAAGO,aAAa,MACpCY,EAAK7C,EAAW0B,EAAI,GAAGO,aAAa,MACpCa,EAAK9C,EAAW0B,GAAGO,aAAa,MAChCc,EAAK/C,EAAW0B,GAAGO,aAAa,MAEhCQ,EAAStH,KAAKuH,MACflD,EAAMD,SAAWuD,IAAOtD,EAAMD,SAAWuD,IACvCtD,EAAMD,SAAWwD,IAAOvD,EAAMD,SAAWwD,IAG1CC,EAAMJ,EAAKpD,EAAMD,SACjB0D,EAAMJ,EAAKrD,EAAMD,SACjB2D,EAAMJ,EAAKtD,EAAMD,SACjB4D,EAAMJ,EAAKvD,EAAMD,SAEjBoD,EAAQxH,KAAKmH,MAAMa,EAAKD,GAAO/H,KAAKmH,MAAMW,EAAKD,GACnDR,EAAS5E,KAAK,CACZ+E,MAAOA,EACPF,OAAQA,IAGZ,OAAOD,GAGHY,EAAa,SAAChD,EAAGC,GACrB,QACElF,KAAKuH,MACFlD,EAAMD,SAAWa,IAAMZ,EAAMD,SAAWa,IACtCZ,EAAMD,SAAWc,IAAMb,EAAMD,SAAWc,IAE7C,IAAOb,EAAMD,YAEb8D,KACO,IAMLC,EAAwB,SAAAC,GAC5B,IAAIC,EAASD,EAAME,MAAQ3D,EACvB4D,EAASH,EAAMI,MAAQ5D,EACvBiC,EAAKhC,EAAW,GAAGiC,aAAa,MAChCC,EAAKlC,EAAW,GAAGiC,aAAa,MAChCG,EAAMJ,EAAKxC,EAAMD,SACjB8C,EAAMH,EAAK1C,EAAMD,SACjBqE,EAAgBzI,KAAKmH,MAAMD,EAAKD,GAChCyB,EAAa,EAEjB,GAAIT,EAAWI,EAAQE,GAAS,CAC9B1D,EAAW,GAAG8D,aAAa,KAA3B,UAAoCN,IACpCxD,EAAW,GAAG8D,aAAa,KAA3B,UAAoCJ,IAEpCvD,EAAS6B,EAAIE,EAAI,GAEjB,IAAK,IAAIR,EAAI,EAAGA,EAAIlC,EAAMV,cAAe4C,IAAK,CAC5CmC,GAAc5D,EAAkByB,GAAGiB,MAEnC,IAAIvC,EAAIJ,EAAW0B,GAAGO,aAAa,MAC/B5B,EAAIL,EAAW0B,GAAGO,aAAa,MAE/BU,EAAQkB,EAAaD,EACrBnB,EACFxC,EAAkByB,GAAGe,QACpBxC,EAAkB,GAAGwC,OACpBtH,KAAKuH,MACFlD,EAAMD,SAAWiE,IAAWhE,EAAMD,SAAWiE,IAC3ChE,EAAMD,SAAWmE,IAAWlE,EAAMD,SAAWmE,KAGlDjB,EAAS,IAAGA,EAAS,GACrBA,EAASjD,EAAMD,WAAUkD,EAASjD,EAAMD,UAC5CS,EAAW0B,GAAGoC,aACZ,KADF,UAEKtE,EAAMD,SAAWkD,EAAStH,KAAK4I,IAAIpB,KAExC3C,EAAW0B,GAAGoC,aACZ,KADF,UAEKtE,EAAMD,SAAWkD,EAAStH,KAAK6I,IAAIrB,KAExCxC,EAASC,EAAGC,EAAGqB,MAKfuC,EAAkB,SAAAV,GACtB,IAAIC,EAASD,EAAME,MAAQ3D,EACvB4D,EAASH,EAAMI,MAAQ5D,EACvBqD,EAAWI,EAAQE,KACrBxD,EAAoB4D,aAAa,KAAjC,UAA0CN,IAC1CtD,EAAoB4D,aAAa,KAAjC,UAA0CJ,IAC1CvD,EAASqD,EAAQE,EAAQxD,EAAoBgE,MAI3Cb,EAAgB,SAAAc,GACpBjE,EAAsB,KACjB2B,IAGHpC,EAAIsB,QAAQqD,oBAAoB,YAAad,GAF7C7D,EAAIsB,QAAQqD,oBAAoB,YAAaH,GAI/ChE,EAAoBsC,IACpB5C,EAAmBoB,QAAUgB,IAC7BvC,EAAMb,wBAAwBsB,EAAkB,GAAGwC,SAG/C4B,EAAkB,SAAAF,GACtB,IAAIG,EAAOzE,EAAOkB,QAAQwD,wBAC1BzE,EAAawE,EAAKE,KAClBzE,EAAauE,EAAKG,IAClBvE,EAAsBiE,EAAEO,OACnB7C,IAGHpC,EAAIsB,QAAQ4D,iBAAiB,YAAarB,GAF1C7D,EAAIsB,QAAQ4D,iBAAiB,YAAaV,GAI5ChE,EAAoBsC,KAsDtB,OAnDAqC,qBAAU,WACR,IAAItD,EAAYD,IACZwD,EAAmBrF,EAAMP,gBAAkBO,EAAMV,cACjDgG,EAAgBD,EAChBE,EAAiBvF,EAAMD,SAAWK,EAAamB,QAC/CiB,EACFxC,EAAMD,SACNC,EAAMR,eAAiB7D,KAAK4I,IAAIpE,EAAmBoB,SACjDmB,EACF1C,EAAMD,SACNC,EAAMR,eAAiB7D,KAAK6I,IAAIrE,EAAmBoB,SACrDf,EAAW,GAAG8D,aAAa,KAA3B,UAAoC9B,EAAK+C,IACzC/E,EAAW,GAAG8D,aAAa,KAA3B,UAAoC5B,EAAK6C,IACzC,IAAK,IAAIrD,EAAI,EAAGA,EAAIlC,EAAMV,cAAe4C,IAAK,CAC5C,IAAItB,EACFZ,EAAMD,UACLC,EAAMR,eAAiB8F,GAAiB3J,KAAK4I,IAAIzC,EAAUI,IAC1DrB,EACFb,EAAMD,UACLC,EAAMR,eAAiB8F,GAAiB3J,KAAK6I,IAAI1C,EAAUI,IAC9D1B,EAAW0B,GAAGoC,aAAa,KAA3B,UAAoC1D,EAAI2E,IACxC/E,EAAW0B,GAAGoC,aAAa,KAA3B,UAAoCzD,EAAI0E,IACxCD,GAAiBD,KAElB,CACDrF,EAAMP,gBACNO,EAAMV,cACNU,EAAMR,eACNQ,EAAMT,cACNS,EAAMF,aACNE,EAAMD,WAGRqF,qBAAU,WACR,IAAK,IAAIlD,EAAI,EAAGA,EAAIlC,EAAMV,cAAe4C,IAAK,CAC5C,IAAItB,EAAIJ,EAAW0B,GAAGO,aAAa,MAC/B5B,EAAIL,EAAW0B,GAAGO,aAAa,MACnC9B,EAASC,EAAGC,EAAGqB,OAInBsD,2BAAgB,WACdrF,EAAmBoB,QAAU,IAC7B,CAACvB,EAAMH,OAAQG,EAAMJ,QAEvB4F,2BAAgB,WACdpF,EAAamB,QAAUvB,EAAMD,SAC7BS,EAAaP,EAAIsB,QAAQkE,SACzBhF,EAAoBsC,OAIpB,yBACE2C,UAAU,WACVC,IAAK1F,EACL2F,MAAK,UAAsB,EAAjB5F,EAAMD,UAChB8F,OAAM,UAAsB,EAAjB7F,EAAMD,UACjB+F,QAAO,cAA0B,EAAjB9F,EAAMD,SAAf,YAAgD,EAAjBC,EAAMD,WApP1B,WACpB,IAAIgG,EAAW,GACXjE,EAAYD,IACZjB,EAAIZ,EAAMD,SAAWC,EAAMR,eAAiB7D,KAAK4I,IAAIpE,EAAmBoB,SACxEV,EAAIb,EAAMD,SAAWC,EAAMR,eAAiB7D,KAAK6I,IAAIrE,EAAmBoB,SAC5EwE,EAAS3H,KACP,4BACE4H,GAAIpF,EACJqF,GAAIpF,EACJqF,EAAC,UAAsB,IAAjBlG,EAAMD,UACZ6B,OAAO,UACPuE,YAAW,UAAsB,KAAjBnG,EAAMD,UACtBqG,YAAa,SAAAzB,GAAC,OAAIE,EAAgBF,IAClC0B,UAAW,SAAA1B,GAAC,OAAId,EAAcc,IAC9B7D,IAAK,EACL4D,GAAE,UAAK,MAGX,IAAK,IAAIxC,EAAI,EAAGA,EAAIlC,EAAMV,cAAe4C,IAAK,CAC5C,IAAItB,EAAIZ,EAAMD,SAAWC,EAAMR,eAAiB7D,KAAK4I,IAAIzC,EAAUI,IAC/DrB,EAAIb,EAAMD,SAAWC,EAAMR,eAAiB7D,KAAK6I,IAAI1C,EAAUI,IACnE6D,EAAS3H,KACP,4BACE4H,GAAIpF,EACJqF,GAAIpF,EACJqF,EAAC,UAAsB,IAAjBlG,EAAMD,UACZ6B,OAAO,UACPuE,YAAW,UAAsB,KAAjBnG,EAAMD,UACtBqG,YAAa,SAAAzB,GAAC,OAAIE,EAAgBF,IAClC0B,UAAW,SAAA1B,GAAC,OAAId,EAAcc,IAC9B7D,IAAKoB,EACLwC,GAAE,UAAKxC,MAIb,OAAO6D,EAmNJO,O,kBEzNP,IAAMrH,EAAqB,CACzBD,aACAF,kBAKayH,EAFIlH,aAfnB,SAAyBxB,GACvB,MAAO,CACL6B,UAAW7B,EAAMD,cAAcjB,UAC/BgD,WAAY9B,EAAMD,cAAchB,WAChC4J,SAAU3I,EAAMD,cAAcR,UAC9BqJ,OAAQ5I,EAAMD,cAAcT,OAC5B4C,SAAgD,KAAtClC,EAAMD,cAAcvB,mBASU4C,EAAzBI,EA5FC,SAAAW,GAClB,IAAMK,EAASH,iBAAO,MA6CtB,OAXAsF,2BAAgB,WACMnF,EAAOkB,QAAQC,WAAW,MAChCkF,MAAM1G,EAAMD,SAAS,IAAIC,EAAMD,SAAS,OACtD,CAACC,EAAMD,WAETyF,2BAAgB,YArCS,WACvB,IAAImB,EAAgBtG,EAAOkB,QAAQC,WAAW,MAC9CmF,EAAcC,UAAU,EAAG,EAAG,IAAO,KACrC,IAAK,IAAI1E,EAAI,EAAGA,EAAI,KAAMA,GAAK,EAAG,CAChC,IAAI2E,EAAQ3E,EAAI,GACX4E,GAAQD,EAAQ,IAAMlL,KAAKyG,GAAM,IACjCxB,EAAI,IAAM,IAAMjF,KAAK4I,KAAKuC,GAC1BjG,EAAI,IAAM,IAAMlF,KAAK6I,KAAKsC,GAC/BH,EAAcI,YACd,IAAIC,EAAWL,EAAcM,qBAC3B,IACA,IACArG,EAAGC,GAMLmG,EAASE,aAAa,IAAtB,UAA8BlH,EAAMN,UAAY,GAAK,QAAU,UAC/DsH,EAASE,aACP,IADF,cAESL,EAFT,aAEmB7G,EAAML,WAFzB,cAEyCK,EAAMN,UAF/C,OAKAiH,EAAcQ,YAAcH,EAE5BL,EAAcS,OAAO,IAAK,KAC1BT,EAAcU,OAAOzG,EAAGC,GACxB8F,EAAc/E,UAUhB0F,MAMA,yBAAK5B,UAAS,+BAA0B1F,EAAMwG,SAAW,OAAS,IAAM7E,MAAO,CAACkE,OAAO,GAAD,OAAoB,EAAf7F,EAAMD,UAAc6F,MAAM,GAAD,OAAoB,EAAf5F,EAAMD,YAC7H,4BACE2F,UAAS,6BAAwB1F,EAAMyG,OAAS,SAAW,GAAlD,YACPzG,EAAMwG,SAAW,OAAS,IAE5BxI,KAAK,SACLuJ,QAAS,WACPvH,EAAMlB,mBAGPkB,EAAMyG,OAAS,SAAW,QAE7B,yBAAKf,UAAU,YACb,kBAAC,EAAD,CAAW8B,gBAAiBxH,EAAMwH,gBAAiBnH,OAAQA,IAC3D,4BAAQuF,MAAK,UAAoB,EAAf5F,EAAMD,UAAc8F,OAAM,UAAoB,EAAf7F,EAAMD,UAAc4F,IAAKtF,KAG5E,4BACEqF,UAAS,8BAAyB1F,EAAMwG,SAAW,OAAS,IAC5DxI,KAAK,SACLuJ,QAAS,WACPvH,EAAMhB,eAJV,a,YC+EN,IAAMC,EAAqB,CACzBwI,aJvI0B,SAAC5I,GAAD,MAC1B,CAAEb,KAAM,gBAAiBrB,UAAWkC,IIuIpC6I,cJrI2B,SAAC7I,GAAD,MAC3B,CAAEb,KAAM,iBAAkBpB,WAAYiC,IIqItCD,mBACAI,aACAF,iBACA6I,iBJnI8B,SAAC9I,GAAD,MAC9B,CAAEb,KAAM,qBAAsBlB,eAAgB+B,IImI9C+I,kBJjI+B,SAAC/I,GAAD,MAC/B,CAAEb,KAAM,sBAAuBjB,gBAAiB8B,IIiIhDgJ,mBJ5HgC,SAAChJ,GAAD,MAChC,CAAEb,KAAM,uBAAwBf,iBAAkB4B,II4HlDE,eAKa+I,EAFEzI,aA3BjB,SAAyBxB,GACvB,MAAO,CACL6B,UAAW7B,EAAMD,cAAcjB,UAC/BgD,WAAY9B,EAAMD,cAAchB,WAChC0C,cAAezB,EAAMD,cAAcf,eACnC0C,cAAe1B,EAAMD,cAAcd,eACnC0C,eAAgB3B,EAAMD,cAAcb,gBACpCgL,qBAAsBlK,EAAMD,cAAcZ,uBAC1CyC,gBAAiB5B,EAAMD,cAAcX,iBACrCuJ,SAAU3I,EAAMD,cAAcR,UAC9ByC,OAAQhC,EAAMD,cAAcL,OAC5ByK,SAAUnK,EAAMD,cAAcvB,mBAgBQ4C,EAAzBI,EAnJC,SAAAW,GAChB,IAAMiI,EAAgB/H,iBAAO,MACvBgI,EAAehI,iBAAO,MAU5B,OARAkF,qBAAU,WACRpF,EAAM6H,mBAAmBI,EAAc1G,QAAQsF,SAC9C,CAAC7G,EAAMR,iBAEV4F,qBAAU,WACRpF,EAAM4H,kBAAkBM,EAAa3G,QAAQsF,SAC5C,CAAC7G,EAAMT,gBAGR,yBAAKmG,UAAS,iCAA4B1F,EAAMwG,SAAW,OAAS,KAClE,yBAAKd,UAAU,oBACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,gBAAb,cAAwC1F,EAAMN,UAA9C,KACA,2BACE1B,KAAK,QACL0H,UAAS,iBAAY1F,EAAMwG,SAAW,OAAS,IAC/C2B,IAAK,GACLvM,IAAK,GACLwM,KAAM,EACNvB,MAAO7G,EAAMN,UACb2I,SAAU,SAAAxJ,GACRmB,EAAMyH,aAAa5I,EAAIqG,OAAO2B,WAIpC,yBAAKnB,UAAU,oBACb,uBAAGA,UAAU,gBAAb,eAAyC1F,EAAML,WAA/C,KACA,2BACE3B,KAAK,QACL0H,UAAS,iBAAY1F,EAAMwG,SAAW,OAAS,IAC/C2B,IAAK,GACLvM,IAAK,IACLwM,KAAM,EACNvB,MAAO7G,EAAML,WACb0I,SAAU,SAAAxJ,GACRmB,EAAM0H,cAAc7I,EAAIqG,OAAO2B,WAIrC,yBAAKnB,UAAU,oBACb,uBAAGA,UAAU,gBAAb,qBACqB1F,EAAMV,eAE3B,2BACEtB,KAAK,QACL0H,UAAS,iBAAY1F,EAAMwG,SAAW,OAAS,IAC/C2B,IAAKnI,EAAMH,OACXjE,IAAK,GACLwM,KAAMpI,EAAMH,OACZgH,MAAO7G,EAAMV,cACb+I,SAAU,SAAAxJ,GACRmB,EAAMpB,iBAAiBC,EAAIqG,OAAO2B,WAIxC,yBAAKnB,UAAU,oBACb,uBAAGA,UAAU,gBAAb,uBACuB,KAEnB/J,KAAKwG,MAAOnC,EAAMT,cAAgBS,EAAMV,cAAiB,IAAM,IAC/DgJ,QAAQ,GAJZ,QAOA,2BACEtK,KAAK,QACL0H,UAAS,iBAAY1F,EAAMwG,SAAW,OAAS,IAC/C2B,IAAK,GACLvM,IAAK,IACLwM,KAAM,EACNvB,MAAO7G,EAAMT,cACb8I,SAAU,SAAAxJ,GACRmB,EAAM2H,iBAAiB9I,EAAIqG,OAAO2B,WAIxC,yBAAKnB,UAAU,oBACb,uBAAGA,UAAU,gBAAb,wBACwB,KACpB/J,KAAKwG,MAAOnC,EAAM+H,sBAAyC,KAAjB/H,EAAMgI,UAAqB,KAAQ,IAAIM,QAAQ,IAE7F,2BACEtK,KAAK,QACL0H,UAAS,iBAAY1F,EAAMwG,SAAW,OAAS,IAC/Cb,IAAKuC,EACLC,IAAK,EACLvM,IAAK,KAAQoE,EAAMgI,SACnBI,KAAM,EACNvB,MAAO7G,EAAM+H,qBACbM,SAAU,SAAAxJ,GACRmB,EAAM4H,kBAAkB/I,EAAIqG,OAAO2B,WAIzC,yBAAKnB,UAAU,oBACb,uBAAGA,UAAU,gBAAb,oBACoB,KAChB/J,KAAKwG,MAA8B,GAAxBnC,EAAMP,iBAAwB,IAAI6I,QAAQ,IAEzD,2BACEtK,KAAK,QACL0H,UAAS,iBAAY1F,EAAMwG,SAAW,OAAS,IAC/Cb,IAAKsC,EACLE,MAAO,KAAQnI,EAAMgI,SAAWhI,EAAMR,gBACtC5D,IAAKoE,EAAMR,eACX4I,KAAM,EACNvB,MAAO7G,EAAMP,gBACb4I,SAAU,SAAAxJ,GACRmB,EAAM6H,mBAAmBhJ,EAAIqG,OAAO2B,gB,MC3BlD,IAAM5H,EAAqB,CACzBL,mBACAG,cACAwJ,gBL/C6B,SAAC1J,GAAD,MAC7B,CAAEb,KAAM,oBAAqBd,cAAe2B,IK+C5C2J,ULnDuB,SAAC3J,GAAD,MACvB,CAAEb,KAAM,aAAcT,OAAQsB,KKuDjB4J,EAFCpJ,aAnBhB,SAAyBxB,GACvB,MAAO,CACLyB,cAAezB,EAAMD,cAAcf,eACnC0C,cAAe1B,EAAMD,cAAcd,eACnC0C,eAAgB3B,EAAMD,cAAcb,gBACpCyJ,SAAU3I,EAAMD,cAAcR,UAC9ByC,OAAQhC,EAAMD,cAAcL,OAC5BuC,aAAcjC,EAAMD,cAAcV,cAClCwL,SAAU7K,EAAMD,cAAcvB,mBAWO4C,EAAzBI,EAhGC,SAAAW,GAQf,OANAoF,qBAAU,WACY,GAAhBpF,EAAMH,QACRG,EAAMpB,iBAAgC,EAAfoB,EAAMH,UAE9B,CAACG,EAAMH,SAGR,yBAAK6F,UAAS,gCAA2B1F,EAAMwG,SAAW,OAAS,KACjE,yBAAKd,UAAU,mBACb,yBAAKA,UAAU,gBACb,4BACEA,UAAS,sBAAiB1F,EAAMwG,SAAW,OAAS,GAA3C,YACU,IAAjBxG,EAAMH,OAAe,SAAW,GADzB,KAGT7B,KAAK,SACLuJ,QAAS,WACgB,IAAjBvH,EAAMH,QAAeG,EAAMwI,UAAU,MAG/C,4BACE9C,UAAS,wBAAmB1F,EAAMwG,SAAW,OAAS,GAA7C,YACU,IAAjBxG,EAAMH,OAAe,SAAW,IAElC7B,KAAK,SACLuJ,QAAS,WACgB,IAAjBvH,EAAMH,QAAeG,EAAMwI,UAAU,MAG/C,4BACE9C,UAAS,yBAAoB1F,EAAMwG,SAAW,OAAS,GAA9C,YACU,IAAjBxG,EAAMH,OAAe,SAAW,IAElC7B,KAAK,SACLuJ,QAAS,WACgB,IAAjBvH,EAAMH,QAAeG,EAAMwI,UAAU,MAG/C,4BACE9C,UAAS,yBAAoB1F,EAAMwG,SAAW,OAAS,GAA9C,YACU,IAAjBxG,EAAMH,OAAe,SAAW,IAElC7B,KAAK,SACLuJ,QAAS,WACgB,IAAjBvH,EAAMH,QAAeG,EAAMwI,UAAU,QAKnD,yBACE9C,UAAU,mBACV/D,MAAO,CAAEgH,UAAU,GAAD,OAAsB,GAAjB3I,EAAM0I,YAE7B,uBAAGhD,UAAU,gBAAb,yBACyB,KACrB/J,KAAKwG,MAA2B,GAArBnC,EAAMF,cAAqB,IAAIwI,QAAQ,GAFtD,QAIA,2BACEtK,KAAK,QACL0H,UAAS,iBAAY1F,EAAMwG,SAAW,OAAS,IAC/C2B,IAAK,EACLvM,IACGoE,EAAMT,cAAgBS,EAAMH,OAASG,EAAMV,cAC5CU,EAAMH,OAERuI,KAAM,EACNvB,MAAO7G,EAAMF,aACbuI,SAAU,SAAAxJ,GACRmB,EAAMuI,gBAAgB1J,EAAIqG,OAAO2B,e,gBC1B7C,IAEe+B,EAFIvJ,aAVnB,SAAyBxB,GACvB,MAAO,CACL6B,UAAW7B,EAAMD,cAAcjB,UAC/B2C,cAAezB,EAAMD,cAAcf,eACnCgM,KAAMhL,EAAMD,cAAcP,KAC1ByL,OAAQjL,EAAMD,cAAcN,OAC5BoL,SAAU7K,EAAMD,cAAcvB,mBAIfgD,EAjDC,SAAAW,GAClB,IAAM+I,EAAa7I,iBAAO,MACtB2F,EAAU,KAAM7F,EAAM0I,SAAY1I,EAAMV,cACxC0J,EAAYhJ,EAAMN,UAAY,GAAK,UAAY,UAE7CuJ,EAAY,SAAAlF,IJUc,SAAE/C,GAElC,IAKIkI,EALAtN,GADJoF,EAAM,CAACA,EAAI,GAAG,IAAKA,EAAI,GAAG,IAAKA,EAAI,GAAG,MACxB,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAK,EAAI,EAAMA,EAAI,GAAKA,EAAI,GAAK,EAAI,EAC3EmH,EAAMnH,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAK,EAAI,EAAMA,EAAI,GAAKA,EAAI,GAAK,EAAI,EAC3E6F,EAAQ7F,EAAIpF,GACZuN,EAASnI,EAAIpF,GAAOoF,EAAImH,GACxBzI,GAAasB,EAAIpF,GAAKoF,EAAImH,IAAM,EAEhCxI,EACY,IAAdD,GAAiC,IAAdA,EAAkB,GAAKmH,EAAQnH,GAAW/D,KAAKwM,IAAIzI,EAAY,EAAIA,GAExF,OAAQmH,GACN,KAAK7F,EAAI,GACPkI,GAAclI,EAAI,GAAGA,EAAI,IAAImI,EAAvB,GACN,MACF,KAAKnI,EAAI,GACPkI,EAAM,IAAM,GAAGlI,EAAI,GAAGA,EAAI,IAAImI,GAC9B,MACF,KAAKnI,EAAI,GACPkI,EAAM,IAAM,GAAGlI,EAAI,GAAGA,EAAI,IAAImI,GAGlCD,EAAiB,IAAXC,EAAe,EAAKD,EAAM,EAAIvN,KAAKwG,MAAM+G,EAAI,KAAQvN,KAAKwG,MAAM+G,GACtEvJ,EAAahE,KAAKwG,MAAiB,IAAXxC,GACxBD,EAAY/D,KAAKwG,MAAgB,IAAVzC,GAEvB0J,QAAQC,IAAIH,EAAI,KAAKvJ,EAAT,KAAyBD,GInCpC4J,CJqDkC,SAAAC,GACnC,IAAIrI,EACJ,GAAwB,MAApBqI,EAAMC,OAAO,GAAY,CAC3B,IAAIC,EAAU,4CAA4CC,KAAKH,GAC/DrI,EAAS,CAACyI,SAASF,EAAQ,GAAI,IAAIE,SAASF,EAAQ,GAAG,IAAKE,SAASF,EAAQ,GAAI,UAE5E,GAAwB,MAApBF,EAAMC,OAAO,GAAY,CAClCD,EAAMK,MAAM,KAIZ1I,EAAS,CAHDyI,SAASJ,EAAM,GAAGM,UAAU,IAC5BF,SAASJ,EAAM,IACfI,SAASJ,EAAM,KAGzB,OAAOrI,EIlEa4I,CAAsB9J,EAAMuJ,QAC9C,IAAIA,EAAQvJ,EAAMuJ,MACbvJ,EAAM6I,OACTU,EAAQA,EAAMQ,OAAO,IAEnB/J,EAAM8I,SACRS,EAAK,WAAOA,EAAP,MAEPS,IAAKT,IAGP,OACE,yBACE5D,IAAKoD,EACLrD,UAAU,cACV/D,MAAO,CACLkE,OAAQA,EACR0D,MAAOP,EACPiB,gBAAiBjK,EAAMuJ,OAEzBhC,QAAS,SAAAxD,GAAK,OAAIkF,MAElB,yBACEvD,UAAU,cACV/D,MAAO,CAAEkE,OAAQA,EAAQqE,WAAW,GAAD,QAAMrE,EAAU,KAAM7F,EAAM0I,UAAa,EAAzC,QAEnC,uBAAGhD,UAAU,wBAAwB1F,EAAMuJ,OAC3C,uBAAG7D,UAAU,uBAAb,sB,MC6CR,IAAMzG,EAAqB,CACzBkL,UPrCuB,iBACvB,CAAEnM,KAAM,eOqCRoM,QPnCqB,iBACrB,CAAEpM,KAAM,cOuCKqM,EAFOhL,aAhBtB,SAAyBxB,GACvB,MAAO,CACLyB,cAAezB,EAAMD,cAAcf,eACnC6C,UAAW7B,EAAMD,cAAcjB,UAC/B2N,OAAQzM,EAAMD,cAActB,OAC5BuM,KAAMhL,EAAMD,cAAcP,KAC1ByL,OAAQjL,EAAMD,cAAcN,OAC5BkJ,SAAU3I,EAAMD,cAAcR,aASa6B,EAAzBI,EAhFC,SAAAW,GACrB,IAeMuK,EAAoBvK,EAAMsK,OAAOE,KAAI,SAACjB,EAAOrH,GAAR,OACzC,kBAAC,EAAD,CAAYqH,MAAOA,EAAOzI,IAAKoB,OAGjC,OACE,yBAAKwD,UAAS,kCAA6B1F,EAAMwG,SAAW,OAAS,KACnE,yBAAKd,UAAU,mBAAmBC,IAAK3F,EAAMyK,YAC1CF,GAEH,yBAAK7E,UAAU,qBACb,4BACEA,UAAS,iBAAY1F,EAAM6I,KAAO,SAAW,GAApC,YACP7I,EAAMwG,SAAW,OAAS,IAE5BxI,KAAK,SACLuJ,QAAS,WACPvH,EAAMoK,YANV,QAWA,4BACE1E,UAAS,iBAAY1F,EAAM8I,OAAS,SAAW,GAAtC,YACP9I,EAAMwG,SAAW,OAAS,IAE5BxI,KAAK,SACLuJ,QAAS,WACPvH,EAAMmK,cANV,WAYF,yBAAKzE,UAAU,qBACb,4BACEA,UAAS,iBAAY1F,EAAMwG,SAAW,OAAS,IAC/CxI,KAAK,SACLuJ,QAAS,YApDK,WAGpB,IAFA,IAAImD,EAAQ,YAAOhM,EAAM4D,WAAW1E,cAActB,QAEzC4F,EAAI,EAAGA,EAAIwI,EAASlM,OAAQ0D,IAC/BlC,EAAM6I,OACR6B,EAASxI,GAAKwI,EAASxI,GAAG6H,OAAO,IAEhC/J,EAAM8I,SACP4B,EAASxI,GAAT,WAAkBwI,EAASxI,GAA3B,MAIJ8H,IAAKU,GAyCGC,KAJJ,iB,sBCbR,IAAM1L,EAAqB,CACzB2L,cRhC2B,SAACnO,GAAD,MAC3B,CAAEuB,KAAM,iBAAkBE,MAAOzB,IQgCjCoO,kBRvC+B,SAACpO,GAAD,MAC/B,CAAEuB,KAAM,sBAAuBE,MAAOzB,KQ8CzBqO,EALMzL,aAbrB,SAAyBxB,GACvB,MAAO,CACL2I,SAAU3I,EAAMD,cAAcR,UAC9BsL,SAAU7K,EAAMD,cAAcvB,gBAC9B0O,cAAelN,EAAMD,cAAcpB,kBAWrCyC,EAFmBI,EA7CC,SAAAW,GACpB,IAAI4F,EAAS,MAAS5F,EAAM0I,SAAY1I,EAAMtD,QAAQ8B,OAEhDwM,EAAehL,EAAMtD,QAAQ8N,KAAI,SAACjB,EAAOrH,GAAR,OACrC,yBACEwD,UAAU,cACV/D,MAAO,CAAEsI,gBAAiBV,EAAO3D,MAAM,GAAD,OAAKA,EAAL,OACtC9E,IAAKoB,OAIT,OACE,yBACEwD,UAAS,gCACP1F,EAAMiL,OAAS,cAAgB,GADxB,mBAEPjL,EAAMwG,SAAW,OAAS,GAFnB,oBAGPxG,EAAM+K,cAActO,QAAUuD,EAAMvD,MAAQ,iBAAmB,GAHxD,oBAIPuD,EAAMkL,WAAa,cAAgB,IACrC3D,QAAS,WACHvH,EAAMkL,WACRlL,EAAM4K,cAAc5K,EAAMvD,OACjBuD,EAAMiL,QACfjL,EAAM6K,kBAAkB7K,EAAMvD,SAIlC,yBAAKiJ,UAAS,iBACbsF,MCuBP,IAAM/L,EAAqB,CACzBkM,aT7C0B,iBAC1B,CAAEnN,KAAM,mBSiDKoN,EAFQ/L,aAXvB,SAAyBxB,GACvB,MAAO,CACL2I,SAAU3I,EAAMD,cAAcR,UAC9BiO,SAAUxN,EAAMD,cAAcrB,YAQc0C,EAAzBI,EAnDC,SAAAW,GAAU,IAAD,EACKsL,oBAAS,GADd,mBACxBJ,EADwB,KACZK,EADY,KAGzBC,EAAsBxL,EAAMqL,SAASb,KAAI,SAAC9N,EAASwF,GAAV,OAC7C,kBAAC,EAAD,CACExF,QAASA,EACToE,IAAKoB,EACLgJ,WAAYA,EACZzO,MAAOyF,EACP+I,OAAQjL,EAAMiL,YAIlB,OACE,yBAAKvF,UAAS,0BAAqB1F,EAAMwG,SAAW,OAAS,KAC3D,4BACEd,UAAS,iCAA4B1F,EAAMwG,SAAW,OAAS,IAC/DxI,KAAK,SACLuJ,QAAS,WACPvH,EAAMmL,iBAJV,OASA,4BACEzF,UAAS,iCAA4B1F,EAAMwG,SAAW,OAAS,GAAtD,YACL0E,EAAa,SAAW,IAE5BlN,KAAK,SACLuJ,QAAS,WACPgE,GAAeL,KANnB,UAWA,yBAAKxF,UAAU,0BAA0B8F,OCZ/C,IAEeC,EAFKpM,aANpB,SAAyBxB,GACvB,MAAO,CACL2I,SAAU3I,EAAMD,cAAcR,aAIdiC,EAtBC,SAAAW,GACnB,IAAM0L,EAAiBxL,iBAAO,MAE9B,OACE,yBAAKwF,UAAS,iCAA4B1F,EAAMwG,SAAW,OAAS,KAClE,yBAAKd,UAAU,oBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAY8B,gBAAiBkE,IAC7B,kBAAC,EAAD,CAAejB,WAAYiB,IAC3B,kBAAC,EAAD,CAAgBT,QAAQ,Q,MCC9B,IAEeQ,EAFKpM,aANpB,SAAyBxB,GACvB,MAAO,CACL2I,SAAU3I,EAAMD,cAAcR,aAIdiC,EAhBC,SAAAW,GACIE,iBAAO,MAE9B,OACE,yBAAKwF,UAAS,mCAA8B1F,EAAMwG,SAAW,OAAS,KACpE,kBAAC,EAAD,CAAgByE,QAAQ,QCwE9B,IAAMhM,EAAqB,CACzB0M,YZjFyB,iBACzB,CAAE3N,KAAM,wBYiFRe,cACA6M,QZvBqB,SAAC/M,GAAD,MACrB,CAAEb,KAAM,WAAYP,KAAMoB,KY2BbgN,EAFHxM,aAbZ,SAAyBxB,GACvB,MAAO,CACL2I,SAAU3I,EAAMD,cAAcR,UAC9B0O,QAASjO,EAAMD,cAAcH,QAUIwB,EAAzBI,EAjFC,SAAAW,GACXwF,2BAAgB,WACdxJ,OAAOmJ,iBAAiB,UAAU,kBAAMnF,EAAM2L,oBAYhD,OACE,yBAAKjG,UAAS,cAAS1F,EAAMwG,SAAW,OAAS,KAC/C,yBAAKd,UAAS,kBAAa1F,EAAMwG,SAAW,OAAS,KACnD,yBAAKd,UAAS,yBAAoB1F,EAAMwG,SAAW,SAAW,MAC9D,yBACEd,UAAS,yBAAoB1F,EAAMwG,SAAW,OAAS,YAEzD,yBACEd,UAAS,kCAA6B1F,EAAMwG,SAAW,OAAS,KAEhE,yBAAKd,UAAU,oBACb,yBACEA,UAAS,+BACW,IAAlB1F,EAAM8L,QAAgB,aAAe,GAD9B,YAEL9L,EAAMwG,SAAW,OAAS,IAC9Be,QAAS,kBAAMvH,EAAM4L,QAAQ,KAJ/B,gBAQA,yBACElG,UAAS,0CACP1F,EAAMwG,SAAW,OAAS,MAG9B,yBACEd,UAAS,yBACW,IAAlB1F,EAAM8L,QAAgB,aAAe,GAD9B,YAEL9L,EAAMwG,SAAW,OAAS,IAC9Be,QAAS,kBAAMvH,EAAM4L,QAAQ,KAJ/B,kBAQA,yBACElG,UAAS,oCACP1F,EAAMwG,SAAW,OAAS,MAG9B,4BACEd,UAAS,0BAAqB1F,EAAMwG,SAAW,OAAS,IACxDxI,KAAK,SACLuJ,QAAS,WACPvH,EAAMjB,gBAGPiB,EAAMwG,SAAW,aAAe,cArDxB,WACnB,OAAQxG,EAAM8L,SACZ,KAAK,EACH,OAAO,kBAAC,EAAD,MACT,KAAK,EACH,OAAO,kBAAC,EAAD,OAmDJC,SCxDSC,QACW,cAA7BhQ,OAAOiQ,SAASC,UAEe,UAA7BlQ,OAAOiQ,SAASC,UAEhBlQ,OAAOiQ,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,CAAU3N,MAAOA,GACf,kBAAC,EAAD,OAEF7C,SAASyQ,eAAe,SAOf3Q,KAAKC,IAAIC,SAASC,gBAAgByQ,YAAavQ,OAAOG,YAAc,GACpER,KAAKC,IAAIC,SAASC,gBAAgBC,aAAcC,OAAOC,aAAe,GD+G3E,kBAAmBuQ,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3D,QAAQ2D,MAAMA,EAAMC,c","file":"static/js/main.7205bffa.chunk.js","sourcesContent":["export const getViewport = () => {\r\n  let VH = Math.max(\r\n    document.documentElement.clientHeight,\r\n    window.innerHeight || 0\r\n  );\r\n  let VW = Math.max(\r\n    document.documentElement.clientHeight,\r\n    window.innerWidth || 0\r\n  );\r\n  \r\n  return VH > VW ? VW : VH;\r\n};\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { getViewport } from \"../../util/viewport-height\";\r\n\r\nconst initialState = {\r\n  VIEWPORT_HEIGHT: getViewport(),\r\n  COLORS: [\"#FFF\", \"#FFF\", \"#FFF\"],\r\n  PALETTES: [],\r\n  ACTIVE_PALETTE: {index: -1, palette: []},\r\n  LIGHTNESS: 50,\r\n  SATURATION: 100,\r\n  SELECTOR_COUNT: 4,\r\n  SELECTOR_ANGLE: 180,\r\n  SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n  SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n  SELECTOR_STAGGER: 0,\r\n  CLUSTER_ANGLE: 30,\r\n  LINKED: false,\r\n  DARK_MODE: true,\r\n  HASH: true,\r\n  QUOTES: true,\r\n  PRESET: 1,\r\n  RESET: 0, //for comp. rerender if init state doesnt change a prop\r\n  MODE: 0\r\n};\r\n\r\nexport const actionReducer = (state = initialState, action) => {\r\n  let CURRENT_PALETTES = [...state.PALETTES];\r\n  switch (action.type) {\r\n    case \"SET_VIEWPORT_HEIGHT\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n        VIEWPORT_HEIGHT: getViewport()\r\n      };\r\n    case \"SET_COLOR\":\r\n      let CURRENT_COLORS = [...state.COLORS];\r\n      CURRENT_COLORS[action.INDEX] = action.COLOR;\r\n      return {\r\n        ...state,\r\n        COLORS: CURRENT_COLORS\r\n      };\r\n    case \"STORE_PALETTE\":\r\n      CURRENT_PALETTES.push([...state.COLORS]);\r\n      return {\r\n        ...state,\r\n        PALETTES: CURRENT_PALETTES\r\n      };\r\n    case \"SET_CURRENT_PALETTE\":\r\n      let SELECTED_PALETTE = CURRENT_PALETTES[action.INDEX]\r\n      return {\r\n        ...state,\r\n        ACTIVE_PALETTE: {index: action.INDEX, palette: SELECTED_PALETTE}\r\n      }\r\n    case \"DELETE_PALETTE\":\r\n      CURRENT_PALETTES.splice(action.INDEX, 1);\r\n      return {\r\n        ...state,\r\n        PALETTES: CURRENT_PALETTES\r\n      };\r\n    case \"SET_LIGHTNESS\":\r\n      return {\r\n        ...state,\r\n        LIGHTNESS: action.LIGHTNESS\r\n      };\r\n    case \"SET_SATURATION\":\r\n      return {\r\n        ...state,\r\n        SATURATION: action.SATURATION\r\n      };\r\n    case \"SET_SELECTOR_COUNT\":\r\n      let NEW_COLORS = [];\r\n      NEW_COLORS.length = action.SELECTOR_COUNT;\r\n      NEW_COLORS.fill(\"#FFF\");\r\n      return {\r\n        ...state,\r\n        COLORS: NEW_COLORS,\r\n        SELECTOR_COUNT: action.SELECTOR_COUNT\r\n      };\r\n    case \"SET_SELECTOR_ANGLE\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_ANGLE: action.SELECTOR_ANGLE\r\n      };\r\n    case \"SET_SELECTOR_RADIUS\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_RADIUS: action.SELECTOR_RADIUS,\r\n        SELECTOR_LINKED_RADIUS: action.SELECTOR_RADIUS\r\n      };\r\n    case \"SET_SELECTOR_LINKED_RADIUS\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_LINKED_RADIUS: action.SELECTOR_LINKED_RADIUS\r\n      };\r\n    case \"SET_SELECTOR_STAGGER\":\r\n      return {\r\n        ...state,\r\n        SELECTOR_STAGGER: action.SELECTOR_STAGGER\r\n      };\r\n    case \"SET_LINKED\":\r\n      return {\r\n        ...state,\r\n        LINKED: !state.LINKED\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_DARK_MODE\":\r\n      return {\r\n        ...state,\r\n        DARK_MODE: !state.DARK_MODE\r\n      };\r\n    case \"SET_HASH\":\r\n      return {\r\n        ...state,\r\n        HASH: !state.HASH\r\n      };\r\n    case \"SET_QUOTES\":\r\n      return {\r\n        ...state,\r\n        QUOTES: !state.QUOTES\r\n      };\r\n    case \"SET_PRESET\":\r\n      switch (action.PRESET) {\r\n        case 2:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n            SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 20\r\n          };\r\n        case 3:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n            SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 16\r\n          };\r\n        case 4:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n            SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 16\r\n          };\r\n        case 5:\r\n          return {\r\n            ...initialState,\r\n            VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n            SELECTOR_RADIUS: (getViewport() * 0.325) / 2,\r\n            SELECTOR_LINKED_RADIUS: (getViewport() * 0.325) / 2,\r\n            PALETTES: state.PALETTES,\r\n            SELECTOR_ANGLE: 360,\r\n            DARK_MODE: state.DARK_MODE,\r\n            PRESET: action.PRESET,\r\n            LINKED: true,\r\n            CLUSTER_ANGLE: 15\r\n          };\r\n        default:\r\n          return state;\r\n      }\r\n    case \"SET_CLUSTER_ANGLE\":\r\n      return {\r\n        ...state,\r\n        CLUSTER_ANGLE: action.CLUSTER_ANGLE\r\n      };\r\n    case \"RESET\":\r\n      return {\r\n        ...initialState,\r\n        VIEWPORT_HEIGHT: state.VIEWPORT_HEIGHT,\r\n        SELECTOR_RADIUS: (state.VIEWPORT_HEIGHT * 0.325) / 2,\r\n        SELECTOR_LINKED_RADIUS: (state.VIEWPORT_HEIGHT * 0.325) / 2,\r\n        PALETTES: state.PALETTES,\r\n        ACTIVE_PALETTE: state.ACTIVE_PALETTE,\r\n        DARK_MODE: state.DARK_MODE,\r\n        RESET: 1 - state.RESET\r\n      };\r\n    case \"SET_MODE\":\r\n      return {\r\n        ...state,\r\n        ACTIVE_PALETTE: initialState.ACTIVE_PALETTE,\r\n        MODE: action.MODE\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const reducers = combineReducers({\r\n  actionReducer\r\n});\r\n\r\n// store.js\r\nexport const store = createStore(reducers);\r\n","//import { SET_COLOR } from \"./action-types\";\r\n\r\nexport const setViewport = () => (\r\n  { type: 'SET_VIEWPORT_HEIGHT' }\r\n)\r\nexport const storeColor = (val, index) => (\r\n  { type: 'SET_COLOR', COLOR: val, INDEX: index }\r\n)\r\nexport const setCurrentPalette = (index) => (\r\n  { type: 'SET_CURRENT_PALETTE', INDEX: index}\r\n)\r\nexport const storePalette = () => (\r\n  { type: 'STORE_PALETTE' }\r\n)\r\nexport const deletePalette = (index) => (\r\n  { type: 'DELETE_PALETTE', INDEX: index}\r\n)\r\nexport const setLightness = (val) => (\r\n  { type: 'SET_LIGHTNESS', LIGHTNESS: val }\r\n)\r\nexport const setSaturation = (val) => (\r\n  { type: 'SET_SATURATION', SATURATION: val }\r\n)\r\nexport const setSelectorCount = (val) => (\r\n  { type: 'SET_SELECTOR_COUNT', SELECTOR_COUNT: val }\r\n)\r\nexport const setSelectorAngle = (val) => (\r\n  { type: 'SET_SELECTOR_ANGLE', SELECTOR_ANGLE: val }\r\n)\r\nexport const setSelectorRadius = (val) => (\r\n  { type: 'SET_SELECTOR_RADIUS', SELECTOR_RADIUS: val }\r\n)\r\nexport const setSelectorLinkedRadius = (val) => (\r\n  { type: 'SET_SELECTOR_LINKED_RADIUS', SELECTOR_LINKED_RADIUS: val}\r\n)\r\nexport const setSelectorStagger = (val) => (\r\n  { type: 'SET_SELECTOR_STAGGER', SELECTOR_STAGGER: val }\r\n)\r\nexport const setLinkedState = () => (\r\n  { type: 'SET_LINKED' }\r\n)\r\nexport const setDarkMode = () => (\r\n  { type: 'SET_DARK_MODE' }\r\n)\r\nexport const setCopyType = () => (\r\n  { type: 'SET_COPY_TYPE' }\r\n)\r\nexport const setQuotes = () => (\r\n  { type: 'SET_QUOTES' }\r\n)\r\nexport const setHash = () => (\r\n  { type: 'SET_HASH' }\r\n)\r\nexport const setPreset = (val) => (\r\n  { type: 'SET_PRESET', PRESET: val }\r\n)\r\nexport const setClusterAngle = (val) => (\r\n  { type: 'SET_CLUSTER_ANGLE', CLUSTER_ANGLE: val }\r\n)\r\nexport const resetState = () => (\r\n  { type: 'RESET' }\r\n)\r\nexport const setMode = (val) => (\r\n  { type: 'SET_MODE', MODE: val }\r\n)","import React, { useEffect, useLayoutEffect, useRef, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { storeColor, setSelectorLinkedRadius } from \"../../../redux/actions/actions\";\r\nimport { store } from \"../../../redux/reducers/reducers\";\r\nimport { colorIntegersToString } from \"../../../util/color-utility\"\r\n\r\nconst Selectors_ = props => {\r\n  const svg = useRef(null);\r\n  let initialOffsetAngle = useRef(0);\r\n  let lastCWRadius = useRef(0);\r\n  let { canvas } = props;\r\n  let canvasPosX = 0;\r\n  let canvasPosY = 0;\r\n  let circleRefs = null;\r\n  let circleCoordinates = [];\r\n  let currentActiveCircle = null;\r\n  \r\n\r\n  const setColor = (x, y, key) => {\r\n    let pixel = canvas.current.getContext(\"2d\").getImageData(x, y, 1, 1).data;\r\n    let pixelColor = colorIntegersToString(pixel, 'hex')\r\n    circleRefs[key].style.fill = pixelColor;\r\n    if (props.lightness < 50) {\r\n      circleRefs[key].style.stroke = \"#d4d4d4\";\r\n    } else {\r\n      circleRefs[key].style.stroke = \"#4d4d4d\";\r\n    }\r\n    props.storeColor(pixelColor, key);\r\n  };\r\n\r\n  const setHarmony = () => {\r\n    //sets the angle of the polar offset from +X-axis\r\n    let radOffset;\r\n    let harmony = { total: 0, count: 1 };\r\n    if (props.preset != 1 && props.selectorCount != props.preset) {\r\n      radOffset = [initialOffsetAngle.current, initialOffsetAngle.current];\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        if (harmony.count === Math.round(props.selectorCount / props.preset)) {\r\n          harmony.total++;\r\n          harmony.count = 0;\r\n          radOffset.push(\r\n            (radOffset[i] =\r\n              Math.round((props.selectorAngle) / props.preset) *\r\n              (Math.PI / 180) *\r\n              harmony.total + initialOffsetAngle.current )\r\n          );\r\n        } else {\r\n          radOffset.push(\r\n            (radOffset[i] += props.clusterAngle * (Math.PI / 180))\r\n          );\r\n        }\r\n        harmony.count++;\r\n      }\r\n    } else {\r\n      radOffset = [initialOffsetAngle.current];\r\n      for (let i = 0; i < props.selectorCount; i++) {\r\n        radOffset.push(\r\n          radOffset[i] +\r\n            Math.round((props.selectorAngle) / props.selectorCount) *\r\n              (Math.PI / 180)\r\n        );\r\n      }\r\n    }\r\n    return radOffset;\r\n  };\r\n\r\n  const createCircles = () => {\r\n    let elements = [];\r\n    let radOffset = setHarmony();\r\n    let x = props.CWRadius + props.selectorRadius * Math.cos(initialOffsetAngle.current);\r\n    let y = props.CWRadius + props.selectorRadius * Math.sin(initialOffsetAngle.current);\r\n    elements.push(\r\n      <circle\r\n        cx={x}\r\n        cy={y}\r\n        r={`${props.CWRadius * 0.06}`}\r\n        stroke=\"#a1a1a1\"\r\n        strokeWidth={`${props.CWRadius * 0.003}`}\r\n        onMouseDown={e => handleMouseDown(e)}\r\n        onMouseUp={e => handleMouseUp(e)}\r\n        key={0}\r\n        id={`${0}`}\r\n      />\r\n    );\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x = props.CWRadius + props.selectorRadius * Math.cos(radOffset[i]);\r\n      let y = props.CWRadius + props.selectorRadius * Math.sin(radOffset[i]);\r\n      elements.push(\r\n        <circle\r\n          cx={x}\r\n          cy={y}\r\n          r={`${props.CWRadius * 0.06}`}\r\n          stroke=\"#a1a1a1\"\r\n          strokeWidth={`${props.CWRadius * 0.003}`}\r\n          onMouseDown={e => handleMouseDown(e)}\r\n          onMouseUp={e => handleMouseUp(e)}\r\n          key={i}\r\n          id={`${i}`}\r\n        />\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  const getLinkedState = () => {\r\n    return store.getState().actionReducer.LINKED\r\n  }\r\n\r\n  const getinitialOffsetAngle = () => {\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let dx = props.CWRadius;\r\n    let dy = 0;\r\n    let d0x = x0 - props.CWRadius;\r\n    let d0y = y0 - props.CWRadius;\r\n    return Math.atan2(d0y, d0x) - Math.atan2(dy, dx);\r\n  };\r\n\r\n  const getPointMath = () => {\r\n    //gets the current angles and radii of the points\r\n    //(called once after points are linked)\r\n    let mathVars = [];\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let radius = Math.sqrt(\r\n      (props.CWRadius - x0) * (props.CWRadius - x0) +\r\n        (props.CWRadius - y0) * (props.CWRadius - y0)\r\n    );\r\n    mathVars.push({\r\n      angle: getinitialOffsetAngle(),\r\n      radius: radius\r\n    });\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x1 = circleRefs[i - 1].getAttribute(\"cx\");\r\n      let y1 = circleRefs[i - 1].getAttribute(\"cy\");\r\n      let x2 = circleRefs[i].getAttribute(\"cx\");\r\n      let y2 = circleRefs[i].getAttribute(\"cy\");\r\n\r\n      let radius = Math.sqrt(\r\n        (props.CWRadius - x2) * (props.CWRadius - x2) +\r\n          (props.CWRadius - y2) * (props.CWRadius - y2)\r\n      );\r\n\r\n      let d1x = x1 - props.CWRadius;\r\n      let d1y = y1 - props.CWRadius;\r\n      let d2x = x2 - props.CWRadius;\r\n      let d2y = y2 - props.CWRadius;\r\n\r\n      let angle = Math.atan2(d2y, d2x) - Math.atan2(d1y, d1x);\r\n      mathVars.push({\r\n        angle: angle,\r\n        radius: radius\r\n      });\r\n    }\r\n    return mathVars;\r\n  };\r\n\r\n  const isInCircle = (x, y) => {\r\n    if (\r\n      Math.sqrt(\r\n        (props.CWRadius - x) * (props.CWRadius - x) +\r\n          (props.CWRadius - y) * (props.CWRadius - y)\r\n      ) >\r\n      0.95 * props.CWRadius\r\n    ) {\r\n      handleMouseUp();\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addMouseTrackerLinked = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    let x0 = circleRefs[0].getAttribute(\"cx\");\r\n    let y0 = circleRefs[0].getAttribute(\"cy\");\r\n    let d0x = x0 - props.CWRadius;\r\n    let d0y = y0 - props.CWRadius;\r\n    let radsFromMouse = Math.atan2(d0y, d0x);\r\n    let radsOffset = 0;\r\n\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      circleRefs[0].setAttribute(\"cx\", `${mouseX}`);\r\n      circleRefs[0].setAttribute(\"cy\", `${mouseY}`);\r\n\r\n      setColor(x0, y0, 0);\r\n\r\n      for (let i = 1; i < props.selectorCount; i++) {\r\n        radsOffset += circleCoordinates[i].angle;\r\n\r\n        let x = circleRefs[i].getAttribute(\"cx\");\r\n        let y = circleRefs[i].getAttribute(\"cy\");\r\n\r\n        let angle = radsOffset + radsFromMouse;\r\n        let radius =\r\n          circleCoordinates[i].radius -\r\n          (circleCoordinates[0].radius -\r\n            Math.sqrt(\r\n              (props.CWRadius - mouseX) * (props.CWRadius - mouseX) +\r\n                (props.CWRadius - mouseY) * (props.CWRadius - mouseY)\r\n            ));\r\n\r\n        if (radius < 0) radius = 0;\r\n        if (radius > props.CWRadius) radius = props.CWRadius;\r\n        circleRefs[i].setAttribute(\r\n          \"cx\",\r\n          `${props.CWRadius + radius * Math.cos(angle)}`\r\n        );\r\n        circleRefs[i].setAttribute(\r\n          \"cy\",\r\n          `${props.CWRadius + radius * Math.sin(angle)}`\r\n        );\r\n        setColor(x, y, i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addMouseTracker = event => {\r\n    let mouseX = event.pageX - canvasPosX;\r\n    let mouseY = event.pageY - canvasPosY;\r\n    if (isInCircle(mouseX, mouseY)) {\r\n      currentActiveCircle.setAttribute(\"cx\", `${mouseX}`);\r\n      currentActiveCircle.setAttribute(\"cy\", `${mouseY}`);\r\n      setColor(mouseX, mouseY, currentActiveCircle.id);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    currentActiveCircle = null;\r\n    if (!getLinkedState()) {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.removeEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n    initialOffsetAngle.current = getinitialOffsetAngle();\r\n    props.setSelectorLinkedRadius(circleCoordinates[0].radius)\r\n  };\r\n\r\n  const handleMouseDown = e => {\r\n    let rect = canvas.current.getBoundingClientRect();\r\n    canvasPosX = rect.left;\r\n    canvasPosY = rect.top;\r\n    currentActiveCircle = e.target;\r\n    if (!getLinkedState()) {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTracker);\r\n    } else {\r\n      svg.current.addEventListener(\"mousemove\", addMouseTrackerLinked);\r\n    }\r\n    circleCoordinates = getPointMath();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let radOffset = setHarmony();\r\n    let staggerIncrement = props.selectorStagger / props.selectorCount;\r\n    let staggerOffset = staggerIncrement;\r\n    let XYresizeOffset = props.CWRadius / lastCWRadius.current;\r\n    let x0 =\r\n      props.CWRadius +\r\n      props.selectorRadius * Math.cos(initialOffsetAngle.current);\r\n    let y0 =\r\n      props.CWRadius +\r\n      props.selectorRadius * Math.sin(initialOffsetAngle.current);\r\n    circleRefs[0].setAttribute(\"cx\", `${x0 * XYresizeOffset}`);\r\n    circleRefs[0].setAttribute(\"cy\", `${y0 * XYresizeOffset}`);\r\n    for (let i = 1; i < props.selectorCount; i++) {\r\n      let x =\r\n        props.CWRadius +\r\n        (props.selectorRadius - staggerOffset) * Math.cos(radOffset[i]);\r\n      let y =\r\n        props.CWRadius +\r\n        (props.selectorRadius - staggerOffset) * Math.sin(radOffset[i]);\r\n      circleRefs[i].setAttribute(\"cx\", `${x * XYresizeOffset}`);\r\n      circleRefs[i].setAttribute(\"cy\", `${y * XYresizeOffset}`);\r\n      staggerOffset += staggerIncrement;\r\n    }\r\n  }, [\r\n    props.selectorStagger,\r\n    props.selectorCount,\r\n    props.selectorRadius,\r\n    props.selectorAngle,\r\n    props.clusterAngle,\r\n    props.CWRadius\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < props.selectorCount; i++) {\r\n      let x = circleRefs[i].getAttribute(\"cx\");\r\n      let y = circleRefs[i].getAttribute(\"cy\");\r\n      setColor(x, y, i);\r\n    }\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    initialOffsetAngle.current = 0\r\n  },[props.preset, props.reset])\r\n\r\n  useLayoutEffect(() => {\r\n    lastCWRadius.current = props.CWRadius;\r\n    circleRefs = svg.current.children;\r\n    circleCoordinates = getPointMath();\r\n  });\r\n\r\n  return (\r\n    <svg\r\n      className=\"selector\"\r\n      ref={svg}\r\n      width={`${props.CWRadius * 2}`}\r\n      height={`${props.CWRadius * 2}`}\r\n      viewBox={`0 0 ${props.CWRadius * 2} ${props.CWRadius * 2}`}\r\n    >\r\n      {createCircles()}\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    reset: state.actionReducer.RESET,\r\n    preset: state.actionReducer.PRESET,\r\n    clusterAngle: state.actionReducer.CLUSTER_ANGLE,\r\n    CWRadius: state.actionReducer.VIEWPORT_HEIGHT * 0.325\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storeColor,\r\n  setSelectorLinkedRadius\r\n};\r\n\r\nconst Selectors = connect(mapStateToProps, mapDispatchToProps)(Selectors_);\r\n\r\nexport default Selectors;\r\n","export const hexToRgb = color => {\n  let convert = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n  let result = `rgb(${parseInt(convert[1], 16)}, ${parseInt(convert[2],16)}, ${parseInt(convert[3], 16)})`;\n  return result;\n};\n\nexport const rgbToHex = color => {\n  color.split(\",\");\n  let r = parseInt(color[0].substring(4));\n  let g = parseInt(color[1]);\n  let b = parseInt(color[2]);\n  let result =\n    \"#\" +\n    ((1 << 24) + (r << 16) + (g << 8) + b)\n      .toString(16)\n      .toUpperCase()\n      .slice(1);\n  return result;\n};\n\nexport const colorIntegersToHSL = ( rgb ) => {\n  rgb = [rgb[0]/255, rgb[1]/255, rgb[2]/255];\n  let max = rgb[0] > rgb[1] ? (rgb[0] > rgb[2] ? 0 : 2) : (rgb[1] > rgb[2] ? 1 : 2);\n  let min = rgb[0] < rgb[1] ? (rgb[0] < rgb[2] ? 0 : 2) : (rgb[1] < rgb[2] ? 1 : 2);\n  let value = rgb[max];\n  let chroma = rgb[max] - rgb[min];\n  let lightness = (rgb[max]+rgb[min])/2\n  let hue;\n  let saturation = \n    lightness === 0 || lightness === 1 ? 0 : (value - lightness)/Math.min(lightness, (1 - lightness));\n\n  switch (value) {\n    case rgb[0]:\n      hue = 60 * (((rgb[1]-rgb[2])/chroma))\n      break;\n    case rgb[1]:\n      hue = 60 * (2+(rgb[2]-rgb[0])/chroma)\n      break;\n    case rgb[2]:\n      hue = 60 * (4+(rgb[0]-rgb[1])/chroma)\n      break;\n  }\n  hue = chroma === 0 ? 0 : (hue < 1 ? Math.round(hue+360) :  Math.round(hue))\n  saturation = Math.round(saturation*100);\n  lightness = Math.round(lightness*100);\n  \n  console.log(hue+`, `+saturation+`, `+lightness)\n}\n\nexport const colorIntegersToString = (rgb, mode) => {\n    let result;\n    if (mode === 'hex') {\n        result =     \"#\" +\n        ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2])\n          .toString(16)\n          .toUpperCase()\n          .slice(1);\n    }\n    else if (mode === 'rgb') {\n        result = `rgb(${rgb[1]},${rgb[2]},${rgb[3]})`;\n    }\n    return result;\n}\n\nexport const stringToColorIntegers = color => {\n  let result;\n  if (color.charAt(0) === \"#\") {\n    let convert = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n    result = [parseInt(convert[1], 16),parseInt(convert[2],16), parseInt(convert[3], 16)]\n\n  } else if (color.charAt(0) === \"r\") {\n    color.split(\",\");\n    let r = parseInt(color[0].substring(4));\n    let g = parseInt(color[1]);\n    let b = parseInt(color[2]);\n    result = [r,g,b]\n  }\n  return result\n};\n\nexport const incrementLightness = ( rgb, amount ) => {\n  rgb.forEach(channel => {\n    channel += amount;\n    if (channel === 0) {\n      return 0\n    }\n  })\n  return rgb;\n}\n\n/*\nexport const incrementSaturation = ( rgb ) => {\n  let dominantChannel = rgb[0] > rgb[1] ? (rgb[0] > rgb[2] ? 0 : 2) : (rgb[1] > rgb[2] ? 1 : 2)\n\n\n  rgb.forEach(channel, i => {\n    channel + amount;\n    if (channel === 0) {\n      return 0\n    }\n  })\n  return rgb;\n}\n*/","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetState, setLinkedState } from \"../../../redux/actions/actions\";\r\nimport Selectors from \"../Selectors/Selectors\";\r\nimport * as xLUT from \"./xLUT.json\";\r\nimport * as yLUT from \"./yLUT.json\";\r\nimport \"./ColorWheel.scss\";\r\n\r\nconst ColorWheel_ = props => {\r\n  const canvas = useRef(null);\r\n\r\n  const generateGradient = () => {\r\n    let canvasContext = canvas.current.getContext(\"2d\");\r\n    canvasContext.clearRect(0, 0, 130*2, 130*2);\r\n    for (var i = 0; i < 3600; i += 1) {\r\n      let value = i / 10;\r\n       let rad = ((value - 90) * Math.PI) / 180;\r\n       let x = 130 + 130 * Math.cos(-rad)\r\n       let y = 130 + 130 * Math.sin(-rad)\r\n      canvasContext.beginPath();\r\n      let gradient = canvasContext.createLinearGradient(\r\n        130,\r\n        130,\r\n        x, y\r\n        /*xLUT.default[value],\r\n        yLUT.default[value]*/\r\n      );\r\n      \r\n\r\n      gradient.addColorStop(\"0\", `${props.lightness > 45 ? \"white\" : \"black\"}`);\r\n      gradient.addColorStop(\r\n        \"1\",\r\n        `hsl(${value}, ${props.saturation}%, ${props.lightness}%)`\r\n      );\r\n      \r\n      canvasContext.strokeStyle = gradient;\r\n\r\n      canvasContext.moveTo(130, 130);\r\n      canvasContext.lineTo(x, y);\r\n      canvasContext.stroke();\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    let canvasContext = canvas.current.getContext(\"2d\");\r\n    canvasContext.scale(props.CWRadius/130,props.CWRadius/130)\r\n  },[props.CWRadius])\r\n\r\n  useLayoutEffect(() => {\r\n    generateGradient();\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div className={`color-wheel ui-block ${props.darkMode ? \"dark\" : \"\"}`} style={{height: `${props.CWRadius*2}`, width: `${props.CWRadius*2}`}}>\r\n      <button\r\n        className={`button button-left ${props.linked ? \"active\" : \"\"} ${\r\n          props.darkMode ? \"dark\" : \"\"\r\n        }`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.setLinkedState();\r\n        }}\r\n      >\r\n        {props.linked ? \"Unlink\" : \"Link\"}\r\n      </button>\r\n      <div className=\"gradient\" >\r\n        <Selectors colorsContainer={props.colorsContainer} canvas={canvas} />\r\n        <canvas width={`${props.CWRadius*2}`} height={`${props.CWRadius*2}`} ref={canvas} />\r\n      </div>\r\n\r\n      <button\r\n        className={`button button-right ${props.darkMode ? \"dark\" : \"\"}`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.resetState();\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    linked: state.actionReducer.LINKED,\r\n    CWRadius: state.actionReducer.VIEWPORT_HEIGHT * 0.325\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  resetState,\r\n  setLinkedState\r\n};\r\n\r\nconst ColorWheel = connect(mapStateToProps, mapDispatchToProps)(ColorWheel_);\r\n\r\nexport default ColorWheel;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode\r\n} from \"../../../redux/actions/actions\";\r\nimport \"./Controls.scss\";\r\nimport \"../../Slider/Slider.scss\";\r\n\r\nconst Controls_ = props => {\r\n  const staggerSlider = useRef(null);\r\n  const radiusSlider = useRef(null);\r\n\r\n  useEffect(() => {\r\n    props.setSelectorStagger(staggerSlider.current.value);\r\n  }, [props.selectorRadius]);\r\n\r\n  useEffect(() => {\r\n    props.setSelectorRadius(radiusSlider.current.value);\r\n  }, [props.selectorAngle]);\r\n\r\n  return (\r\n    <div className={`controls ui-half-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"controls-wrapper\">\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">Lightness: {props.lightness}%</p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={90}\r\n            step={1}\r\n            value={props.lightness}\r\n            onChange={val => {\r\n              props.setLightness(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">Saturation: {props.saturation}%</p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={100}\r\n            step={1}\r\n            value={props.saturation}\r\n            onChange={val => {\r\n              props.setSaturation(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Number of Points: {props.selectorCount}\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={props.preset}\r\n            max={15}\r\n            step={props.preset}\r\n            value={props.selectorCount}\r\n            onChange={val => {\r\n              props.setSelectorCount(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Point Spacing Angle:{\" \"}\r\n            {(\r\n              Math.round((props.selectorAngle / props.selectorCount) * 10) / 10\r\n            ).toFixed(1)}\r\n            º\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            min={10}\r\n            max={360}\r\n            step={1}\r\n            value={props.selectorAngle}\r\n            onChange={val => {\r\n              props.setSelectorAngle(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Distance From Origin:{\" \"}\r\n            {(Math.round((props.selectorLinkedRadius / (props.viewport * 0.325)) * 1000) / 10).toFixed(0)}\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            ref={radiusSlider}\r\n            min={1}\r\n            max={0.325 * props.viewport}\r\n            step={1}\r\n            value={props.selectorLinkedRadius}\r\n            onChange={val => {\r\n              props.setSelectorRadius(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <p className=\"slider-label\">\r\n            Distance Stagger:{\" \"}\r\n            {(Math.round(props.selectorStagger * 10) / 10).toFixed(0)}\r\n          </p>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n            ref={staggerSlider}\r\n            min={-(0.315 * props.viewport - props.selectorRadius)}\r\n            max={props.selectorRadius}\r\n            step={1}\r\n            value={props.selectorStagger}\r\n            onChange={val => {\r\n              props.setSelectorStagger(val.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    saturation: state.actionReducer.SATURATION,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    selectorLinkedRadius: state.actionReducer.SELECTOR_LINKED_RADIUS,\r\n    selectorStagger: state.actionReducer.SELECTOR_STAGGER,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    preset: state.actionReducer.PRESET,\r\n    viewport: state.actionReducer.VIEWPORT_HEIGHT\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLightness,\r\n  setSaturation,\r\n  setSelectorCount,\r\n  resetState,\r\n  setLinkedState,\r\n  setSelectorAngle,\r\n  setSelectorRadius,\r\n  setSelectorStagger,\r\n  setDarkMode\r\n};\r\n\r\nconst Controls = connect(mapStateToProps, mapDispatchToProps)(Controls_);\r\n\r\nexport default Controls;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setSelectorCount,\r\n  setDarkMode,\r\n  setClusterAngle,\r\n  setPreset\r\n} from \"../../../redux/actions/actions\";\r\nimport \"./Presets.scss\";\r\nimport \"../../Slider/Slider.scss\";\r\n\r\nconst Presets_ = props => {\r\n\r\n  useEffect(() => {\r\n    if (props.preset != 1) {\r\n      props.setSelectorCount(props.preset * 3);\r\n    }\r\n  }, [props.preset]);\r\n\r\n  return (\r\n    <div className={`presets ui-half-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"presets-wrapper\">\r\n        <div className=\"presets-grid\">\r\n          <button\r\n            className={`preset dyad ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 2 ? \"active\" : \"\"\r\n            } `}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 2)) props.setPreset(2);\r\n            }}\r\n          />\r\n          <button\r\n            className={`preset triad  ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 3 ? \"active\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 3)) props.setPreset(3);\r\n            }}\r\n          />\r\n          <button\r\n            className={`preset tetrad  ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 4 ? \"active\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 4)) props.setPreset(4);\r\n            }}\r\n          />\r\n          <button\r\n            className={`preset pentad  ${props.darkMode ? \"dark\" : \"\"} ${\r\n              props.preset === 5 ? \"active\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!(props.preset === 5)) props.setPreset(5);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"slider-container\"\r\n        style={{ marginTop: `${props.Viewport * 0.1}` }}\r\n      >\r\n        <p className=\"slider-label\">\r\n          Cluster Spacing Angle:{\" \"}\r\n          {(Math.round(props.clusterAngle * 10) / 10).toFixed(1)}º\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          className={`slider ${props.darkMode ? \"dark\" : \"\"}`}\r\n          min={1}\r\n          max={\r\n            (props.selectorAngle / props.preset / props.selectorCount) *\r\n            props.preset\r\n          }\r\n          step={1}\r\n          value={props.clusterAngle}\r\n          onChange={val => {\r\n            props.setClusterAngle(val.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    selectorAngle: state.actionReducer.SELECTOR_ANGLE,\r\n    selectorRadius: state.actionReducer.SELECTOR_RADIUS,\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    preset: state.actionReducer.PRESET,\r\n    clusterAngle: state.actionReducer.CLUSTER_ANGLE,\r\n    Viewport: state.actionReducer.VIEWPORT_HEIGHT\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSelectorCount,\r\n  setDarkMode,\r\n  setClusterAngle,\r\n  setPreset\r\n};\r\n\r\nconst Presets = connect(mapStateToProps, mapDispatchToProps)(Presets_);\r\n\r\nexport default Presets;\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { stringToColorIntegers, colorIntegersToHSL } from \"../../../util/color-utility\"\r\n\r\nconst ColorBlock_ = props => {\r\n  const colorBlock = useRef(null);\r\n  let height = (0.575*props.Viewport) / props.selectorCount;\r\n  let textColor = props.lightness < 50 ? \"#bdbdbd\" : \"#404040\";\r\n\r\n  const copyColor = event => {\r\n   colorIntegersToHSL(stringToColorIntegers(props.color))\r\n    let color = props.color;\r\n    if (!props.hash) {\r\n      color = color.substr(1);\r\n    }\r\n    if (props.quotes) {\r\n      color = `'${color}'`;\r\n    }\r\n    copy(color);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={colorBlock}\r\n      className=\"color-block\"\r\n      style={{\r\n        height: height,\r\n        color: textColor,\r\n        backgroundColor: props.color\r\n      }}\r\n      onClick={event => copyColor(event)}\r\n    >\r\n      <div\r\n        className=\"copy-prompt\"\r\n        style={{ height: height, paddingTop: `${(height - (0.025*props.Viewport)) / 2}px` }}\r\n      >\r\n        <p className=\"color-text hover-cta\">{props.color}</p>\r\n        <p className=\"copy-text hover-cta\">Click to copy</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    hash: state.actionReducer.HASH,\r\n    quotes: state.actionReducer.QUOTES,\r\n    Viewport: state.actionReducer.VIEWPORT_HEIGHT\r\n  };\r\n}\r\n\r\nconst ColorBlock = connect(mapStateToProps)(ColorBlock_);\r\n\r\nexport default ColorBlock;\r\n","import React from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"../../../redux/reducers/reducers\";\r\nimport ColorBlock from \"./ColorBlock\";\r\nimport { setQuotes, setHash } from \"../../../redux/actions/actions\";\r\nimport \"./CurrentColors.scss\";\r\n\r\nconst CurrentColors_ = props => {\r\n  const copyAllColors = () => {\r\n    let colorArr = [...store.getState().actionReducer.COLORS];\r\n\r\n    for (let i = 0; i < colorArr.length; i++) {\r\n      if(!props.hash){\r\n        colorArr[i] = colorArr[i].substr(1)\r\n      }\r\n      if(props.quotes){\r\n        colorArr[i] = `'${colorArr[i]}'`\r\n      }\r\n    }\r\n\r\n    copy(colorArr);\r\n  };\r\n\r\n  const renderColorBlocks = props.colors.map((color, i) => (\r\n    <ColorBlock color={color} key={i} />\r\n  ));\r\n\r\n  return (\r\n    <div className={`current-colors ui-block ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"colors-container\" ref={props.paletteRef}>\r\n        {renderColorBlocks}\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.hash ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setHash();\r\n          }}\r\n        >\r\n          Hash\r\n        </button>\r\n        <button\r\n          className={`button ${props.quotes ? \"active\" : \"\"} ${\r\n            props.darkMode ? \"dark\" : \"\"\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            props.setQuotes();\r\n          }}\r\n        >\r\n          Quotes\r\n        </button>\r\n      </div>\r\n      <div className=\"control-container\">\r\n        <button\r\n          className={`button ${props.darkMode ? \"dark\" : \"\"}`}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            copyAllColors();\r\n          }}\r\n        >\r\n          Copy all\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectorCount: state.actionReducer.SELECTOR_COUNT,\r\n    lightness: state.actionReducer.LIGHTNESS,\r\n    colors: state.actionReducer.COLORS,\r\n    hash: state.actionReducer.HASH,\r\n    quotes: state.actionReducer.QUOTES,\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setQuotes,\r\n  setHash\r\n};\r\n\r\nconst CurrentColors = connect(mapStateToProps, mapDispatchToProps)(CurrentColors_);\r\n\r\nexport default CurrentColors;\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deletePalette, setCurrentPalette } from \"../../redux/actions/actions\";\r\nimport \"./PaletteTracker.scss\";\r\n\r\nconst PaletteBlock_ = props => {\r\n  let width = (0.1623 * props.Viewport) / props.palette.length;\r\n\r\n  const renderColors = props.palette.map((color, i) => (\r\n    <div\r\n      className=\"block-color\"\r\n      style={{ backgroundColor: color, width: `${width}px` }}\r\n      key={i}\r\n    ></div>\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className={`palette-block \r\n      ${props.editor ? \"editor-mode\" : \"\"}\r\n      ${props.darkMode ? \"dark\" : \"\"} \r\n      ${props.activePalette.index === props.index ? \"active-palette\" : \"\"} \r\n      ${props.deleteMode ? \"delete-mode\" : \"\"}`} \r\n      onClick={() => {\r\n        if (props.deleteMode) {\r\n          props.deletePalette(props.index);\r\n        } else if (props.editor) {\r\n          props.setCurrentPalette(props.index);\r\n        }\r\n      }}\r\n    >\r\n      <div className={`icon-overlay`} />\r\n      {renderColors}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    Viewport: state.actionReducer.VIEWPORT_HEIGHT,\r\n    activePalette: state.actionReducer.ACTIVE_PALETTE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  deletePalette,\r\n  setCurrentPalette\r\n};\r\n\r\nconst PaletteBlock = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PaletteBlock_);\r\n\r\nexport default PaletteBlock;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { storePalette } from \"../../redux/actions/actions\";\r\nimport \"./PaletteTracker.scss\";\r\nimport PaletteBlock from \"./PaletteBlock\";\r\nimport { colorIntegersToString } from \"../../util/color-utility\"\r\n\r\n\r\nconst PaletteTracker_ = props => {\r\n  const [deleteMode, setDeleteMode] = useState(false);\r\n \r\n  const renderPaletteBlocks = props.palettes.map((palette, i) => (\r\n    <PaletteBlock\r\n      palette={palette}\r\n      key={i}\r\n      deleteMode={deleteMode}\r\n      index={i}\r\n      editor={props.editor}\r\n    />\r\n  ));\r\n  \r\n  return (\r\n    <div className={`palette-tracker ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <button\r\n        className={`button palettes-button ${props.darkMode ? \"dark\" : \"\"}`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          props.storePalette();\r\n        }}\r\n      >\r\n        Add\r\n      </button>\r\n      <button\r\n        className={`button palettes-button ${props.darkMode ? \"dark\" : \"\"} ${\r\n            deleteMode ? \"active\" : \"\"\r\n          }`}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setDeleteMode(!deleteMode);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n      <div className=\"palette-blocks-wrapper\">{renderPaletteBlocks}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    palettes: state.actionReducer.PALETTES\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  storePalette,\r\n};\r\n\r\nconst PaletteTracker = connect(mapStateToProps, mapDispatchToProps)(PaletteTracker_);\r\n\r\nexport default PaletteTracker;\r\n","import React, { useRef } from \"react\";\r\nimport ColorWheel from \"./ColorWheel/ColorWheel\";\r\nimport Controls from \"./Controls/Controls\";\r\nimport Presets from \"./Presets/Presets\";\r\nimport CurrentColors from \"./CurrentColors/CurrentColors\";\r\nimport \"./ColorPicker.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport PaletteTracker from \"../PaletteTracker/PaletteTracker\";\r\n\r\nconst ColorPicker_ = props => {\r\n  const colorContainer = useRef(null);\r\n\r\n  return (\r\n    <div className={`color-picker-interface ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className=\"settings-wrapper\">\r\n        <Presets />\r\n        <Controls />\r\n      </div>\r\n      <ColorWheel colorsContainer={colorContainer} />\r\n      <CurrentColors paletteRef={colorContainer} />\r\n      <PaletteTracker editor={false}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst ColorPicker = connect(mapStateToProps, )(ColorPicker_);\r\n\r\nexport default ColorPicker;\r\n","import React, { useRef } from \"react\";\r\nimport \"./PaletteEditor.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport PaletteTracker from \"../PaletteTracker/PaletteTracker\";\r\n\r\nconst ColorPicker_ = props => {\r\n  const colorContainer = useRef(null);\r\n\r\n  return (\r\n    <div className={`palette-editor-interface ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <PaletteTracker editor={true}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE\r\n  };\r\n}\r\n\r\nconst ColorPicker = connect(mapStateToProps, )(ColorPicker_);\r\n\r\nexport default ColorPicker;\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setViewport, setDarkMode, setMode } from \"./redux/actions/actions\";\r\nimport \"./App.scss\";\r\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\nimport PaletteEditor from \"./components/PaletteEditor/PaletteEditor\";\r\n\r\nconst App_ = props => {\r\n  useLayoutEffect(() => {\r\n    window.addEventListener(\"resize\", () => props.setViewport());\r\n  });\r\n\r\n  const selectedMode = () => {\r\n    switch (props.appMode) {\r\n      case 0:\r\n        return <ColorPicker />;\r\n      case 1:\r\n        return <PaletteEditor />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${props.darkMode ? \"dark\" : \"\"}`}>\r\n      <div className={`wrapper ${props.darkMode ? \"dark\" : \"\"}`}>\r\n        <div className={`logo-container ${props.darkMode ? \"hidden\" : \"\"}`} />\r\n        <div\r\n          className={`logo-container ${props.darkMode ? \"dark\" : \"hidden\"}`}\r\n        />\r\n        <div\r\n          className={`ui-container active-tab ${props.darkMode ? \"dark\" : \"\"}`}\r\n        >\r\n          <div className=\"navbar-container\">\r\n            <div\r\n              className={`tab color-picker-tab ${\r\n                props.appMode === 0 ? \"active-tab\" : \"\"\r\n              } ${props.darkMode ? \"dark\" : \"\"}`}\r\n              onClick={() => props.setMode(0)}\r\n            >\r\n              Color Picker\r\n            </div>\r\n            <div\r\n              className={`shadow-tab tab color-picker-tab ${\r\n                props.darkMode ? \"dark\" : \"\"\r\n              }`}\r\n            />\r\n            <div\r\n              className={`tab editor-tab ${\r\n                props.appMode === 1 ? \"active-tab\" : \"\"\r\n              } ${props.darkMode ? \"dark\" : \"\"}`}\r\n              onClick={() => props.setMode(1)}\r\n            >\r\n              Palette Editor\r\n            </div>\r\n            <div\r\n              className={`shadow-tab tab editor-tab ${\r\n                props.darkMode ? \"dark\" : \"\"\r\n              }`}\r\n            />\r\n            <button\r\n              className={`button set-dark ${props.darkMode ? \"dark\" : \"\"}`}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                props.setDarkMode();\r\n              }}\r\n            >\r\n              {props.darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n            </button>\r\n          </div>\r\n          {selectedMode()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    darkMode: state.actionReducer.DARK_MODE,\r\n    appMode: state.actionReducer.MODE\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setViewport,\r\n  setDarkMode,\r\n  setMode\r\n};\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps)(App_);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store}  from \"./redux/reducers/reducers\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nconst vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\nconst vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}